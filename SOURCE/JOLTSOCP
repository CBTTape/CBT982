         MACRO
&NAME    JOLTSOCP                                                      .
               &ALIAS=,        NO ALIASES FOR THE COMMAND              .
               &CAT=YES,       SEARCH THE CATALOG                      .
               &CMDLIB='JOL40.CMDLIB', SYSTEM MACLIB                   .
               &C1=,           DEFAULT CARD1                           .
               &C2=,           DEFAULT CARD2                           .
               &C3=,           DEFAULT CARD3                           .
               &C4=,           DEFAULT CARD4                           .
               &DC='//SYSUDUMP DD  SYSOUT=X', DEFAULT DUMPCARD         .
               &DYNAMIC=NO,    DEFAULT IS JCL GENERATE                 .
               &FLAG=0,        DEFAULT FOR FLAG IS 0                   .
               &GENCB=YES,     EXPAND ALL OS MAPPING MACROES           .
               &INCLIB=JOL,    USER INCLUDE LIBRARY                    .
               &JCL=,          DEFAULT JCL DATASET                     .
               &JCLBLK=4080,   DEFAULT JCL BLOCK SIZE                  .
               &JLOAD=,        JOL LOAD LIBRARIES                      .
               &LET=(8,PROMPT), SUBMIT JCL EVEN IF ERRORS OCCURRED*    .
               &LIST=,         SYSOUT CLASS FOR COMPILED LISTINGS      .
               &OS=???,        NAME OF OPERATING SYSTEM                .
               &PCOM=YES,      PRINT COMMENTS                          .
               &PGM=$JOLCP40,  NAME OF JOL COMPILER                    .
               &PEXPAND=NO,    PRINT EXPANDED JOL MACROS               .
               &PJCL=NO,       DO NOT PRINT JCL                        .
               &PINCLUD=YES,   PRINT "INCLUDED" JOL                    .
               &PMACRO=NO,     DO NOT LIST MACROES                     .
               &POPT=NO,       DO NOT PRINT JOL OPTIONS                .
               &PRINT=$$JOL,   DEFAULT PRINT FILE (JOL.LIST)           .
               &PREFOUT=USERPREFIX, USER CURRENT PREFIX FOR PRINT,JCL  .
               &PRTBLK=4080,   DEFAULT PRINT FILE BLOCK SIZE           .
               &SUB=NO,        SUBMIT JCL EVEN IF ERRORS OCCURRED*     .
               &SYMS='TSOCLASS=X', SAY THIS TO JOL                     .
               &SYNCHK=NO,     NO SYNTAX CHECKING (CREATE AND EXECUTE) .
               &TERM=YES,      DEFAULT FOR TERM IS TERM                .
               &TEST=NO,       DO NOT EXECUTE GENERATE JCL             .
               &TSO=NO,        DEFAULT IS JCL GENERATE                 .
               &UNITJCL=SYSDA, UNIT NAME FOR THE GENERATED JCL         .
               &UNITWRK=VIO,   UNIT NAME FOR $$JWRK1 AND $$JWRK2       .
               &VSAMCAT=YES    YES IF VSAM CATALOGS ARE IN USE
.* A NOTE TO THE UNSUSPECTING MAINTENANCE PROGRAMMER
.* THE RULES FOR FINDING DATASET ALLOCATIONS ON MVS AND OSIV/F4
.*   TCBJSCB POINTS TO JSCB
.*   JSCDSABQ POINTS TO QDB
.*   QDBFELMP POINTS TO FIRST DSAB
.*   QDBLELMP POINTS TO LAST DSAB
.*   DSABFCHN POINTS TO THE NEXT DSAB
.*   DSABBCHN POINTS TO THE PREVIOUS DSAB
.*   DSABTIOT POINTS TO THE TIOT ENTRY
.*   TIOT+C POINTS TO JFCB IN SWA (NOTE 3 BYTES FROM +C, NOT 4)
.*
.*   WHY ALL THIS BOTHER?
.*
.*    DSAB CONTAINS USEFUL FLAGS SUCH AS IN-USE ATTRIBUTE ETC
.*
.*  TO FIND THE JOB ACCOUNTING INFO
.*   1) FIND CURRENT TCB
.*   2) LOAD JSCB ADDRESS FROM TCBJSCB
.*   3) LOAD JCT ADDRESS FROM JSCBJCT
.*   4) LOAD ACT ADDRESS FROM JCT+X'38'
.*   5) ACT+X'1E' CONTAINS NUMBER OF ACCOUNTING FIELDS
.*   6) ACCOUNTING FIELDS START AT ACT+X'20'
.*      THESE HAVE THE FOLLOWING FORMAT:
.*     A) FIRST BYTE IS THE LENGTH EXCLUSIVE OF THIS BYTE
.*     B) SECOND BYTE IS THE FIRST IN THE STRING
.*
.*   7) ACT FOR STEP IS FOUND VIA TCBJSCB, JSCBSCT, SCT+X'30'
.*
.*
.* ABOUT THE MACRO KEYWORDS:
.*
.* ALIAS       SPECIFIES THE ALTERNATIVE NAMES FOR THE GENERATED
.*               COMMAND PROCESSOR. THESE ARE ESTABLISHED WITH THE
.*               LINKAGE EDITOR ALIAS STATEMENT, GENERATED DURING
.*               THIS ASSEMBLY. IF THIS COMMAND PROCESSOR IS
.*               RE-LINKED LATER, YOU WILL NEED TO SUPPLY YOUR OWN
.*               ALIAS STATEMENTS.
.*
.* CMDLIB      SPECIFIES THE DEFAULT LIBRARIES TO BE ASSOCIATED WITH
.*               THE COMMAND PROCESSOR'S MACLIB KEYWORD
.*
.* DYNAMIC     SPECIFIES THAT JOL USES THE DYNAMIC ALLOCATION ROUTINES
.*               INSTEAD OF JCL.
.*
.* INCLIB      SPECIFIES THE DEFAULT LIBRARIES TO BE ASSOCIATED WITH
.*               THE COMMAND PROCESSOR'S INCLUDE KEYWORD
.*
.* JCL         SPECIFIES THE DEFAULT DATASET NAME FOR THE GENERATED
.*              JCL. IF OMITTED, THE JCL IS WRITTEN TO A TEMPORARY
.*              DATASET AND CANNOT BE ACCESSED (EASILY) BY THE
.*              TERMINAL USER. IF IT IS SPECIFIED THE JCL CANNOT
.*              BE WRITTEN TO A TEMPORARY DATASET.
.*
.* JLOAD       SPECIFIES THE JOL LOAD LIBRARIES. THIS CANNOT BE
.*              OVER-RIDDEN AT EXECUTION TIME.
.*
.* LET         SPECIFIES WHETHER OR NOT THE LET COMPILER OPTION IS TO
.*              BE SELECTED BY DEFAULT. IF THE COMPILER RETURNS A
.*                RETURN CODE GREATER THAN THE VALUE SPECIFIED BY
.*                THIS KEYWORD, HE  IS ASKED WHETHER THE JOB SHOULD BE
.*                 SUBMITTED. HOWEVER, IF SUBMIT IS SPECIFIED, THE
.*                 QUESTION IS NOT ASKED, AND THE JOB IS SUBMITTED.
.*
.* LIST        SPECIFIES THE DEFAULT SYSOUT CLASS FOR JOL COMPILER
.*              MESSAGES FOR WHEN THE TERMINAL USER SELECTS THE
.*              LIST OPTION.
.*
.* OS          SPECIFIES THE VERSION OF OS FOR WHICH THE COMMAND
.*              PROCESSOR IS BEING GENERATED. THIS IS USED DURING
.*              ASSEMBLY TO SELECT PARTICULAR MAPPING MACROES.
.*             VALID SPECIFICATIONS ARE MVS AND OSIV/F4.
.*
.* PEXPAND     SPECIFIES WHETHER OR NOT THE PEXPAND OPTION SHOULD
.*              BE SELECTED BY DEFAULT.
.*
.* PGM         NAMES THE JOL COMPILER.
.*
.* PINCLUD     SPECIFIES WHETHER OR NOT THE PINCLUDE OPTION SHOULD
.*              BE SELECTED BY DEFAULT.
.*
.* PMACRO      SPECIFIES WHETHER OR NOT THE PMACRO OPTION SHOULD BE
.*               SELECTED BY DEFAULT.
.*
.* PRINT       SPECIFIES THE DEFAULT PRINT DATASET FOR THE JOL COMPILER
.*              MESSAGES.
.*             IT MAY NAME A DATASET OR BE AN ASTERISK (TO THE
.*              TERMINAL).
.*             IF PRINT='NULLFILE' IS SPECIFIED, THEN NOPRINT IS
.*              THE DEFAULT PRINT KEYWORD
.*
.* SUB         SPECIFIES WHETHER OR NOT THE LET COMPILER OPTION IS TO
.*               BE SELECTED BY DEFAULT. JCL GENERATED WILL BE
.*              SUBMITTED WITHOUT ASKING THE TERMINAL USER, EVEN IF
.*               ERRORS ARE DETECTED BY THE JOL COMPILER. THIS OPTION
.*               FORCES THE USE OF THE LET OPTION.
.*
.* SYMS        SPECIFIES THE DEFAULT VALUE FOR THE COMMAND PROCESSOR'S
.*              SYMS KEYWORD.
.*
.* SYSDA       SPECIFIES THE UNIT NAME TO BE USED FOR TEMPORARY
.*              DATASET ALLOCATIONS
.*
.* TERM        SPECIFIES WHETHER OR NOT THE TERMINAL OPTION SHOULD
.*              BE SELECTED BY DEFAULT.
.*
.* TEST        SPECIFIES WHETHER OR NOT THE TEST OPTION SHOULD BE
.*              SELECTED BY DEFAULT
.*             THE TEST OPTION RESULTS IN THE JOL COMMAND ALWAYS ASKING
.*              WHETHER TO SUBMIT THE JCL GENERATED BY THE JOL COMPILER
.*
.* TSO         SPECIFIES THAT JOL USES THE DYNAMIC ALLOCATION ROUTINES
.*               AND RUNS THE JOB DIRECTLY UNDER TSO.
.*
.* VSAMCAT     SPECIFIES WHETHER VSAM USER CALALOGUES ARE IN USE IN THE
.*               SYSTEM. IF "VSAMCAT=NO" IS SPECIFIED WHEN VSAM
.*               CATALOGUES ARE TO BE USED TO LOCATE USER DATASETS,
.*               THE DATASET QUALIFY ROUTINE IS LIKELY NOT TO RESOLVE
.*               DATASET NAMES CORRECTLY.
.*             IF VSAM CATALOGUES  ARE NOT IN USE, THE DATASET
.*             QUALIFY ROUTINE CAN CORRECTLY RESOLVE SOME DATASET NAMES
.*              WHICH IT CANNOT OTHERWISE RESOLVE.
.*
.* VALID VALUES FOR TERM, PINCLUD, TEST, PMACRO, PEXPAND, AND VSAMCAT
.*   ARE "YES" AND "NO".
.* LET MAY BE  USED TO SPECIFY "YES", "NO", OR A NUMERIC VALUE.
.*
.*  IF ANY KEYWORDS ARE INCORRECTLY SPECIFIED, EDITING CONTINUES
.*    BUT THE MACRO WILL NOT EXPAND.
.*
.* BE WARNED.
.*
.*
.*
         ACTR  400000        SEEMS TO REQUIRE MORE THAN THE DEFAULT
         GBLB  &UJT
         LCLA  &A,&A2
         LCLA  &LETVAL
         LCLB  &B,&B1          FLAG
         LCLB  &ERR            ERROR FLAG
         GBLB  &MVS,&F4,&X8
         LCLB  &JCSWAS
&JCSWAS  SETB  1
&UJT     SETB  1
         LCLC  &LETPR
         LCLC  &C,&CX,&WRKUNIT,&PRE,&SOUT
         LCLC  &PE,&PI,&PM,&LT,&SB,&TST
         LCLC  &FL,&CT,&PJ,&PO,&PC,&SYNT
         LCLC  &OSTYPE
         LCLC  &TITLE
&LETPR   SETC  'PROMPT'            DEFAULT FOR SECOND LET SUBFIELD
&TITLE   SETC  'JOL/TSO INTERFACE       '
&NAME    TITLE '&TITLE MAINLINE CODE'
         AIF   ('&TEST' EQ 'YES' OR '&TEST' EQ 'NO').TS010
&ERR     SETB  1
         MNOTE 12,'INVALID TEST VALUE &TEST'
.TS010   ANOP
         AIF   ('&PINCLUD' EQ 'YES' OR '&PINCLUD' EQ 'NO').TS020
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR PINCLUD &PINCLUD'
.TS020   ANOP
         AIF   ('&PMACRO' EQ 'YES' OR '&PMACRO' EQ 'NO').TS030
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR PMACRO &PMACRO'
.TS030   ANOP
         AIF   ('&PEXPAND' EQ 'YES' OR '&PEXPAND' EQ 'NO').TS035
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR PEXPAND &PEXPAND'
.TS035   ANOP
         AIF   ('&TERM' EQ 'YES' OR '&TERM' EQ 'NO').TS040
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR TERM &TERM'
.TS040   ANOP
         AIF   (K'&UNITJCL LT 9).TS045 IF LT 9 CHARS, THEN OKAY
&ERR     SETB  1
         MNOTE 12,'INVALID UNIT NAME:-UNITJCL=&UNITJCL'
.TS045   ANOP
         AIF   (K'&UNITWRK LT 9).TS050 IF LT 9 CHARS, THEN OKAY
&ERR     SETB  1
         MNOTE 12,'INVALID UNIT NAME:-UNITWRK=&UNITWRK'
.TS050   ANOP
         AIF   (K'&NAME GT 3 AND K'&NAME LT 9).TS060
&ERR     SETB  1
         MNOTE 12,'INVALID PROGRAM NAME &NAME'
.TS060   ANOP
         AIF   (K'&LIST EQ 1).TS070
&SOUT    SETC  'A'
         AIF   (K'&LIST EQ 0).TS090
&ERR     SETB  1
         MNOTE 12,'INVALID SYSOUT CLASS &LIST: TOO LONG'
         AGO   .TS090
.TS070   ANOP
&SOUT    SETC  '&LIST'
         AIF   ('&LIST' LT 'A' OR '&LIST' GT '9').TS080
         AIF   ('&LIST' GT 'I' AND '&LIST' LT 'J').TS080
         AIF   ('&LIST' GT 'R' AND '&LIST' LT 'S').TS080
         AIF   ('&LIST' GT 'Z' AND '&LIST' LT '0').TS080
         AGO   .TS090
.TS080   ANOP
         MNOTE 12,'INVALID SYSOUT CLASS &LIST: IT MAY NOT BE PRINTABLE'
&ERR     SETB  1
.TS090   ANOP
         AIF   (K'&OS LT 2).TS095
&OSTYPE  SETC  '&OS'
         AIF   ('&OS'(1,1) NE '''').TS092
&OSTYPE  SETC  '&OS'(2,K'&OS-2)
.TS092   ANOP
&X8      SETB  ('&OSTYPE' EQ 'OSIV/X8')
&F4      SETB  ('&OSTYPE' EQ 'OSIV/F4')
&MVS     SETB  ('&OSTYPE' EQ 'MVS')
         AIF   (&F4 OR &MVS OR &X8).TS100
         AIF   (T'&OS EQ 'O').TS095
         MNOTE 12,'OS=&OS IS INCORRECT: IT MUST BE OSIV/F4, OSIV /X8 OR.
                MVS'
&ERR     SETB  1
         AGO   .TS100
.TS095   ANOP
         MNOTE 12,'OS MUST BE SPECIFIED AS OSIV/F4, OSIV/X8 OR MVS'
&ERR     SETB  1
.TS100   ANOP
         AIF   ('&LET' EQ 'YES' OR '&LET' EQ 'NO').TS110
&C       SETC  T'&LET(1)
.*  MNOTE 16,'LETTYPE= &C'
         AIF   (T'&LET(1) EQ 'N').TS105
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR LET &LET'
         AGO   .TS110
.TS105   ANOP
&LETVAL  SETA  &LET(1)
         AIF   (N'&LET EQ 1).TS110
         AIF   ('&LET(2)' EQ 'PROMPT' OR '&LET(2)' EQ 'NOPROMPT').TS106
         MNOTE 12,'INVALID VALUE FOR LET SUBPARAMETER &LET(2)'
&ERR     SETB  1
         AGO   .TS110
.TS106   ANOP
&LETPR   SETC  '&LET(2)'
.TS110   ANOP
         AIF   ('&SUB' EQ 'YES' OR '&SUB' EQ 'NO').TS120
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR SUB &SUB'
.TS120   ANOP
         AIF   ('&CAT' EQ 'YES' OR '&CAT' EQ 'NO').TS130
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR CAT &CAT'
.TS130   ANOP
         AIF   ('&PJCL' EQ 'YES' OR '&PJCL' EQ 'NO').TS140
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR PJCL &PJCL'
.TS140   ANOP
         AIF   ('&POPT' EQ 'YES' OR '&POPT' EQ 'NO').TS150
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR POPT &POPT'
.TS150   ANOP
         AIF   ('&PCOM' EQ 'YES' OR '&PCOM' EQ 'NO').TS160
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR PCOM &PCOM'
.TS160   ANOP
         AIF   ('&FLAG' GE '0' AND '&FLAG' LE '5').TS170
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR FLAG &FLAG'
.TS170   ANOP
         AIF   ('&SYNCHK' EQ 'YES' OR '&SYNCHK' EQ 'NO').TS180
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR SYNCHK &SYNCHK'
.TS180   ANOP
         AIF   ('&VSAMCAT' EQ 'YES' OR '&VSAMCAT' EQ 'NO').TS190
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR VSAMCAT &VSAMCAT'
.TS190   ANOP
         AIF   ('&PREFOUT' EQ 'USERPREFIX').TS200
         AIF   ('&PREFOUT' EQ 'USERID').TS200
         AIF   ('&PREFOUT' EQ 'SYSUID').TS200
         AIF   ('&PREFOUT' EQ 'SYSPREF').TS200
         MNOTE 12,'INVALID VALUE FOR PREFOUT KEYWORD &PREFOUT'
&ERR     SETB  1
.TS200   ANOP
         AIF   ('&DYNAMIC' EQ 'YES' OR '&DYNAMIC' EQ 'NO').TS205
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR DYNAMIC &DYNAMIC'
.TS205   ANOP
         AIF   ('&TSO' EQ 'YES' OR '&TSO' EQ 'NO').TS210
&ERR     SETB  1
         MNOTE 12,'INVALID VALUE FOR TSO &TSO'
.TS210   ANOP
         AIF   (&ERR).END
&B       SETB  ('&SYNCHK' EQ 'NO')
&SYNT    SETC  (&B)'NO'.'SYNTAX'
&B       SETB  ('&PINCLUD' EQ 'NO')
&PI      SETC  (&B)'N'.'PINCLUDE'
&B       SETB  ('&CAT' EQ 'NO')
&CT      SETC  (&B)'N'.'CAT'
&B       SETB  ('&PJCL' EQ 'NO')
&PJ      SETC  (&B)'N'.'PJCL'
&B       SETB  ('&PCOM' EQ 'NO')
&PC      SETC  (&B)'N'.'PCOMM'
&B       SETB  ('&POPT' EQ 'NO')
&PO      SETC  (&B)'N'.'POPT'
&FL      SETC  '&FLAG'
&B       SETB  ('&PEXPAND' EQ 'NO')
&PE      SETC  (&B)'N'.'PEXPAND'
&B       SETB  ('&PMACRO' EQ 'NO')
&PM      SETC  (&B)'N'.'PMACRO'
&B       SETB  ('&SUB' EQ 'NO')
&SB      SETC  (&B)'N'.'SUB'
&B       SETB  ('&LET' EQ 'NO')
&LT      SETC  (&B)'N'.'LET'
&B       SETB  ('&TEST' EQ 'NO')
&TST     SETC  (&B)'N'.'TEST'
&PRE     SETC  '&NAME'(1,3)
&PRE     SETC  'UJT'
&WRKUNIT SETC  '&UNITWRK        '(1,8)
         PUNCH '         PAGE      &NAME'
&A       SETA  0
.ALIASES AIF   (&A GE N'&ALIAS).EALOOP
&A       SETA  &A+1
         AIF   (K'&ALIAS(&A) EQ 0).NAP010
         PUNCH '         ALIAS     &ALIAS(&A) '
.NAP010  AGO   .ALIASES
.EALOOP  ANOP
&NAME    CSECT
         SPACE 2
* DEFINE SYMBOLIC NAMES FOR THE GENERAL PURPOSE REGISTERS
&A       SETA  0
         SPACE
.EQ010   AIF   (&A GT 15).EQ090
&C       SETC  'R'.'&A'
         AIF   (&A GT 9).EQ020
&C       SETC  'R'.'0'.'&A'
.EQ020   ANOP
&C       EQU   &A
&A       SETA  &A+1
         AGO   .EQ010
.EQ090   ANOP
         SPACE 1
CBUFREG  EQU   R07                 REG PTS TO COMMAND BUFFER
UPTREG   EQU   R08                 REG PTS TO USER PROFILE TABLE
PSCBREG  EQU   R09                 REG PTS TO PSCB
ECTREG   EQU   R10                 REG PTS TO ECT
         SPACE 1
         USING &NAME,R15
         B     &PRE.010
         DC    AL1(&PRE.010-*),C'&NAME VERSION 4.0 ASSEMBLED AT &SYSTIM.
               E ON &SYSDATE'
         DC    C'   COPYRIGHT 1980,1981 CLARKE COMPUTER SOFTWARE,'
         DC    C'   COPYRIGHT 1987 CCS-JOL P/L'
&PRE.010 DS    0H
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD
         LA    R11,2048(0,R12)
         LA    R11,2048(0,R11)     ADDRESS ANOTHER 4K
         USING &NAME,R12,R11        AND DECLARE BASE
         USING WKAREA,R13
         USING UPT,UPTREG
         USING PSCB,PSCBREG
         USING ECT,ECTREG
         DROP  R15
&C       SETC  (&MVS)'PSA'.(1-&MVS)'FLC'                         88036
         USING &C,0                                              88036
         LM    R07,R10,0(R01)      LOAD ADDRESSES OF PARAMETERS
         GETMAIN R,LV=WKALEN,SP=1  GET A WORK AREA
         ST    R13,4(0,R01)        CHAIN SAVE AREAS
         ST    R01,8(0,R13)
         LR    R13,R01
         LA    R15,WKALEN-8
         LA    R14,8(0,R13)
         SLR   R01,R01
         MVCL  R14,R00             CLEAR THE WORK AREA
         SPACE
         ST    UPTREG,IOPL
         ST    ECTREG,IOPL+4
         LA    R14,IOECB
         LA    R15,IOPB
         STM   R14,R15,IOPL+8
         SPACE
         TM    PSCBATR1,PSCBJCL    Q... JCL/JOL USER?
         BZ    &PRE.NJCL           A... NO: EXIT HIM
         SPACE
         LA    R01,MYPPL           SET UP ADDRESSABILITY FOR PPL
         USING PPL,R01
         ST    R01,PPLADDR         STORE PPL ADDR
         ST    UPTREG,PPLUPT       SET UP PARSE PARAMETER LIST
         ST    ECTREG,PPLECT
         LA    R00,MYECB
         ST    R00,PPLECB
&C       SETC  '&PRE'.'PARM'
         L     R00,=V(&C)          LOAD ADDRESS OF PARM DEFINITIONS
         ST    R00,PPLPCL
         LA    R00,PPLREPL
         ST    R00,PPLANS
         ST    R13,PPLUWA          STORE ADDRESS OF WORK AREA
         ST    CBUFREG,PPLCBUF
&C       SETC  (&X8)'KEQPARS'.(1-&X8)'IKJPARS'                   88036
         LINK  EP=&C               LINK TO PARSE ROUTINE
         LTR   R15,R15             CHECK THAT PARSE COMPLETED OK
         BZ    &PRE.100            BRANCH IF IT DID
         ST    R15,TEMP            CONVERT RETURN CODE TO HEX
         UNPK  HEXCONV(9),TEMP
         TR    HEXCONV(9),HEXTAB
         LA    R15,MSGRC
         ST    R15,OLD1#2
         MVC   MSGRC(4),=Y(6,13)
         MVC   MSGRC+4(2),HEXCONV+6
         LA    R15,MSG3
         ST    R15,OLD1#1
         LA    R15,2
         ST    R15,OLD1
         PUTLINE MF=(E,IOPL),PARM=IOPB,                                C
               OUTPUT=(OLD1,TERM,SINGLE,INFOR)
         B     &PRE.900
         USING IKJPARMD,R03
&PRE.100 L     R03,PPLREPL         ADDRESS OF REPLY
         SPACE 2
*        CLI   SYNT+1,1             IF SYNTAX CHECK
*        BNE   *+8                  THEN
*        OI    FLAG,QSUB             ASK WHETHER TO SUBMIT
         SPACE
*   ALLOCATE INPUT DATASET
         SPACE
         LA    R01,DSNAME
         ST    R01,APDE            SET POINTER TO PDE FOR DSNAME
         LA    R00,4
         STH   R00,ASUFFIXL
         MVC   ASUFFIX,=CL9'.JOL'
         OI    AFLAG1,ASHR
         MVC   ADDNAME,=CL8'$$JIN'
         BAL   R14,ALLOCATE        ALLOCATE INPUT DATASET
         LTR   R15,R15
         BNZ   &PRE.900
         CLI   TUDSNENT,C'*'       ALLOCATED TO TERMINAL?
         BNE   &PRE.110            NO
         OI    FLAG,TERMIN         SET FLAG FOR LATER
         SPACE
*   ALLOCATE TERMINAL DATASET
         SPACE
&PRE.110 DS    0H
         CLI   TERMINAL+1,1
         BNE   &PRE.120
         OI    AFLAG1,ATERM
         MVC   ADDNAME,=CL8'SYSTERM'
         BAL   R14,ALLOCATE        ALLOCATE SYSTERM
         LTR   R15,R15
         BNZ   &PRE.900
         SPACE
*   ALLOCATE INCLUDE LIBRARY
         SPACE
&PRE.120 DS    0H
         LA    R01,INCLDS          ADDRESS OF SPECIFIED LIBRARIES
         USING DSPDE,R01
         TM    DSFLG,X'80'         Q... PRESENT?
         BO    &PRE.125            A... YES
         LA    R01,=CL8'$$JINCL'
         BAL   R14,SCHTIOT         DDNAME ALREADY ALLOCATED?
         BE    &PRE.130            A... YES: DO NOT ALLOCATE AGAIN
         L     R01,=V(&PRE.INCL)    USE DEFAULTS
         DROP  R01
&PRE.125 ST    R01,APDE            SET POINTER TO PDE FOR DSNAME
         LA    R00,4
         STH   R00,ASUFFIXL
         MVC   ASUFFIX,=CL9'.JOL'
         OI    AFLAG1,ASHR
         OI    AFLAG2,APERMC  PERMANENTLY ALLOC + CONCAT
         MVC   ADDNAME,=CL8'$$JINCL'
         BAL   R14,CONCAT          ALLOCATE INCLUDE LIBRARY
         LTR   R15,R15
         BNZ   &PRE.900
         SPACE
*   ALLOCATE COMMAND LIBRARY
         SPACE
&PRE.130 DS    0H
         LA    R01,CMDDS           ADDRESS OF SPECIFIED LIBRARIES
         USING DSPDE,R01
         TM    DSFLG,X'80'         Q... PRESENT?
         BO    &PRE.135            A... YES
         LA    R01,=CL8'$$JMACRO'
         BAL   R14,SCHTIOT         DDNAME ALREADY ALLOCATED?
         BE    &PRE.138            A... YES: DO NOT ALLOCATE AGAIN
         L     R01,=V(&PRE.CMDL)    USE DEFAULTS
         DROP  R01
&PRE.135 DS    0H
         ST    R01,APDE            SET POINTER TO PDE FOR DSNAME
         LA    R00,4
         STH   R00,ASUFFIXL
         MVC   ASUFFIX,=CL9'.JOL'
         OI    AFLAG1,ASHR
         OI    AFLAG2,APERMC  PERMANENTLY ALLOC + CONCAT
         MVC   ADDNAME,=CL8'$$JMACRO'
         BAL   R14,CONCAT          ALLOCATE COMMAND LIBRARY
         LTR   R15,R15
         BNZ   &PRE.900
         SPACE
*   ALLOCATE LOAD LIBRARY
         SPACE
&PRE.138 DS    0H
         LA    R01,JOLLDDS         ADDRESS OF SPECIFIED LIBRARIES
         USING DSPDE,R01
         TM    DSFLG,X'80'         Q... PRESENT?
         BO    &PRE.139            A... YES
         LA    R01,=CL8'$$JLOAD'
         BAL   R14,SCHTIOT         DDNAME ALREADY ALLOCATED?
         BE    &PRE.140            A... YES: DO NOT ALLOCATE AGAIN
         ICM   R01,15,=V(&PRE.LOAD)    USE DEFAULTS
         WXTRN &PRE.LOAD                                         88036
         BZ    &PRE.140                  IF PRESENT
         DROP  R01
&PRE.139 DS    0H
         ST    R01,APDE            SET POINTER TO PDE FOR DSNAME
         LA    R00,5
         STH   R00,ASUFFIXL
         MVC   ASUFFIX,=CL9'.LOAD'
         OI    AFLAG1,ASHR
         OI    AFLAG2,APERMC  PERMANENTLY ALLOC + CONCAT
         MVC   ADDNAME,=CL8'$$JLOAD'
         LA    R01,ADDNAME
*        BAL   R14,SCHTIOT
*        BE    &PRE.140
         BAL   R14,CONCAT          ALLOCATE LOAD LIBRARY
         LTR   R15,R15
         BNZ   &PRE.900
         SPACE
*   ALLOCATE OUTPUT JCL DATASET
         SPACE
&B       SETB  (T'&JCL NE 'O')     SET ON IF PERMANENT JCL
&C       SETC  (&B)'JCLDS'.(1-&B)'JCLSET'
&PRE.140 DS    0H
         LA    R01,&C              ADDRESS OUTPUT JCL DATASET
         ST    R01,APDE            SET POINTER TO PDE FOR DSNAME
         AIF   (NOT &B).TJCL1
         LA    R00,5
         STH   R00,ASUFFIXL
         MVC   ASUFFIX,=CL9'.CNTL'
         MVI   AFLAG1,AMOD
         AGO   .PJCL
.TJCL1   ANOP              TEMPORARY DATASET FOR JCL
         MVC   AUNIT,=CL8'&UNITJCL' STORE UNIT NAME
         MVI   AFLAG1,ATEMP        MARK AS TEMP DATASET
.PJCL    ANOP              PERMANENT DATASET FOR JCL
         CLI   JCL+1,1             Q... JCL?
         BE    &PRE.143            A... YES
         MVI   AFLAG1,ANULL        INDICATE NULLFILE
&PRE.143 DS    0H
         MVC   ABLKSIZ,=H'&JCLBLK' SET DEFAULT BLKSIZE
         MVC   ADDNAME,=CL8'$$JCL'
         BAL   R14,ALLOCATE        ALLOCATE JCL DATASET
         LTR   R15,R15
         BNZ   &PRE.900
         SPACE
*   ALLOCATE OUTPUT PRINT FILE
         SPACE
         CLI   LIST+1,3            Q... PRINT REQUEST?
         BNE   &PRE.145            A... NO
         LA    R01,PRTNAME         ADDRESS OUTPUT PRINT DATAS
         ST    R01,APDE            SET POINTER TO PDE FOR DSNAME
         LA    R00,5
         STH   R00,ASUFFIXL        STORE SUFFIX LENGTH
         MVC   ASUFFIX,=CL9'.LIST'  STORE SUFFIX
         OI    AFLAG1,AMOD         FORCE ALLOCATION
         B     &PRE.150
&PRE.145 MVI   AFLAG1,ASOUT         FLAG SYSOUT REQUEST
         L     R01,PRTCLASS
         MVC   ASOUTC,0(R01)
         CLI   LIST+1,1            Q... LIST?
         BE    &PRE.150            A... YES
         MVI   AFLAG1,ANULL        INDICATE NULLFILE
&PRE.150 DS    0H
         MVC   ADDNAME,=CL8'$$JPRINT'
         MVC   ABLKSIZ,=H'&PRTBLK' SET DEFAULT BLKSIZE
         BAL   R14,ALLOCATE        ALLOCATE PRINT DATASET
         LTR   R15,R15
         BNZ   &PRE.900
         CLI   TSO+1,X'01'  RUNNING NOW?
         BNE   &PRE.170
*   ALLOCATE OUTPUT PRINT FOR EXECUTION MONITOR
         SPACE
         CLI   LIST+1,3            Q... PRINT REQUEST?
         BNE   &PRE.155            A... NO
         LA    R01,PRTNAME         ADDRESS OUTPUT PRINT DATAS
         ST    R01,APDE            SET POINTER TO PDE FOR DSNAME
         LA    R00,5
         STH   R00,ASUFFIXL        STORE SUFFIX LENGTH
         MVC   ASUFFIX,=CL9'.LIST'  STORE SUFFIX
         OI    AFLAG1,AMOD         FORCE ALLOCATION
         B     &PRE.160
&PRE.155 MVI   AFLAG1,ASOUT         FLAG SYSOUT REQUEST
         L     R01,PRTCLASS
         MVC   ASOUTC,0(R01)
         CLI   LIST+1,1            Q... LIST?
         BE    &PRE.150            A... YES
         MVI   AFLAG1,ANULL        INDICATE NULLFILE
&PRE.160 DS    0H
         MVC   ADDNAME,=CL8'JOLPRINT'
         MVC   ABLKSIZ,=H'&PRTBLK' SET DEFAULT BLKSIZE
         BAL   R14,ALLOCATE        ALLOCATE PRINT DATASET
         LTR   R15,R15
         BNZ   &PRE.900
&PRE.170 DS    0H                                                 J40B
         SPACE 3
&A       SETA  2                  SET NUMBER OF WORK AREAS
.ALOOP   LA    R00,UT&A           ADDRESS WORK AREA DESCRIPTION
         ST    R00,APDE
         MVC   ABLKSIZ,=H'800'
         MVC   ADDNAME,=CL8'$$JWORK&A'
         MVC   AUNIT,=CL8'&UNITWRK'
         BAL   R14,ALLOCATE        ALLOCATE WORK DATASET
         LTR   R15,R15
         BNZ   &PRE.900
&A       SETA  &A-1
         AIF   (&A GT 0).ALOOP
         BAL   R14,STPARMS         GO AND SET-UP JOL PARAMETERS
         SPACE 3
*   INTERFACE TO USER EXIT IF PRESENT
         SPACE
         WXTRN UJTEXT1                                           88036
         ICM   R15,15,=V(UJTEXT1) Q...  EXIT PRESENT?
         BZ    &PRE.310            A... NO: SKIP IT
         LA    R01,USERPRML        BUILD PARAMETER LIST
         ST    R01,USERPLST
         LA    R01,USERPLST
         MVI   USERPLST,X'80'     MARK THE END
         XC    USERPRM,USERPRM     CLEAR PARAMETER AREA
         XC    USERPRML,USERPRML
         BALR  R14,R15             CALL HIM
         CH    R15,=H'4'           TEST RC
         BH    &PRE.320            > 4 THEN CANCEL CALL
         BL    &PRE.310            < 4 THEN NO EXTRA PARAMETERS
         LA    R14,PRMOPTNS+2      CONNECT THE TWO STRINGS
         AH    R14,PRMOPTNS
         LH    R01,USERPRML
         LA    R00,USERPRM
         LR    R15,R01
         MVI   0(R14),C' '
         LA    R14,1(0,R14)
         MVCL  R14,R00
         LA    R00,1
         AH    R00,USERPRML        ADJUST LENGTH
         AH    R00,PRMOPTNS
         STH   R00,PRMOPTNS
&PRE.310 DS    0H
         MVC   LINKSFE,LINKSFL
         MVC   LINKDCBE,LINKDCBL
         XC    DCBEXLST-IHADCB+LINKDCBE+1(3),DCBEXLST-IHADCB+LINKDCBE+1
*        MVI   OPENLIST,X'80'                              CVC
         LA    R01,OPENLIST                                CVC
         LA    R00,LINKDCBE                                CVC
         ST    R00,0(1,0)                                  CVC
         MVI   OPENLIST,X'80'
*        OPEN  LINKDCBE,MF=(E,OPENLIST)
         OI    PARM,X'80'          MARK END OF LIST
         TM    FLAG,TERMIN         Q... INPUT FROM TERMINAL?
         BZ    &PRE.315            A... NO
         STFSMODE ON,INITIAL=YES                                  87350
         LA    R00,14
         LA    R01,=X'27F5C2115D7F1DE811C14F1D4013'
         ICM   R01,8,=AL1(B'00000011') TPUT FULLSCR
         TPUT  (1),(0),R
         STLINENO LINE=1,MODE=OFF                                 87350
.*       LA    R01,MSG8+2                                         87350
.*       LH    R00,MSG8                                           87350
.*       TPUT  (1),(0) FULLSCR                                    87350
.*       STAUTOCP
.*       STFSMODE OFF                                             87350
         LA    R15,MSG8            TIME TO ENTER JOL COMMANDS
         ST    R15,OLD1#1             SO TELL THE NICE USER
         LA    R15,1
         ST    R15,OLD1
         PUTLINE MF=(E,IOPL),PARM=IOPB,                                C
               OUTPUT=(OLD1,TERM,SINGLE,INFOR)
&PRE.315 DS    0H
         LINK  EP=&PGM,MF=(E,PARM),SF=(E,LINKSFE) DCB=LINKDCBE
&PRE.320 DS    0H
         L     R14,4(,R13)
         ST    R15,16(,R14)
         CLI   SYNT+1,1             IF SYNTAX CHECK               87350
         BE    &PRE.400             THEN FORGET IT                87350
         SPACE
         LTR   R15,R15             Q... DO I NEED TO FLUSH?
         BZ    &PRE.500            A... NO
         CLI   JCL+1,X'01'         ANY JCL TO SUBMIT?
         BNE   &PRE.400            NO: DROP IT OFF
         CLI   LET+1,X'01'         LET SPECIFIED?
         BNE   &PRE.400            NO: DROP IT OFF
         L     R14,LETVAL
         C     R15,0(R14)          Q... HOW ABOUT MAXCC BY LET KEYWORD
         BNH   &PRE.500            A... HE SAYS OK
         CLI   SUB+1,1             Q... SUBMIT SPECIFIED?
         BE    &PRE.500            A... YES:
         CLI   LETPRPT+1,1         Q... LET(XX,PROMPT)?
         BNE   &PRE.400            A... NO: KILL THE JOB
         OI    FLAG,QSUB           ASK WHETHER TO SUBMIT
         B     &PRE.500
&C       SETC  '&PRE'.'NJCL'
&C       DS    0H                  COME HERE IF NOT A JCL/JOL USER
         LA    R15,MSG7 ERROR MSG NOT ALLOWED TO USE THE JOL COMMAND
         ST    R15,OLD1#1
         LA    R15,1
         ST    R15,OLD1
         PUTLINE MF=(E,IOPL),PARM=IOPB,                                C
               OUTPUT=(OLD1,TERM,SINGLE,INFOR)
&PRE.400 DS    0H
         TCLEARQ INPUT             FLUSH ANY TYPE-AHEAD
         STACK PARM=IOPB,DELETE=ALL,MF=(E,IOPL)
*        CLOSE MF=(E,OPENLIST)
         B     &PRE.900            QUIT
&PRE.500 DS    0H
*        CLOSE MF=(E,OPENLIST)
         BAL   R14,QSUBMIT         FIND OUT WHETHER TO SUBMIT OR RUN
         B     &PRE.900            IF RETURN HERE THEN NO
         DS    0H                  RETURN HERE MEANS YES
         MVC   DCBDDNAM-IHADCB+LINKDCBE,=CL8'$$JCL'
         LA    R00,JFCBPTR
         STCM  R00,7,DCBEXLST-IHADCB+LINKDCBE+1
         LA    R00,WRKJFCB
         ST    R00,JFCBPTR
         MVI   JFCBPTR,X'87'
         RDJFCB MF=(E,OPENLIST)
         GETMAIN R,LV=64,SP=1
*        MVC   0(10,R01),=X'00370005D3C9E2E3407D'  LIST
         MVC   0(10,R01),=X'00370005E2E4C240407D'  SUB
         MVC   10(45,R01),WRKJFCB  COPY DSNAME
*        MVC   ADSNAME,WRKJFCB  AND HERE, TOO
*        MVC   AVOL,JFCBVOLS-INFMJFCB+WRKJFCB                     J40B
         LA    R14,10(0,R01)
         LA    R00,45
         CLI   1(R14),C' '
         LA    R14,1(0,R14)
         BE    *+8
         BCT   R00,*-12
         MVI   0(R14),C''''
* IF RUNNING NOW UNDER TSO, XCTL TO A DIFFERENT PROGRAM.
         CLI   TSO+1,X'01'  RUNNING NOW?
         BNE   DOSUB
DOTSO    DS    0H
         AGO   .MIKE                                              J40B
*   ALLOCATE INPUT DATASET FOR EXECUTION MONITOR
         SPACE
         OI    AFLAG1,ASHR+AFLG1DS
         MVC   ADSNAME,=CL44'&&JCL'                               J40B
         MVC   ADDNAME,=CL8'SYSIN'
         BAL   R14,ALLOCATE        ALLOCATE INPUT DATASET
         LTR   R15,R15
         BNZ   &PRE.900
.MIKE    ANOP                                                     J40B
         L     R14,4(0,R13)
         L     R02,24(0,R14)
         ST    R01,00(0,R02)
         LR    R01,R13
         LR    R13,R14
         FREEMAIN R,LV=WKALEN,SP=1,A=(1)
         L     R14,12(,R13)                                      88036
         LR    R01,R02
         XCTL  (2,12),EP=$JOLDY40,MF=(E,(1))
DOSUB    DS    0H
         L     R14,4(0,R13)
         L     R02,24(0,R14)
         ST    R01,00(0,R02)
         LR    R01,R13
         LR    R13,R14
         FREEMAIN R,LV=WKALEN,SP=1,A=(1)
         LR    R01,R02
         L     R14,12(,R13)                                      88036
*        XCTL  (2,12),EP=LIST,MF=(E,(1))
         XCTL  (2,12),EP=SUB,MF=(E,(1))
&PRE.900 DS    0H
         LR    R01,R13
         L     R13,4(0,R13)
         ST    R15,16(0,R13)      STORE RETURN CODE
         FREEMAIN R,LV=WKALEN,SP=1,A=(1)
         LM    R14,R12,12(R13)
         BR    R14
         TITLE '&TITLE SUBROUTINE TO SET-UP JOL PARAMETERS'
STPARMS  ST    R14,STPRETN
         LA    R00,PRMOPTNS        SET UP PARM LIST
         ST    R00,PARM
         LA    R15,PRMOPTNS+2
         XC    PRMOPTNS,PRMOPTNS
         MVI   0(R15),C'N'
         TM    PINCLUDE+1,X'01'
         BO    STP010
         LA    R15,1(0,R15)
STP010   MVC   0(4,R15),=C'PI N'
         LA    R15,3(0,R15)
         TM    PMACRO+1,X'01'
         BO    STP020
         LA    R15,1(0,R15)
STP020   MVC   0(4,R15),=C'PM N'
         LA    R15,3(0,R15)
         TM    EXPAND+1,X'01'
         BO    STP030
         LA    R15,1(0,R15)
STP030   MVC   0(4,R15),=C'PE N'
         LA    R15,3(0,R15)
         TM    POPT+1,X'01'
         BO    STP040
         LA    R15,1(0,R15)
STP040   MVC   0(4,R15),=C'PO N'
         LA    R15,3(0,R15)
         TM    PJCL+1,X'01'
         BO    STP050
         LA    R15,1(0,R15)
STP050   DS    0H
         MVC   0(4,R15),=C'PJ N'
         LA    R15,3(0,R15)
         TM    PCOMM+1,X'01'
         BO    STP060
         LA    R15,1(0,R15)
STP060   DS    0H
         MVC   0(4,R15),=C'PC N'
         LA    R15,3(0,R15)
         TM    CAT+1,X'01'
         BO    STP070
         LA    R15,1(0,R15)
STP070   DS    0H
         MVC   0(4,R15),=C'CAT '
         LA    R15,4(0,R15)
         TM    TSO+1,X'01'
         BZ    STP072
         MVC   0(4,R15),=C'TSO '
         LA    R15,4(0,R15)
STP072   DS    0H
         TM    DYNAMIC+1,X'01'
         BZ    STP073
         MVC   0(8,R15),=C'DYNAMIC '
         LA    R15,8(0,R15)
STP073   DS    0H
         TM    LET+1,X'01'
         BZ    STP080
         MVC   0(4,R15),=C'LET '
         LA    R15,4(0,R15)
STP080   DS    0H
         TM    TEST+1,X'01'
         BZ    STP090
         OI    FLAG,QSUB
STP090   DS    0H
         MVC   0(4,R15),=C'TEST'   ALWAYS TELL JOL TEST: STOPS
         LA    R15,4(0,R15)                       OPERATOR MSGS
         SPACE
         CLI   SUB+1,1             IF SUB,
         BNE   STP095                 THEN
         MVI   LET+1,1               FORCE LET
         NI    FLAG,X'FF'-QSUB       AND NOTEST
         SPACE
STP095   DS    0H
         TM    DCDATA+6,X'80'      Q... DUMPCARD?
         BZ    STP100              A... NO
         MVC   0(11,R15),=C' DUMPCARD='''
         LH    R01,DCDATA+4
         L     R14,DCDATA          ADDRESS OF DUMPCARD
         BCTR  R01,0
         EX    R01,*+4
         MVC   11(0,R15),0(R14)
         LA    R15,12(R01,R15)     PAST THE DUMP CARD
         MVI   0(R15),C''''        END OF DUMP CARD
         LA    R15,1(0,R15)        TO NEXT POSITION
STP100   DS    0H
         TM    C1DATA+6,X'80'      Q... CARD1?
         BZ    STP110              A... NO
         MVC   0(8,R15),=C' CARD1='''
         LH    R01,C1DATA+4
         L     R14,C1DATA          ADDRESS OF CARD1
         BCTR  R01,0
         EX    R01,*+4
         MVC   8(0,R15),0(R14)
         LA    R15,09(R01,R15)     PAST CARD1
         MVI   0(R15),C''''        END OF THE CARD
         LA    R15,1(0,R15)        TO NEXT POSITION
STP110   DS    0H
         TM    C2DATA+6,X'80'      Q... CARD2?
         BZ    STP120              A... NO
         MVC   0(8,R15),=C' CARD2='''
         LH    R01,C2DATA+4
         L     R14,C2DATA          ADDRESS OF CARD2
         BCTR  R01,0
         EX    R01,*+4
         MVC   8(0,R15),0(R14)
         LA    R15,09(R01,R15)     PAST THE CARD
         MVI   0(R15),C''''        END OF THE CARD
         LA    R15,1(0,R15)        TO NEXT POSITION
STP120   DS    0H
         TM    C3DATA+6,X'80'      Q... CARD3?
         BZ    STP130              A... NO
         MVC   0(8,R15),=C' CARD3='''
         LH    R01,C3DATA+4
         L     R14,C3DATA          ADDRESS OF CARD3
         BCTR  R01,0
         EX    R01,*+4
         MVC   8(0,R15),0(R14)
         LA    R15,09(R01,R15)     PAST THE CARD
         MVI   0(R15),C''''        END OF THE CARD
         LA    R15,1(0,R15)        TO NEXT POSITION
STP130   DS    0H
         TM    C4DATA+6,X'80'      Q... CARD4?
         BZ    STP140              A... NO
         MVC   0(8,R15),=C' CARD4='''
         LH    R01,C4DATA+4
         L     R14,C4DATA          ADDRESS OF CARD4
         BCTR  R01,0
         EX    R01,*+4
         MVC   8(0,R15),0(R14)
         LA    R15,09(R01,R15)     PAST CARD4
         MVI   0(R15),C''''        END OF CARD4
         LA    R15,1(0,R15)        TO NEXT POSITION
STP140   DS    0H
         ICM   R00,3,JFLAG         Q... FLAG SPECIFIED?
         BZ    STP150              A... NO
         MVC   0(6,R15),=C' FLAG0' MOVE FLAG KEYWORD
         BCTR  R00,0               DECREMENT THE NUMBER
         STC   R00,5(,R15)         STORE THE NUMBER
         OI    5(R15),X'F0'        SET ZONE BITS
         LA    R15,6(,R15)         POINT TO NEXT AVAILABLE BYTE
STP150   DS    0H
         MVC   0(08,R15),=C'/SYSUID='
         MVC   8(7,R15),PSCBUSER   COPY USER ID
         MVI   15(R15),C' '        BLANK THE NEXT CHARACTER
         SLR   R14,R14
         IC    R14,PSCBUSRL
         LA    R15,9(R14,R15)
         MVC   0(08,R15),=C'SYSPREF='
         MVC   8(7,R15),UPTPREFX
         IC    R14,UPTPREFL
         LA    R15,8(R14,R15)
         MVI   0(R15),C' '         SEPARATOR TO INDICATE SYMBOLS
         TM    SYMDATA+6,X'80'
         BZ    STP200
         LH    R01,SYMDATA+4
         L     R14,SYMDATA         ADDRESS OF SYMBOL TEXT
         BCTR  R01,0
         EX    R01,*+4
         MVC   1(0,R15),0(R14)
         LA    R15,2(R01,R15)
STP200   DS    0H
         LA    R00,PRMOPTNS+2
         SR    R15,R00
         STH   R15,PRMOPTNS
         L     R14,STPRETN
         BR    R14
         TITLE '&TITLE DYNAMIC CONCATENATION SUBROUTINE'
CONCAT   STM   R02,R14,CONCREGS    SAVE RETURN ADDRESS
         BAL   R14,DECONC          ENSURE DDNAME IS NOT CONCATENATED
         SLR   R04,R04             CLEAR DDNAME COUNTER
         L     R05,APDE            LOAD PDE ADDRESS
         USING DSPDE,R05
         OI    AFLAG1,APDS         INDICATE PARTITIONED DATASET
         MVC   CFLAGS,AFLAGS       SAVE ALLOCATION FLAGS
         MVC   CSUFFIX,ASUFFIXL    SAVE QUALIFIER SUFFIX
         LA    R03,TUCONC          ADDRESS OF TEXT UNIT
         XC    0(TUCONCL,R03),0(R03) CLEAR IT
         MVI   5(R03),8            STORE DDNAME LENGTH
         MVC   6(8,R03),ADDNAME    SAVE CONCATENATION DDNAME
CONC0050 DS    0H
         MVC   AFLAGS,CFLAGS       STORE ALLOCATION FLAGS
         MVC   ASUFFIXL(L'ASUFFIXL+L'ASUFFIX),CSUFFIX
         ST    R05,APDE            STORE PDE ADDRESS
         BAL   R14,ALLOCATE        ALLOCATE A DATASET
         LTR   R15,R15             Q... OK?
         BNZ   CONC0900            A... NO
         LA    R04,1(0,R04)        COUNT THE DDNAME
         CLI   TURETDD,X'00'
         BE    CONC0060
         LA    R03,10(0,R03)       ADDRESS THE NEXT
         MVI   5(R03),8            STORE THE LENGTH
         MVC   6(8,R03),TURETDD    COPY THE DDNAME
CONC0060 DS    0H
         ICM   R05,7,DSNEXT+1      POINT TO THE NEXT
         BNZ   CONC0050            PROCESS THE NEXT
CONC0100 DS    0H
         CH    R04,=H'1'
         BNH   CONC0900
         BAL   R14,INITS99R        INITIALISE THE REQ BLK
         MVI   S99VERB,X'03'       INDICATE CONCATENATION
         MVI   TUCONC+1,X'01'      TEXT UNIT TYPE
         STH   R04,TUCONC+2        NUMBER
         LA    R00,TUCONC          BUILD TEXT UNIT LIST
         LA    R15,S99TUPL
         ST    R00,0(,R15)         ENTRY TO THE LIST
         TM    CFLAG2,APERMC       Q... PERMANENT CONCATENATION?
         BZ    CONC0110            A... NO
         LA    R14,=X'00040000'    TEXT UNIT FOR PERMANENT CONCAT
         LA    R15,4(,R15)         POINT TO THE NEXT POSITION
         ST    R14,0(,R15)
CONC0110 DS    0H
         OI    0(R15),X'80'        END OF THE LIST
         LA    R01,S99RBPTR
SVC99B   SVC   99                  ISSUE THE REQUEST
         LTR   R15,R15             Q... OK?
         BZ    CONC0800            A... YES
         BAL   R14,S99MSG          ISSUE AN ERROR MSG
         LA    R15,8
         B     CONC0900            EXIT
CONC0800 DS    0H
CONC0900 DS    0H
         XC    APT,APT             ENSURE APT IS CLEARED
         LM    R02,R14,CONCREGS
         BR    R14
         TITLE '&TITLE DYNAMIC ALLOCATION ROUTINE'
ALLOCATE STM   R02,R14,ALLCREGS
.*  TEXT UNIT TYPES
.*   VOLSER  X'0010'
.*   DUMMY   X'00240000'
         BAL   R14,INITS99R
         LA    R06,S99TUPL-4       POINTER TO TEXT UNIT POINTER
         TM    AFLAG1,ANULL
         BO    ALLC0100            GO AND ALLOCATE A DUMMY DATASET
         TM    AFLAG1,ASOUT
         BO    ALLC0200            GO AND ALLOCATE A SYSOUT DATASET
         L     R05,APDE
         USING DSPDE,R05
         BAL   R14,QUAL            ADD QUALIFIERS AND SET-UP TEXT UNIT
         SPACE
*   TERMINAL ALLOCATION FLAG MAY BE SET BY QUALIFY S/R
         SPACE
         TM    AFLAG1,ATERM        TEST FOR TERMINAL ALLOCATION
         BO    ALLC0300            GO AND ALLOCATE A TERMINAL DATASET
         MVC   TUDSN(4),=X'00020001'
         LA    R00,TUDSN
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT PTR
         ST    R00,0(0,R06)
         MVI   AMBRNAME,C' '       CLEAR MEMBER NAME FOR DSAB SEARCH
         MVC   AMBRNAME+1(7),AMBRNAME
         TM    MBRFLG,X'80'        Q... MEMBER GIVEN?
         BZ    ALLC0030            A... NO
         SPACE
*    SET UP TEXT UNIT FOR THE MEMBER
         SPACE
         MVC   TUMBR(14),=X'0003000100084040404040404040'
         LH    R14,MBRLEN          LOAD THE LENGTH
         BCTR  R14,0
         L     R15,MBRPT
         MVC   TUMBR+6(0),0(R15)
         EX    R14,*-6
         MVC   AMBRNAME,TUMBR+6    COPY MEMBER FOR DSAB SEARCH
         LA    R00,TUMBR
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT PTR
         ST    R00,0(0,R06)
ALLC0030 DS    0H
         SPACE 2
* NOW DSN AND MEMBER ARE SET UP. CAN SEARCH FOR EXISTING ALLOCATION
         SPACE 1
         BAL   R14,SCHDSABQ        GO AND SEARCH DSAB QUEUE
         B     ALLC0600            BRANCH IF FOUND
         SPACE 2
         TM    PSDFLG,X'80'        Q... PASSWORD?
         BZ    ALLC0040            A... NO
         MVC   TUPSD(4),=X'00500001' SET CODE, NUMBER
         LH    R14,PSDLEN          LOAD THE LENGTH
         STH   R14,TUPSD+4         STORE LENGTH IN TEXT UNIT
         BCTR  R14,0
         L     R15,PSDPT
         MVC   TUPSD+6(0),0(R15)
         EX    R14,*-6
         LA    R00,TUPSD
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT PTR
         ST    R00,0(0,R06)
ALLC0040 DS    0H
         OC    AUNIT,AUNIT
         BZ    ALLC0050            BRANCH IF UNIT NOT GIVEN
         MVC   TUUNIT(6),=X'001500010008' SET TU FOR UNIT
         MVC   TUUNIT+6(8),AUNIT    COPY UNIT NAME
         LA    R00,TUUNIT
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT PTR
         ST    R00,0(0,R06)
ALLC0050 DS    0H
         MVC   TUDISP(7),=X'00040001000108' DISP=SHR
         TM    AFLAG1,ASHR         CORRECT?
         BO    ALLC0055             YES
         MVI   TUDISP+6,X'04'      DISP=NEW
         TM    AFLAG1,ATEMP+AMOD   CORRECT?
         BNZ   ALLC0055
         MVI   TUDISP+6,X'01'      DISP=OLD
ALLC0055 DS    0H
         LA    R00,TUDISP
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT PTR
         ST    R00,0(0,R06)
         OC    AVOL,AVOL
         BZ    ALLC0060            BRANCH IF VOL NOT GIVEN
         MVC   TUVOL(6),=X'001000010006' SET TU FOR VOLUME SERIAL NO
         MVC   TUVOL+6(8),AVOL     COPY VOLUME SERIAL NUMBER
         LA    R00,TUVOL
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT PTR
         ST    R00,0(0,R06)
ALLC0060 DS    0H
         SPACE
*       INDICATE DSORG IS TO BE RETURNED
         SPACE
         MVC   TUDSORG(6),=X'005700010002'
         LA    R00,TUDSORG
         LA    R06,4(0,R06)        POINT TO NEXT IN LIST
         ST    R00,0(0,R06)
         B     ALLC0500
         SPACE 3
ALLC0100 DS    0H      ALLOCATE A DUMMY DATASET
         MVC   TUDMY(6),=X'00240000' SET TEXT UNIT FOR DUMMY DSET
         LA    R00,TUDMY
         LA    R06,4(0,R06)        POINT TO NEXT IN LIST
         ST    R00,0(0,R06)
         B     ALLC0500
         SPACE 3
ALLC0200 DS    0H      ALLOCATE A SYSOUT DATASET
         MVC   TUSOUT(6),=X'001800010001' SET TEXT UNIT FOR SYSOUT
         MVC   TUSOUT+6(1),ASOUTC  SYSOUT CLASS
         LA    R00,TUSOUT
         LA    R06,4(0,R06)        POINT TO NEXT IN LIST
         ST    R00,0(0,R06)
         B     ALLC0500
ALLC0300 DS    0H      ALLOCATE THE TERMINAL
         MVI   TUTERM+1,X'28'      INDICATE DSORG REQD
         LA    R00,TUTERM
         LA    R06,4(0,R06)        POINT TO NEXT IN LIST
         ST    R00,0(0,R06)
         B     ALLC0500
ALLC0500 DS    0H      SET FINAL PARAMTERS FOR ALL ALLOCATIONS
         OC    ADDNAME,ADDNAME     Q... DDNAME SUPPLIED?
         BZ    ALLC0510            A... NO
*
* FOLLOWING CODE BY PETER FOLEY ABS APR 1983
*
         CLC   ADDNAME,=C'$$JWORK2'
         BNE   ALLC0502
         MVC   TUROUND(4),=X'000F0000'    ROUND
         LA    R00,TUROUND
         LA    R06,4(0,R06)               POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
         MVC   TUAVBLK(9),=X'000900010003001000' 4095 AV BLK
         LA    R00,TUAVBLK
         LA    R06,4(0,R06)               POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
         MVC   TUPRIMS(9),=X'000A00010003000014' 10 BLOCKS PRIM
         LA    R00,TUPRIMS
         LA    R06,4(0,R06)               POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
         MVC   TUSECND(9),=X'000B00010003000014' 10 BLOCKS SEC
         LA    R00,TUSECND
         LA    R06,4(0,R06)               POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
* PREVIOUS CODE BY PETER FOLEY ABS APR 1983
*
*
* FOLLOWING CODE BY C. V. CLARKE FEB 25, 1984
*
* ADD SPACE FOR JCL FILE, AND INCLUDE EXTENTS
*
ALLC0502 CLC   ADDNAME,=C'$$JCL'          JCL FILE ?             CVC
         BNE   ALLC0505
*        MVC   TUROUND(4),=X'000F0000'    ROUND
*        LA    R00,TUROUND
*        LA    R06,4(0,R06)               POINT TO NEXT TEXT UNIT
*        ST    R00,0(0,R06)
         MVC   TUAVBLK(9),=X'000900010003001000' 4095 AV BLK
         LA    R00,TUAVBLK
         LA    R06,4(0,R06)               POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
         MVC   TUPRIMS(9),=X'000A00010003000030' 20 BLOCKS PRIM
         LA    R00,TUPRIMS
         LA    R06,4(0,R06)               POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
         MVC   TUSECND(9),=X'000B00010003000030' 48 BLOCKS SEC
         LA    R00,TUSECND
         LA    R06,4(0,R06)               POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
*
* PREVIOUS CODE BY C. CLARKE, FEB 25, 1984
*
ALLC0505 DS    0H
         MVC   TUDDN(6),=X'000100010008'  SET CODE, NUM, LEN
         MVC   TUDDN+6(8),ADDNAME
         LA    R00,TUDDN
         B     ALLC0520
ALLC0510 DS    0H         REQUEST RETURN OF DDNAME
         MVC   TURETDDN(6),=X'005500010008'  SET CODE, NUM, LEN
         MVC   TURETDDN+6(8),=CL8' '
         LA    R00,TURETDDN
ALLC0520 DS    0H
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
         OC    ABLKSIZ,ABLKSIZ     Q... BLOCK SIZE SUPPLIED?
         BZ    ALLC0530            A... NO
         MVC   TUBLKSI(6),=X'003000010002'
         MVC   TUBLKSI+6(2),ABLKSIZ COPY BLOCK SIZE
         LA    R00,TUBLKSI
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
ALLC0530 DS    0H
         TM    AFLAG1,AMOD         CATALOG IT?
         BZ    ALLC0540            A... YES
         MVC   TUCATLG(7),=X'00050001000102'
         LA    R00,TUCATLG
         LA    R06,4(0,R06)        POINT TO NEXT TEXT UNIT
         ST    R00,0(0,R06)
ALLC0540 DS    0H
         MVI   0(R06),X'80'        MARK END OF TEXT UNIT LIST
         LA    R01,S99RBPTR
         MVI   S99VERB,1           SET DSNAME ALLOCATION
SVC99    DYNALLOC
         LTR   R15,R15
         BNZ   ALLC0800            BRANCH IF ALLOC'N FAILED
ALLC0600 DS    0H         ALLOCATION SUCCESSFUL: VALIDATE DSORG
         TM    AFLAG1,ASOUT+ATERM  SKIP IF TERMINAL OR SYSOUT
         BNZ   ALLC0900
         NI    TUDSORG+6,X'FE'     REMOVE UNMOVABLE BIT
         TM    AFLAG1,APDS         IF PDS ALLOCATION REQUEST
         BO    ALLC0730              PROHIBIT MEMBER NAMES
         TM    MBRFLG,X'80'
         BZ    ALLC0720
         CLC   =X'0200',TUDSORG+6  Q... PARTITIONED?
         BE    ALLC0900            A... YES
         CLC   =X'0000',TUDSORG+6  Q... UNDEFINED?
         BE    ALLC0900            A... YES
         LA    R15,MSG1
         B     ALLC0745
ALLC0720 DS    0H
         CLC   =X'4000',TUDSORG+6  Q... SEQUENTIAL?
         BE    ALLC0900            A... YES
         CLC   =X'0000',TUDSORG+6  Q... UNDEFINED?
         BE    ALLC0900            A... YES
         LA    R15,MSG2
         B     ALLC0745
ALLC0730 DS    0H     PDS ALLOCATION REQUEST
         TM    MBRFLG,X'80'
         BZ    ALLC0740
         LA    R15,MSG4  ERROR MSG ABOUT PDS MBR AND JOL LIBRARY
         B     ALLC0745
ALLC0740 DS    0H
         CLC   =X'0200',TUDSORG+6  Q... PARTITIONED?
         BE    ALLC0900            A... YES
         LA    R15,MSG5 ERROR MSG ABOUT SDS AND JOL LIBRARY
ALLC0745 DS    0H
         ST    R15,OLD1#1
         LA    R15,1
         ST    R15,OLD1
         PUTLINE MF=(E,IOPL),PARM=IOPB,                                C
               OUTPUT=(OLD1,TERM,SINGLE,INFOR)
         B     ALLC0810
ALLC0800 DS    0H
         BAL   R14,S99MSG
ALLC0810 DS    0H
         XC    IOECB,IOECB
         XC    IOPB,IOPB
         STACK PARM=IOPB,DELETE=ALL,MF=(E,IOPL)
         LA    R15,8               INDICATE AN ERROR OCCURRED
ALLC0900 LM    R02,R14,ALLCREGS
         XC    APT(APTL),APT        CLEAR FOR NEXT CALL
         BR    R14
         DROP  R05
         TITLE '&TITLE SVC99 REQUEST-BLK INITIALISE'
INITS99R DS    0H
         XC    S99RB(20),S99RB
         MVI   S99RBLN,20          SET RB LEN FIELD
         LA    R15,S99TUPL
         ST    R15,S99TXTPP        STORE TEXT UNIT LIST ADDRESS
         LA    R15,S99RB
         ST    R15,S99RBPTR        LOAD RB ADDRESS IN PARAM LIST
         OI    S99RBPTR,X'80'      MARK END OF LIST
         XC    TUAREA(TUAREAL),TUAREA CLEAR ALL TEXT UNITS
         XC    TUAREA2(TUAREAL2),TUAREA2 CLEAR ALL TEXT UNITS PF 1983
         BR    R14
         TITLE '&TITLE SUBROUTINE TO SEARCH THE DSAB QUEUE'
SCHDSABQ ST    R14,SDQRETN         SAVE THE RETURN ADDRESS
         L     R14,PSATOLD         MY TCB ADDRESS
         USING TCB,R14
         L     R14,TCBJSCB         MY JSCB ADDRESS
         DROP  R14
         USING IEZJSCB,R14
&C       SETC  (&X8)'JSCBQDB'.(1-&X8)'JSCDSABQ'                  88036
*        L     R14,JSCDSABQ        DSAB Q
         L     R14,&C              DSAB Q
         DROP  R14
         USING QDB,R14             DSAB Q DESCRIPTOR BLOCK
&A       SETA  15-(&X8*12)                                       88036
*        ICM   R15,15,QDBNELMS     ARE THERE ANY?
         ICM   R15,&A,QDBNELMS     ARE THERE ANY?
         BZ    SDQ090              A... NO
         AIF   (&X8).X8400                                       88036
         L     R15,QDBFELMP        LOAD DSAB ADDRESS
         USING DSAB,R15
SDQ005   DS    0H
         L     R01,DSABTIOT        POINT TO TIOT ENTRY
         CLC   =CL8' ',4(R01)      BLANK DDNAME?
         BE    SDQ020              IF SO, NOT A MATCH
         ICM   R01,7,12(R01)       POINT TO JFCB
         USING JFCB-16,R01
         CLC   JFCBDSNM,ADSNAME    Q... SAME DSNAME?
         BNE   SDQ020              A... NO
         NI    AFLAG1,FF-AMOD      SAME DSN: CANNOT B NEW
         CLC   JFCBELNM,AMBRNAME   Q... SAME MEMBER NAME?
         BNE   SDQ020              A... NO
         MVC   TUDSORG+6(2),DSABORG   COPY DSORG
         DROP  R01
         L     R01,DSABTIOT        POINT TO TIOT ENTRY
         CLI   4(R01),C'$'         Q... JOL DDNAME?
         BE    SDQ010              A... YES: DO NOT RETURN IT FOR
*                                   A GENERAL REQUEST
         TM    DSABFLG1,DSABDCAT+DSABPCAT+DSABCATM+DSABNUSE
         BNZ   SDQ010              DO NOT RETURN IT IF:
*                                    DYNAMICALLY CONCATENATED
*                                    PERMANENTLY CONCATENATED
*                                    MEMBER OF CONCATENATED GROUP
*                                    IN USE
         TM    DSABFLG2,DSABOPEN   DO NOT IT RETURN IF OPEN
         BNZ   SDQ010
         MVC   TURETDDN+6(8),4(R01) OTHERWISE ANY WILL DO
         MVC   TURETDDN+4(2),=H'8' SET DDNAME LENGTH
         B     SDQ080              OK TO LEAVE
SDQ010   DS    0H
         CLC   ADDNAME,4(R01)  Q... REQUESTED DDNAME?
         BE    SDQ080          A... YES: RETURN
SDQ020   DS    0H        THIS ONE DID NOT MATCH:
         CLM   R15,7,QDBLELMP+1    Q... WAS THAT THE LAST?
         BE    SDQ090              A... YES IT WAS: EXIT NOT FOUND
         L     R15,DSABFCHN        POINT TO THE NEXT
         AGO   .NX8400                                           88036
.X8400   ANOP                                                    88036
         LA    R14,4(,R14)     SKIP IDENTIFIER IN CTRL BLOCK     88036
         L     R15,12(,R14)        LOAD DSAB ADDRESS
         USING DSAB,R15
SDQ005   DS    0H
         CLC   =CL8' ',20(R15)     BLANK DDNAME?
         BE    SDQ020              IF SO, NOT A MATCH
*        ICM   R01,7,12(R01)       POINT TO JFCB
*        USING JFCB-16,R01
         CLC   32(26,R08),ADSNAME    Q... SAME DSNAME?
         BNE   SDQ020              A... NO
         DC    H'0'                                              88036
         NI    AFLAG1,FF-AMOD      SAME DSN: CANNOT B NEW
*        CLC   JFCBELNM,AMBRNAME   Q... SAME MEMBER NAME?
         BNE   SDQ020              A... NO
         MVC   TUDSORG+6(2),DSABORG   COPY DSORG
         L     R01,DSABTIOT        POINT TO TIOT ENTRY
         CLI   4(R01),C'$'         Q... JOL DDNAME?
         BE    SDQ010              A... YES: DO NOT RETURN IT FOR
*                                   A GENERAL REQUEST
         TM    DSABFLG1,DSABDCAT+DSABPCAT+DSABCATM+DSABNUSE
         BNZ   SDQ010              DO NOT RETURN IT IF:
*                                    DYNAMICALLY CONCATENATED
*                                    PERMANENTLY CONCATENATED
*                                    MEMBER OF CONCATENATED GROUP
*                                    IN USE
         TM    DSABFLG2,DSABOPEN   DO NOT IT RETURN IF OPEN
         BNZ   SDQ010
         MVC   TURETDDN+6(8),4(R01) OTHERWISE ANY WILL DO
         MVC   TURETDDN+4(2),=H'8' SET DDNAME LENGTH
         B     SDQ080              OK TO LEAVE
SDQ010   DS    0H
         CLC   ADDNAME,4(R01)  Q... REQUESTED DDNAME?
         BE    SDQ080          A... YES: RETURN
SDQ020   DS    0H        THIS ONE DID NOT MATCH:
         CLM   R15,7,17(R14)       Q... WAS THAT THE LAST?
         BE    SDQ090              A... YES IT WAS: EXIT NOT FOUND
         L     R15,0(,R15)         POINT TO THE NEXT
.NX8400  ANOP                                                    88036
         B     SDQ005              AND TRY AGAIN
SDQ080   L     R14,SDQRETN         RETURN: FOUND
         SLR   R15,R15
         BR    R14
SDQ090   L     R14,SDQRETN         RETURN: FOUND
         SLR   R15,R15
         B     4(R14)
         DROP  R15
         TITLE '&TITLE DATASET QUALIFY SUBROUTINE'
QUAL     DS    0H
         TM    AFLAG1,ATERM
         BNZR  R14
         TM    AFLAG1,AFLG1DS
         BZ    QUAL0005                                           J40B
         SPACE 2                                                  J40B
*   SOME NICE PERSON HAS PROVIDED A FULLY QUALIFIED NAME          J40B
         SPACE 2                                                  J40B
         MVC   TUDSNENT(2),=Y(44) IT'S POSSIBLY AS LONG AS THIS   J40B
         MVC   TUDSNENT+2(44),ADSNAME THIS IS WHAT IT'S CALLED    J40B
         BR    R14                                                J40B
QUAL0005 DS    0H
         STM   R02,R14,QUALREGS
         MVI   TUDSNENT+2,C' '     CLEAR THE DSNAME
         MVC   TUDSNENT+3(43),TUDSNENT+2
         USING DSPDE,R05
         L     R03,DSNPT           LOAD DSNAME ADDRESS
         CLI   0(R03),C'&&'        Q... TEMPORARY DATASET?
         BNE   QUAL0010            A... NO
         OI    AFLAG1,ATEMP        YES: SET FLAG
QUAL0010 DS    0H
         SLR   R15,R15             CLEAR R15 (WILL CONTAIN TU LEN)
         TM    DSFLG,X'40'         Q... PREFIX IT?
         BO    QUAL0020            A... NO
         TM    AFLAG1,ATEMP        Q... TEMP?
         BO    QUAL0020            A... YES
         AIF   ('&PREFOUT' EQ 'USERPREFIX').Q010
         AIF   ('&PREFOUT' EQ 'SYSPREF').Q010
         TM    AFLAG1,AMOD         Q... DATASET TO BE WRITTEN?
         BZ    QUAL0015            A... NO
         ICM   R15,1,PSCBUSRL      LOAD USERID LENGHT
         BZ    QUAL0015            BRANCH IF NONE: USE PREFIX
         MVC   TUDSNENT+2(7),PSCBUSER  MOVE USERID
         B     QUAL0018
QUAL0015 DS    0H
.Q010    ANOP
         ICM   R15,1,UPTPREFL      Q... A PREFIX AVAILABLE?
         BZ    QUAL0020            A... NO
         MVC   TUDSNENT+2(7),UPTPREFX MOVE PREFIX
         AIF   ('&PREFOUT' EQ 'USERPREFIX').Q020
         AIF   ('&PREFOUT' EQ 'SYSPREF').Q020
QUAL0018 DS    0H
.Q020    ANOP
         LA    R01,TUDSNENT+2(R15) ADDRESS NEXT BYTE
         MVI   0(R01),C'.'         INSERT PERIOD IN DSNAME
         LA    R15,1(0,R15)        COUNT IT
QUAL0020 DS    0H
         SLR   R14,R14
         ICM   R14,3,DSLEN         LOAD LENGTH OF DSNAME SUPPLIED
         BZ    QUAL0040
         BCTR  R14,0
         CLI   0(R03),C'*'         Q... TERMINAL REQUEST
         BNE   QUAL0030            A... NO
         OI    AFLAG1,ATERM        YES: SET FLAG
         MVI   TUDSNENT,C'*'       SHOW CALLER TERMINAL ALLOCATION
         B     QUAL0090              AND EXIT
QUAL0030 DS    0H
         LA    R01,TUDSNENT+2(R15) ADDRESS NEXT BYTE
         EX    R14,*+4             MOVE IT
         MVC   0(0,R01),0(R03)
         LA    R15,2(R14,R15)      COUNT THE LENGTH
QUAL0040 DS    0H
         BCTR  R15,0
         STH   R15,TUDSNENT        STORE IN TEXT UNIT
         TM    DSFLG,X'40'         Q... SUFFIX IT?
         BO    QUAL0050            A... NO
         TM    AFLAG1,ATEMP        Q... TEMP?
         BO    QUAL0090            A... YES
         OC    ASUFFIX,ASUFFIX     Q... A SUFFIX GIVEN?
         BZ    QUAL0050            A... NO
         LA    R14,TUDSNENT+2(R15) LOAD ADDRESS OF NEXT BYTE
         AIF   ('&VSAMCAT' EQ 'NO').NVSAM01
         LR    R01,R14             ADDRESS END OF NAME
         SH    R01,ASUFFIXL        ADDRESS OF PROBABLE START OF SUFFIX
         CLC   ASUFFIX,0(R01)      Q... ALREADY QUALIFIED?
         BE    QUAL0050            A... YES
.NVSAM01 ANOP
         MVC   0(9,R14),ASUFFIX    COMPLETE QUALIFICATION
         AH    R15,ASUFFIXL        COMPUTE REST OF LENGTH
         STH   R15,TUDSNENT        STORE IN TEXT UNIT
QUAL0050 DS    0H
         LA    R01,TUDSNENT
         BAL   R14,CATSCH          CALL CATALOG SEARCH
QUAL0090 DS    0H
         MVC   ADSNAME,TUDSNENT+2  COPY DSNAME FOR DSAB SEARCH
         LM    R02,R14,QUALREGS
         BR    R14
         TITLE '&TITLE CATALOG SEARCH SUBROUTINE'
*  NOTE
*   (1) IS THE ADDRESS OF THE DSNAME TO BE OPERATED ON
*          THERE MUST BE AN EIGHT BYTE PAD AREA AT ITS END
         SPACE
*  UPON RETURN
*   IF DSNAME FOUND IN THE CATALOGUE
*    THE DSNAME MAY BE CHANGED (IF TOO LONG IT IS SHORTENED)
*    APTVOL CONTAINS VOLUME SERIAL NUMBER ACCORDING TO THE CATALOGUE
*    APTUNIT CONTAINS THE ADDRESS OF THE UNIT CONTAINING THE VOLUME
*   IF DSNAME NOT FOUND
*    (R15) REFLECTS THIS FACT
         SPACE
CATSCH   ST    R14,CATRET
         ST    R01,CATDSPT         SAVE ADDRESS OF DSNAME
         SLR   R14,R14             CLEAR REGISTER
         LA    R15,2(0,R01)        ADDRESS OF DSNAME
         SLR   R00,R00             A ZERO ENTRY IN LIST
         LA    R01,CATWORK         ADDRESS OF WORK AREA
         STM   R14,R01,CATPARMS    STORE LIST
         MVI   CATPARMS,X'44'      SET FLAGS
         AIF   (&X8).X8LOC                                       88036
         LOCATE CATPARMS           ISSUE THE REQUEST
         AGO   .LOCD                                             88036
.X8LOC   ANOP                                                    88036
         LA    R01,CATPARMS
         CALL  UJS03CTS
         AGO   .LOCD                                             88036
         USING VOLINFO,1
         L     1,12(,1)          ADDRESS CATALOGUE WORK AREA
         LTR   15,15             WAZIT OK
         BNZ   &E                NOT EXACTLY
         CLI   DDMBR+1,C'+'      WAZIT A GDG
         BE    &E                ITWAZ: LEAVE IT ALONE
         CLI   CATDEV+2,X'80'    IZIT A TAPE?
         BNE   &D                ITZ NOT
         MVC   DDUNIT,=CL8'MT'   ITZ A TAPE
         MVI   DDUNITYP,X'09'    STILL
         B     &E
&D       DS    0H
         MVC   DDUNIT,=CL8'DA'   MUST BE DISK
         MVI   DDUNITYP,X'8B'
&E       DS    0H
.LOCD    ANOP                                                    88036
         STC   R15,CATRC           STORE RETURN CODE
         STC   R00,CATFLG          AND REASON
         CH    R15,=H'12'
         BL    CS070               BR IF  OK, NO CVOL OR NOT CAT
         BH    CS010               DSN TOO LONG
         SPACE
*  SPECIFIED DSNAME IS TOO SHORT AND NEEDS A FURTHER QUALIFIER
*     HOWEVER, THAT IS THE JOL USER'S PROBLEM AT PRESENT
         B     CS070
         SPACE
CS010    DS    0H
         MVI   CATRC,0             INDICATE DATASET EXISTS
         SPACE
*   THE NAME PRESENTED IS LONGER THAN AN EXISTING DSNAME
*    TO HELP THE USER, IT IS TO BE SHORTENED BY REMOVING THE
*       LAST QUALIFIER.
         SPACE
         L     R14,CATDSPT         ADDRESS DSNAME
         LH    R15,0(0,R14)        LOAD DSNAME LENGTH
CS020    DS    0H
         LA    R01,1(R15,R14)      ADDRESS OF END OF DSN TEXT
         CLI   0(R01),C'.'         Q... PERIOD?
         MVI   0(R01),C' '         BLANK IT ANYWAY
         BE    CS030               A... YES, IT IS A PERIOD
         BCT   R15,CS020 CONTINUE THE SCAN
         B     CSBAD               ERROR EXIT
CS030    DS    0H                  DSNAME IS NO SHORTENED
*        LH    R00,0(0,R14)        LOAD LENGTH DSNAME
*        SR    R00,R15             COMPUTE NEW LENGTH
         STH   R15,0(0,R14)        STORE THE NEW LENGTH
CS070    DS    0H
         CLI   CATRC,0
         BNE   CS095
         SPACE
*   IF THE DATASET IS CATALOGUED, THEN SAVE ANOTHER LOCATE BY
*     DYNAMIC ALLOCATION BY COPYING VOLUME INFO
         SPACE
         NI    AFLAG1,X'FF'-AMOD   TURN OFF MOD FLAG IF DS EXISTS
         CLI   CATWORK+1,1         Q... JUST ONE VOLUME?
         BNE   CS095               A... NO: I DID NOT SEE IT
         MVC   AVOL,CATWORK+6      COPY SERIAL NO TO ALLOC PARMS
         SPACE
         AIF   (&X8).NOUCB                                       88036
*   NOW FIND THE UNIT ADDRESS IF THE VOLUME IS MOUNTED
*    AND SET THAT UP TOO.
*
* BEFORE DOING SO, CHECK IF WE ARE RUNNING UNDER XA.              84016
*  IF SO, BYPASS THE CHECKING OF THE UCB TEMPORARILY.             84016
         L     R15,CVTPTR        address of cvt                   84016
*        L     R15,0(R15)          ADDRESS OF CVT                 84016
         DC    X'47000000'       really, clem!                    J40B
         TM    CVTDCB-CVT(R15),X'80' XA SYSTEM?                   87127
         BO    CS095               YES, SO IGNORE UCB LOOK UP     84016
         SPACE
         L     R15,CVTPTR          ADDRESS CVT
         L     R15,CVTILK2-CVT(,R15) ADDRESS OF UCB TABLE
         SLR   R14,R14
CS080    ICM   R14,3,0(R15)        LOAD UCB ADDRESS
         LA    R15,2(,R15)         POINT TO NEXT ENTRY IN TABLE
         BZ    CS080               BRANCH IF NOT FILLED IN
         C     R14,=A(X'FFFF')     Q... END OF TABLE?
         BNL   CS090               A... YES
*  REGISTER 14 NOW POINTS TO A UNIT CONTROL BLOCK
*   NOW CHECK THE VOLUME SERIAL NUMBER
         CLC   AVOL,X'01C'(R14)    Q... CORRECT VOLUME?
         BNE   CS080               A... NO: CHECK NEXT UCB
         MVI   AUNIT,C' '          CLEAR UNIT NAME
         MVC   AUNIT+1(L'AUNIT-1),AUNIT
         MVC   AUNIT(3),X'00D'(R14) COPY UNIT ADDRESS FROM UCB
         B     CS095
CS090    DS    0H                  THE UNIT ADDRESS WAS NOT FOUND
         XC    AVOL,AVOL             SO CLEAR THE VOLUME SERIAL TOO
* (ALLOCATION PROBLEMS FOR MOUNT-AUTHORISED USERS IF THIS IS NOT DONE)
.NOUCB   ANOP                                                    88036
CS095    DS    0H
         L     R14,CATRET
         BR    R14
         SPACE 2
CSBAD    DC    H'0',C'CATALOG SEARCH BUG'
         TITLE '&TITLE TIOT SCAN SOUBROUTINE'
* THIS SUBROUTINE SEARCHES THE TIOT FOR A SPECIFIED DDNAME
*  WHOSE ADDRESS IS PASSED IN REGISTER 1
         SPACE
         AIF   (&X8).FCTSRCH                                     88036
SCHTIOT  DS    0H
         L     R15,X'010'          ADDRESS OF CVT
         L     R15,0(0,R15)        TCB WORDS
         L     R15,4(,R15)         ADDRESS OF MY TCB
         SLR   R00,R00
         L     R15,TCBTIO-TCB(,R15) TIOT ADDRESS
ST010    DS    0H
         CLC   28(8,R15),0(R01)    Q... DDNAME MATCH?
         BER   R14                 A... YES:RETURN
         IC    R00,24(,R15)        LENGTH OF THIS ENTRY
         AR    R15,R00
         LTR   R00,R00             Q... END OF TIOT?
         BNZ   ST010               A... NO: CHECK THE NEXT ENTRY
         AGO   .NFCT                                             88036
         FIX   'PUT AN FCT SEARCH HERE'                          88036
.FCTSRCH ANOP                                                    88036
         TITLE 'FCT SCAN SUBROUTINE FOR OSIV/X8'
* THIS SUBROUTINE SEARCHES THE FCT FOR A SPECIFIED DDNAME
*  WHOSE ADDRESS IS PASSED IN REGISTER 1
* IT REPLACES SRCHTIOT ON OSIV/F4 AND MVS SYSTEMS: FOR COMPATIBILITY
*  IT'S CALLED "SRCHTIOT" INTERNALLY
         USING FLC,0
         SPACE
SCHTIOT  DS    0H
         L     R15,FLCTOLD         ADDRESS OF MY TCB
         L     R15,TCBJSCB-TCB(,R15) ADDRESS MY JSCB
         ICM   R15,7,JSCBFCTA-JSCB(R15)
         BZ    ST800
         USING FCT,R15
         SPACE 2
*  FOUND THE START OF THE FCT CHAIN: NOW SCAN CHAIN FOR THE FILE I AM
*SUPPOSED TO FIND
         SPACE 2
ST100    DS    0H
         CLC   FCTACSN,0(R01)    Q... ONE I WANT?
         BER   R14               A... YES
         ICM   R15,7,FCTNFCTA  ADDRESS THE NEXT
         BNZ   ST100
ST800    DS    0H
.NFCT    ANOP                                                    88036
         CLR   R14,R15             SET CC TO SHOW NOT EQUALS
         BR    R14
         TITLE '&TITLE DYNAMIC ALLOCATION ERROR MESSAGE ROUTINE'
S99MSG   ST    R14,S99MRET
         LA    R01,S99RB
         ST    R01,DFLIST          STORE S99 REQ BLK ADDR
         OC    DFLIST+4(4),DFLIST+4 Q... BEEN HERE BEFORE?
         BNZ   S99010              A... YES
         ST    R15,S99RC           SAVE RETURN CODE FROM SVC 99
         LA    R00,S99RC           SET POINTER
         ST    R00,DFLIST+4
&C       SETC  (&X8)'KEQEFF02'.(1-&X8)'IKJEFF02'                 88036
         LOAD  EP=&C
         ST    R00,DFEFF02         STORE ADDRESS OF MSG ISSUER
         LA    R00,DFEFF02
         ST    R00,DFLIST+8
         LA    R00,DFFLAGS         ADDRESS OF FLAGS
         ST    R00,DFLIST+12
         MVI   DFFLAGS+1,X'32'     SET CALLER ID
         L     R01,4(0,R13)
         MVC   DFLIST+16(4),24(R01) CPPL ADDRESS
S99010   DS    0H
&C       SETC  (&X8)'KEQEFF18'.(1-&X8)'IKJEFF18'                 88036
         LINK  EP=&C,MF=(E,DFLIST) CALL DAIRFAIL
         LTR   R15,R15             Q... OK?
         BZ    S99020               A... YES
         CVD   R15,DOUBLE          ISSUE ERROR MSG
         OI    DOUBLE+7,X'0F'
         MVC   DFMSG,=C'DAIRFAIL RETURN CODE NN'
         UNPK  DFMSG+21(2),DOUBLE
         LA    R01,DFMSG
         LA    R00,L'DFMSG
         SVC   93
S99020   DS    0H
         L     R14,S99MRET
         BR    R14
         TITLE '&TITLE DYNAMIC DECONCATENATION SUBROUTINE'
DECONC   STM   R02,R14,DCONCRGS    SAVE RETURN ADDRESS
         LA    R01,ADDNAME
         BAL   R14,SCHTIOT         Q... DDNAME ALLOCATED?
         BNE   DNC090              A... NO
         SLR   R00,R00
         IC    R00,24(,R15)        LENGTH OF THIS DD ENTRY
         AR    R15,R00             ADDRESS OF THE NEXT
         CLC   =C'        ',28(R15)
         BNE   DNC090              IS NOT CONCATENATED
         BAL   R14,INITS99R        INITIALISE THE REQ BLK
.*       MVI   S99VERB,X'04'       INDICATE DECONCATENATION
         MVI   S99VERB,X'02'       INDICATE UNALLOCATION
         MVC   TUDDN(6),=X'000100010008' BUILD TEXT UNIT
         MVC   TUDDN+6(8),ADDNAME
         LA    R00,TUDDN           BUILD TEXT UNIT LIST
         LA    R01,=Y(7,0)     EVEN IF PERMANENTLY ALLOCATED
         STM   R00,R01,S99TUPL
         OI    S99TUPL+4,X'80'     MARK ITS END
         LA    R01,S99RBPTR
SVC99C   SVC   99                  ISSUE THE REQUEST
         LTR   R15,R15             Q... OK?
         BZ    DNC090              A... YES
         BAL   R14,S99MSG          ISSUE AN ERROR MSG
DNC090   DS    0H
         LM    R02,R14,DCONCRGS
         BR    R14
         TITLE 'SUBROUTINE TO FIND OUT WHETHER TO SUBMIT A GENERATED JO.
               BSTREAM SHOULD BE SUBMITTED'
QSUBMIT  ST    R14,QSUBRET
         TM    FLAG,QSUB           SHOULD I ASK?
         BZ    4(R14)              A... NO
         CLI   TSO+1,X'01'         TSO (RUN NOW) SPECIFIED?
         BNE   QS010
         PUTGET PARM=IOPB,                                             .
               TERMPUT=(ASIS,HOLD,NOBREAK),                            .
               TERMGET=(WAIT,EDIT),                                    .
               OUTPUT=(QMSG2,SINGLE,TERM),                             .
               ECB=IOECB,                                              .
               MF=(E,IOPL)
         B     QS015
QS010    DS    0H
         PUTGET PARM=IOPB,                                             .
               TERMPUT=(ASIS,HOLD,NOBREAK),                            .
               TERMGET=(WAIT,EDIT),                                    .
               OUTPUT=(QMSG1,SINGLE,TERM),                             .
               ECB=IOECB,                                              .
               MF=(E,IOPL)
QS015    DS    0H
         LTR   R15,R15             Q... PUTGET OK?
         L     R14,QSUBRET
         BNZR  R14                 A... NO: KILL THE JOB
         L     R15,IOPB+12
         LH    R01,0(0,R15)         FIX 29/09/82            **JCS**
         SH    R01,=H'5'
         BM    QS010                FIX 0C4 OCCURS 29/09/82 **JCS**
         EX    R01,*+4
         OC    4(0,R15),=CL256' '  TRANSLATE TO UPPERCASE
TSQS     DS    0H
         CLC   =C'YES',4(R15)      WILL HE?
         BE    4(R14)                A... YES
         CLC   =C'YE',4(R15)       WILL HE?
         BE    4(R14)                A... YES
         CLC   =C'Y',4(R15)        WILL HE?
         BE    4(R14)                A... YES
         CLC   =C'NO',4(R15)
         BER   R14                   A... NO
         CLC   =C'N',4(R15)
         BNE   QS010               I DO NOT UNDERSTAND HIM
         BR    R14
         SPACE 2
&C       SETC  '&PRE.020-A DO YOU WANT TO SUBMIT THE GENERATED JOB?'
&A       SETA  K'&C+4
&CX      SETC  '&PRE.020-A DO YOU WANT TO RUN THE JOB NOW?'
&A2      SETA  K'&CX+4
QMSG1    DC    F'1',A(*+4),H'&A,0',C'&C'
QMSG2    DC    F'1',A(*+4),H'&A2,0',C'&CX'
         TITLE '&TITLE CONSTANTS ETC'
LINKDCBL DCB   DDNAME=$$JLOAD,MACRF=E,EXLST=4
DCBLEN   EQU   *-LINKDCBL
LINKSFL  LINK  SF=L
MSG1     DC    Y(MSG1LN,0),C'&PRE.001-E'
         DC    C' ERROR: MEMBER SPECIFIED FOR SEQUENTIAL DATASET'
MSG1LN   EQU   *-MSG1
MSG2     DC    Y(MSG2LN,0),C'&PRE.002-E'
         DC    C' ERROR: MEMBER OMITTED FOR PARTITIONED DATASET'
MSG2LN   EQU   *-MSG2
MSG3     DC    Y(MSG3LN,0),C'&PRE.003-E PARSE ERROR'
MSG3LN   EQU   *-MSG3
MSG4     DC    Y(MSG4LN,0),C'&PRE.004-E'
         DC    C' A MEMBER OF A PARTITIONED DATASET MAY NOT BE PART OF .
               A JOL LIBRARY'
MSG4LN   EQU   *-MSG4
MSG5     DC    Y(MSG5LN,0),C'&PRE.005-E'
         DC    C' A SEQUENTIAL DATASET MAY NOT BE PART OF A JOL LIBRARY.
               '
MSG5LN   EQU   *-MSG5
MSG7     DC    Y(MSG7LN,0),C'&PRE.007-E'
         DC    C' YOU ARE NOT AUTHORISED TO USE THE JOL COMMAND.'
MSG7LN   EQU   *-MSG7
MSG8     DC    Y(MSG8LN,0)
.*       DC    X'C21140403C4040001DE8'
         DC    C'&PRE.008-A'
         DC    C' Please enter your Jol statements and end with a /*'
.*       DC    X'11C14F1D4013'
MSG8LN   EQU   *-MSG8
         ORG   *-240
HEXTAB   DS    0CL256,240C
         DC    C'0123456789ABCDEF'
         LTORG
         TITLE '&TITLE INPUT DATASET VALIDITY CHECK'
         PUSH  USING
         DROP
&PRE.VC01 CSECT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         XC    16(4,R13),16(R13)   CLEAR RETURN CODE
         USING &PRE.VC01,R15       DECLARE NEW BASE REGISTERS
         USING WKAREA,R03
         USING DSPDE,R02
         LM    R02,R03,0(R01)      LOAD PARAMETER ADDRESSES
         CLI   DSLEN+1,X'02'       Q... ONE BYTE DSNAME? **JCS 29/09/82
         BNH   VC01090             A... YES: IT'S OK     **JCS 29/09/82
         LH    R04,DSLEN           LOAD DSNAME LENGTH
         BCTR  R04,0
         L     R05,DSNPT           LOAD DSNAME ADDRESS
         TRT   0(0,R05),ASTERTAB   Q... ANY ASTERISKS?
         EX    R04,*-6
         BC    8,VC01090           A... NO: IT'S OK
         LA    R00,MSG6            LOAD ADDRESS OF ERROR MSG
         L     R01,24(0,R13)
         ST    R00,8(0,R01)        STORE IT
         MVI   19(R13),X'04'       SET RETURN CODE
VC01090  LM    R14,R12,12(R13)      AND RETURN
         BR    R14
         SPACE 2
         POP   USING
ASTERTAB DC    (C'*')X'00',X'04',(255-C'*')X'00'
MSG6     DC    Y(MSG6LN,0),C'&PRE.006-I'
         DC    C' THE DSNAME MUST BE AN ASTERISK ALONE, OR CONTAIN NO A.
               STERISKS'
MSG6LN   EQU   *-MSG6
&NAME    CSECT
&A       SETA  2
.XYZ     ANOP
UT&A     DC    A(*+24),X'00078000',4A(0),C'&&JOLWK&A '
&A       SETA  &A-1
         AIF   (&A GT 0).XYZ
         AIF   (T'&JCL NE 'O').JCL010
JCLSET   DC    A(*+24),X'00048000',4A(0),C'&&JCL '
.JCL010  ANOP
&NAME    JOLTSF                                                        .
               OS=&OSTYPE,     NAME OF OPERATING SYSTEM                .
               ALIAS=&ALIAS,   ALIASES FOR THE COMMAND                 .
               CAT=&CAT,       CATALOG SEARCH OPTION                   .
               CMDLIB=&CMDLIB, JOL MACROES                             .
               C1=&C1,         DEFAULT CARD1                           .
               C2=&C2,         DEFAULT CARD2                           .
               C3=&C3,         DEFAULT CARD3                           .
               C4=&C4,         DEFAULT CARD4                           .
               DC=&DC,         DEFAULT DUMP CARD                       .
               DYNAMIC=&DYNAMIC, JCL GENERATE OPTION                   .
               FLAG=&FLAG,     DEFAULT FOR FLAG IS 0                   .
               GENCB=&GENCB,   EXPAND ALL OS MAPPING MACROES           .
               INCLIB=&INCLIB, JOL INCLUDE LIBRARY                     .
               JCL=&JCL,       DEFAULT JCL DATASET                     .
               JCLBLK=&JCLBLK, DEFAULT JCL BLOCKSIZE                   .
               JLOAD=&JLOAD,   JOL LOAD LIBRARIES                      .
               LET=&LET,       SUBMIT JCL EVEN IF ERRORS OCCURRED*     .
               LIST=&LIST,     SYSOUT CLASS FOR COMPILED LISTINGS      .
               PCOM=&PCOM,     PRINT COMMENTS                          .
               PGM=&PGM,       NAME OF JOL COMPILER                    .
               PEXPAND=&PEXPAND, PRINT MACRO EXPANSIONS                .
               PJCL=&PJCL,     PRINT JCL                               .
               PINCLUD=&PINCLUD, PRINT INCLUDED JOL                    .
               PMACRO=&PMACRO, LIST MACROES                            .
               POPT=&POPT,     PRINT JOL OPTIONS                       .
               PRINT=&PRINT,   DEFAULT PRINT FILE (JOL.LIST)           .
               PREFOUT=&PREFOUT,    USER CURRENT PREFIX FOR PRINT,JCL  .
               PRTBLK=&PRTBLK, DEFAULT PRINT FILE BLOCK SIZE           .
               SUB=&SUB,       SUBMIT JCL EVEN IF ERRORS OCCURRED*     .
               SYMS=&SYMS,     STRING OF CHARACTERS TO PASS TO JOL     .
               SYNCHK=&SYNCHK, SYNTAX CHECKING (CREATE AND EXECUTE)    .
               TERM=&TERM,     DEFAULT FOR TERM IS TERM                .
               TEST=&TEST,     DO NOT EXECUTE GENERATE JCL             .
               TSO=&TSO,       DEFAULT IS JCL GENERATE                 .
               UNITJCL=&UNITJCL, UNIT NAME FOR THE GENERATED JCL       .
               UNITWRK=&UNITWRK, UNIT NAME FOR $$JWRK1 AND $$JWRK2     .
               VSAMCAT=&VSAMCAT VSAM CATALOGS OPTION
.JCSWSNT ANOP
         DS    0D
&NAME    CSECT
         SPACE
         LTORG
         AIF   ('&GENCB' EQ 'YES').GENCB
         PUSH  PRINT
         PRINT NOGEN
.GENCB   ANOP
         DS    0D
         AIF   (&X8).X8CB
         TITLE '&TITLE DATA CONTROL BLOCK'
         DCBD  DSORG=PS,DEVD=DA
         TITLE '&TITLE USER PROFILE TABLE'
         IKJUPT
         TITLE '&TITLE PROTECTED STEP CONTROL BLOCK'
         IKJPSCB
         TITLE '&TITLE ENVIRONMENT CONTROL TABLE'
         IKJECT
         TITLE '&TITLE PARSE PARAMETER LIST'
         IKJPPL
LENMYPPL EQU   *-PPL
         AIF   (&F4).F4CB
         TITLE '&TITLE PREFIXED STORAGE AREAS'
         IHAPSA   DSECT=YES
         TITLE '&TITLE COMMUNICATIONS VECTOR TABLE'
         CVT   DSECT=YES,SYS=BOTH
         TITLE '&TITLE TASK CONTROL BLOCK'
         IKJTCB
         TITLE '&TITLE JOB-STEP CONTROL BLOCK'
         IEZJSCB
         TITLE '&TITLE DATA-SET ASSOCIATION BLOCK'
         IHADSAB
         TITLE '&TITLE DSAB QUEUE DESCRIPTOR BLOCK'
         IHAQDB
         TITLE '&TITLE JOB FILE CONTROL BLOCK'
JFCB     DSECT
         IEFJFCBN
         AGO   .CBDUN
.F4CB    ANOP
         TITLE '&TITLE FIXED LOW STORAGE AREAS'
         KAAFLC   DSECT=YES
PSATOLD  EQU   FLCTOLD                                           88036
         TITLE '&TITLE COMMUNICATIONS VECTOR TABLE'
         KAACVT   DSECT=YES
         TITLE '&TITLE TASK CONTROL BLOCK'
         KAATCB
         TITLE '&TITLE JOB-STEP CONTROL BLOCK'
         KDJJSCB
         ORG  KDJJSCB
IEZJSCB  DS   0H
         ORG
         TITLE '&TITLE DATA-SET ASSOCIATION BLOCK'
         KDJDSAB
         TITLE '&TITLE DSAB QUEUE DESCRIPTOR BLOCK'
         KDJQDB
         TITLE '&TITLE JOB FILE CONTROL BLOCK'
JFCB     DSECT
         KDJJFCBN LIST=YES,DSECT=NO
         AGO   .CBDUN                                            88036
.X8CB    ANOP
         TITLE '&TITLE DATA CONTROL BLOCK'
         DCBD  DSORG=PS,DEVD=DA
         TITLE '&TITLE USER PROFILE TABLE'
         KEQUPT
         TITLE '&TITLE PROTECTED STEP CONTROL BLOCK'
         KEQPSCB
         TITLE '&TITLE ENVIRONMENT CONTROL TABLE'
         KEQECT
         TITLE '&TITLE PARSE PARAMETER LIST'
         KEQPPL
LENMYPPL EQU   *-PPL
         TITLE '&TITLE FIXED LOW STORAGE AREAS'
         XAMFLC   DSECT=YES
PSATOLD  EQU   FLCTOLD                                           88036
         TITLE '&TITLE COMMUNICATIONS VECTOR TABLE'
         XAMCVT   DSECT=YES
CVTPTR   EQU   16                                                88036
         TITLE '&TITLE TASK CONTROL BLOCK'
         XAMTCB
         TITLE '&TITLE JOB-STEP CONTROL BLOCK'
         XDDJSCB
         ORG   JSCB
IEZJSCB  DS    0H
         ORG
         TITLE '&TITLE DATA-SET ASSOCIATION BLOCK'
         KDJDSAB
         TITLE '&TITLE DSAB QUEUE DESCRIPTOR BLOCK'
         KDJQDB
         TITLE '&TITLE FILE CONTROL TABLE'
         XDDFCT
         TITLE '&TITLE JOB FILE CONTROL BLOCK'
JFCB     DSECT
         KDJJFCBN LIST=YES,DSECT=NO
.CBDUN   ANOP
         AIF   ('&GENCB' EQ 'YES').GENCB2
         POP   PRINT
.GENCB2  ANOP
         TITLE '&TITLE WORK AREA'
WKAREA   DSECT
         DS    18F                  SAVE AREA
DOUBLE   DS    D
LINKDCBE DS    XL(DCBLEN)
JFCBPTR  DC    A(*+4+X'87000000')
WRKJFCB  DS    XL176
OPENLIST DS    A
LINKSFE  DS    XL8
ALLCREGS DS    13A
QUALREGS DS    13F
CONCREGS DS    13F
DCONCRGS DS    13F
S99MRET  DS    A
STPRETN  DS    A
SDQRETN  DS    A
QSUBRET  DS    A
PARM     DS    1F
NBRDDN   DS    H
FLAG     DC    X'00'
QSUB     EQU   X'80'               ASK WHETHER TO SUBMIT
TERMIN   EQU   X'40'               INPUT WAS FROM TERMINAL
         DS    0F
TEMP     DS    XL5
HEXCONV  DS    XL19
PPLADDR  DS    F
MYECB    DS    F
         SPACE 4
         DS    0F
DFLIST   DS    A       -> FAILING SVC 99 RB
         DS    A       -> RETURN CODE
         DS    A       -> IKJEFF02 PTR OR IS ZERO
         DS    A       -> DAIRFAIL FLAGS
DFCPPL   DS    A       -> CPPL OR IS ZERO
S99RC    DS    F       SVC 99 RETURN CODE
DFFLAGS  DC    X'0032' DAIRFAIL FLAGS
DFEFF02  DS    A
DFMSG    DC    C'DAIRFAIL RETURN CODE NN'
S99RBPTR DS    A
S99RB    DS    0XL20
S99RBLN  DS    X
S99VERB  DS    X
S99FLAG1 DS    XL2
S99ERROR DS    XL2
S99INFO  DS    XL2
S99TXTPP DS    XL4
S99FLAG2 DS    XL4
S99RESVD DS    XL4
S99TUPL  DS    20XL4
         SPACE 4
TUAREA   DS    0D
TUDSN    DS    0XL50,XL2
TUDSNNBR DS    XL2
TUDSNENT DS    XL46,CL8
TURETDSN DS    XL2
TURETDSK DS    XL2
TURETDS# DS    XL2
TURETDS  DS    CL46
TUUNIT   DS    XL14
TUDDN    DS    0XL14,2X
TUDDNNBR DS    XL2
TUDDNENT DS    CL10
TURETDDN DS    0XL14,2X
TURETDDK DS    XL2
TURETDD# DS    XL2
TURETDD  DS    CL8
TUPSD    DS    0XL14
         DS    XL2
TUPSDNBR DS    XL2
TUPSDLEN DS    XL2
TUPSDNM  DS    CL8
TUDSORG  DS    XL8
TUMBR    DS    0XL14
         DS    XL2
TUMBRNBR DS    XL2
TUMBRLEN DS    XL2
TUMBRNM  DS    CL8
TUDISP   DS    XL7
TUCATLG  DS    XL7
TUTERM   DC    X'00280000'
TUDMY    DC    X'00240000'
TUSOUT   DC    X'001800010001C1'
TUBLKSI  DC    X'0030000100020000'
TUVOL    DC    X'001000010006404040404040'
         DS    0F
TUAREAL  EQU   *-TUAREA
*
* FOLLOWING CODE BY PETER FOLEY ABS APR 1983
*
TUAREA2  DS    0D
TUROUND  DS    XL4
TUAVBLK  DS    XL9
TUPRIMS  DS    XL9
TUSECND  DS    XL9
         DS    0F
TUAREAL2 EQU   *-TUAREA2
*
* PREVIOUS CODE BY PETER FOLEY ABS APR 1983
*
         SPACE 3
*  THIS AREA IS USED TO BUILD THE TEXT UNIT FOR CONCATENATION
         SPACE
TUCONC   DC    X'0001'     TYPE
         DC    X'0000'     NUMBER
TUCONCDD DS    16CL10      SPACE FOR SIXTEEN ENTRIES
TUCONCL  EQU   *-TUCONC
CNDDTABP DS    A
CNDDTAB  DS    20CL8       SPACE FOR 20 CONCATENATED DDNAMES
         SPACE 3
IOPB     DS    4F
IOPL     DS    4F
IOECB    DS    F
OLD1CHN  DS    XL4
OLD1     DS    XL4
OLD1#1   DS    XL4
OLD1#2   DS    XL4
OLD1#3   DS    XL4
OLD1#4   DS    XL4
OLD1#5   DS    XL4
MSGRC    DS    XL6
MSGDARC  DS    XL8
MSGDAFLG DS    XL8
MSGCAT   DS    XL8
PRMOPTNS DS    XL256
USERPLST DS    A
USERPRML DS    H
USERPRM  DS    CL256
MYPPL    DS    XL(LENMYPPL)
PPLREPL  DS    A                  PTR TO REPLY
         SPACE 2
CFLAGS   DS    0XL2
CFLAG1   DS    X
CFLAG2   DS    X
         SPACE 4
APTAREA  DS    0X                  ALLOCATION PARAMETER TABLE
APDE     DS    A                   ADDRESS OF PDE FOR FILE TO ALLOCATE
ADSNAME  DS    CL44                DSNAME TO ALLOCATE
AMBRNAME DS    CL8                 MEMBER NAME TO ALLOCATE
ADDNAME  DS    CL8                 DDNAME SUPPLIED TO USE
AUNIT    DS    CL8                 UNIT NAME/ADDRESS TO USE
AVOL     DS    CL6                 VOLUME CONTAINING DATASET
*DEVT    DS    XL4                 UCB DEVICE TYPE OF DEVICE (NOT USED)
ASUFFIXL DS    H                   SUFFIX LENGTH
ASUFFIX  DS    CL9                 SUFFIX IF DSN TO BE QUALIFIED
AOUTLIM  DS    F                   OUTLIM
ABLKSIZ  DS    H                   BLOCK SIZE
ALRECL   DS    H                   RECORD LENGTH
APRIM    DS    H                   PRIMARY ALLOCATION
ASEC     DS    H                   SECONDARY ALLOCATION
ADIR     DS    H                   DIRECTORY BLOCKS
ADSORG   DS    H                   DSORG REQUIRED
AFLAGS   DS    0XL2                ALLOCATION FLAGS
AFLAG1   DC    X'00'               ALLOCATION FLAG BYTE 1
FF       EQU   X'FF'
ASOUT    EQU   X'80'               ALLOCATE A SYSOUT DATASET
AMOD     EQU   X'40'               ALLOCATE AS NEW IF NO DATASET
ATEMP    EQU   X'20'               TEMPORARY DATASET
ANULL    EQU   X'10'               DUMMY DATASET REQUIRED
APDS     EQU   X'08'               CONCATENATE REQUEST
ASHR     EQU   X'04'               A DATASET CAN BE SHARED
ATERM    EQU   X'02'               ALLOCATE DATASET TO THE TERMINAL
AFLG1DS  EQU   X'01'               DON'T QUALIFY: FULL DSN GIVEN  J40B
         SPACE
AFLAG2   DC    X'00'               SECOND BYTE OF ALLOCATION FLAGS
APERMA   EQU   X'80'               MARK PERMANENTLY ALLOCATED
APERMC   EQU   X'40'               MARK PERMANENTLY CONCATENATED
ASOUTC   DS    C                   SYSOUT CLASS
APTL     EQU   *-APTAREA
         ORG   APTAREA
APT      DS    XL(APTL)
CSUFFIX  DS    CL(L'ASUFFIXL+L'ASUFFIX)
         SPACE 4
CATRC    DS    X
CATFLG   DS    X
         DS    0D
CATWORK  DS    XL265,0D
CATPARMS DS    4XL4
CATDSPT  DS    XL4
CATRET   DS    XL4
         DS    0D
WKALEN   EQU   *-WKAREA
         EJECT
DSPDE    DSECT
DSENT    DS    0CL28
DSNPT    DS    XL4
DSLEN    DS    Y
DSFLG    DS    2X
MBRPT    DS    XL4
MBRLEN   DS    Y
MBRFLG   DS    2X
PSDPT    DS    XL4
PSDLEN   DS    Y
PSDFLG   DS    2X
DSNEXT   DS    XL4
         DROP
         DROP
         END   &NAME
.END     MEND
