C01LIB     TITLE '          DECODE JOBLIB STATEMENT'
* JOL COPYRIGHT CCS-JOL 1987.
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-C001.
           SPACE 3
*                   J             000000            L
*                   J            0      0           L
*                   J           0        0          L
*                   J          0          0         L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*        J          J         0            0        L
*         J        J           0          0         L
*          J      J             0        0          L
*           J    J               0      0           L
*            JJJJ                 000000            LLLLLLLLLLL
           SPACE 3
*THIS WAS WRIT TEN ON JULY 21, 1987.
*
*IT SUPPORTS JOBLIB FOR DYNAMIC ALLOCATION AND UNDER TSO/TSS.
*
         COPY JOLCOM
C01DSAVE DSECT                                                    75128
         DS    18F            SAVE AREA                           75128
C01#ACCT  DS   F     LOCATION OF WORK AREA
C01DBRAC DS    CL1            SET TO '(' IF USER CODES ACCT (A,B) 75128
C01ACCTB  DSECT                                                    DASD
C01ACCTS  DS  0CL1216   ACCT WORK AREA                             DASD
#C01ACCT  DS  H                                                    DASD
C01ACCT   DS   CL150                                               DASD
#C01SUB2  DS  H                                                    DASD
C01SUB2   DS   CL150                                               DASD
#C01SUB3  DS  H                                                    DASD
C01SUB3   DS   CL150                                               DASD
#C01SUB4  DS  H                                                    DASD
C01SUB4   DS   CL150                                               DASD
#C01SUB5  DS  H                                                    DASD
C01SUB5   DS   CL150                                               DASD
#C01SUB6  DS  H                                                    DASD
C01SUB6   DS   CL150                                               DASD
#C01SUB7  DS  H                                                    DASD
C01SUB7   DS   CL150                                               DASD
#C01SUB8  DS  H                                                    DASD
C01SUB8   DS   CL150                                               DASD
#C01SUB9  DS  H
C01SUB9   DS   CL150
C01ACCTE EQU   *                                                   DASD
C01DSVEN EQU   *
         PRINT DATA                                               75128
         JOLSAVE CSECT=UJC01JOB,SIZE=C01DSVEN-C01DSAVE            75128
* THIS MODULE RECIEVES CONTROL WHEN A JOB CARD HAS BEEN FOUND IN THE
* IT MUST DECODE THE'J0L' JOB CARD INTO MORE MANAGEABLE TABLES FOR LATE
*    -R PHASES TO VET ETC
           SPACE 3
* ON ENTRY:-                                                      74256
* R2 -> JOLCOM                                                    74256
* R3 -> TKNX                                                      74256
*                                                                 74256
           USING TKNX,R3
           USING JOLCOM,R2
         USING C01DSAVE,R13
         L     R4,AJOBDETS                                        75128
         USING JOBDETS,R4                                         75128
*       GETMAIN R,LV=C01ACCTE-C01ACCTS                             DASD
        LA      R1,C01ACCTB                                       84001
        ST      R1,C01#ACCT       SAVE AREA POINTER                DASD
        USING   C01ACCTB,R1                                        DASD
         CLEAR  C01ACCTS  CLEAR JOB ACCOUNT WORK AREA              DASD
         CLEAR  #C01ACCT,#C01SUB2,#C01SUB3,#C01SUB4,#C01SUB5,          *
               #C01SUB6,#C01SUB7,#C01SUB8                          DASD
        DROP    R1                                                 DASD
         CLI   JOBNAME,C' '   JOB CARD CODED ?
         BE    C01NOVRD       NOPE, NOT YET
         MVI   OVERRIDE,C'1'  TURN ON OVER-RIDE INDICATOR
*                             FOR THE GENERAL PURPOSE STORE RTN
         JOLERR 101,'JOB DETAILS MERGED'                          75311
C01NOVRD   EQU  *
           SPACE 2
* NOW STORE THE JOBNAME
         IFNULL LABEL,C01START                                    75128
           JOLSTOR 'JOBNAME',JOBNAME,LABEL
C01START   MVC TKNCURR,=H'2'                   START PROCESSING AT 2
A          CLC TKNCURR,TKNNO                   HAVE WE FINISHED ?
           BNH FINDKEY                         NO,SO FIND A KEY WORD
*                                              OR SOME SUCH.
C01RETN0   EQU  *
RETN0     EQU   *                                                  DASD
***************************************************************    DASD
* COPY JOB ACCOUNT FIELDS FROM THE WORK AREA TO JOLS FIXED    *    DASD
* AREAS IN COMMON                                             *    DASD
***************************************************03-15-78****    DASD
         CLI    JOBSUB2,X'00'  DO WE HAVE A QUOTED ACCT='??'       DASD
         BE     RETNOW                                             DASD
         L      R15,C01#ACCT   POINT TO WORK AREA                  DASD
         USING  C01ACCTB,R15                                       DASD
         LA     R14,JOBACCT    POINT TO JOLS FIXED AREA            DASD
         LA     R7,220         LENGTH OF JOL AREA                  DASD
         LA     R8,8           # OF ACCOUNT FIELDS TO MOVE         DASD
C01ALOOP EQU    *                                                  DASD
         LH     R9,#C01ACCT    GET LENGTH OF FIELD                 DASD
         AR     R9,R15         POINT TO END OF FIELD               DASD
         MVI    2(R9),C','     END OF THISS FIELD                  DASD
         LH     R1,0(R15)                                         80290
         EX     R1,C01MVC      MOVE FIELD                         80290
         LH     R9,#C01ACCT                                        DASD
         LA     R9,1(R9)                                           DASD
         SR     R7,R9                                              DASD
         BM     RETNOW          RETURN IF WE HAVE EXCEEDED JOLS AEADASD
         AR     R14,R9          POINT TO NEXT AREA                 DASD
         LA     R15,L'#C01ACCT+L'C01ACCT(R15)  ADJUST TO NEXT AREA DASD
         BCT    R8,C01ALOOP     RETURN TO NEXT ACCT FIELD          DASD
          DROP   R15                                               DASD
*RETNOW    FREEMAIN R,LV=C01ACCTE-C01ACCTS,A=C01#ACCT             DASD
RETNOW    DS    0H                                                84100
          JOLRETN    RC=0                                          DASD
           TITLE 'EXAMINE TOKEN AND BRANCH TO PROCESSING ROUTINE'
FINDKEY    GETTKN LOCN=TKNCURR
           CLC TKNCURR,TKNNO
           BH  RETN0                           ENDED
           STH R1,TKNCURR
           CLI TKN,C','
           BE  FINDKEY
         CLI   TKN,C')'       CLOSING BRACKET TO BE IGNORED ?     75128
         BE    FINDKEY        YES                                 75128
           SPACE 3
* FIRST FIND ITEMS WHICH MAY NOT HAVE KEYWORDS
         CLEAR C01DBRAC ,      CLEAR OPEN BRACKET INDIC           75128
         MVC   #WORK(30),#TKN SAVE TOKEN                          75128
           LR  R6,R1                           KEEP POINTER TO TOKEN
           BCTR R6,0                           -1 COS GETTKN ADDED 1
           GETTKN LOCN=TKNCURR
           CLI TKN,C'.'                        PROGRAMMER NAME ?
           BNE TRYTIME                          NO,TRY SOMETHING ELSE
           GETTKN REG=R6
           B   JBPROGRA
           SPACE 3
TRYTIME    GETTKN REG=R6                       GO BACK 1 TOKEN
           CLI TKNTYPE,0                       IS IT A NUMBER ?
           BNE TRYKEYWD                         NO,NOW SCAN THE KEYWORD
*                                              TABLE
           SPACE 3
* NOW IN TKN WE HAVE A NUMBER
           MVC #WORK(50),#TKN
           GETTKN REG=R1                       GET THE NEXT TOKEN AFTER
*                                              THE NUMBER.
         CLC   =C'K',TKN      SIZE NNN K ?                        75128
           BE  ISSIZE
           CLC TKN(6),=C'BYTES '
           BE  ISSIZE
* NOW ALL WE HAVE LEFT TO CHECK IS 'TIME' SO 1ST SEE IF THIS IS A
*    COMMA AND IF SO GET THE NEXT TKN,CHECK IT TO BE A NUMBER AND IF
*    SO THE CHECK THE NEXT TKN TO BE'MINUTES' ETC.
           CLI TKN,C','
           BNE TRYTIME2
           GETTKN REG=R1
           CLI TKNTYPE,0                       NUMBER ?
           BNE C01WHAT
           GETTKN REG=R1                       GET WHAT IS HOPEFULLY
*                                              NOW THE QUALIFIIFIER
           SPACE
TRYTIME2   EQU *
         L     R15,=V(UJCTM)  GET TIME KEYWORDS, EG MINS          75128
         LM    R7,R9,0(R15)                                       75128
C01TRYT3 CLC   TKN(8),0(R7)   IS IT M,MINS,ETC?                   74256
         BE    ISTIME         YES,OUT WE GO                       74256
         BXLE  R7,R8,C01TRYT3 LOOP LOOKING FOR MORE               74256
         GETTKN (R6)          GET ORIGINAL TOKEN AGAIN            75128
           TITLE 'CALL USER EXIT TO DEAL WITH UNKNOWN TOKEN'
C01WHAT  L     R15,ACOMPEXI   LOAD USERS EXIT ROUTINES ADDRESS    75128
         L     R15,0(R15)                                         75128
         $CALL  (15),(JOBDETS,TKNX)                               75128
           LTR R15,R15                         DID USER DEAL WITH IT ?
         BNZ   C01ERR2        ERROR, USER DIDN'T FIX IT           75128
* WELL USER DID SOMETHING WITH IT, LETS SEE WHAT                  75128
         CLI   TKN,C' '       DID HE STORE INFO HIMSELF ?         75128
         BE    A              YES, BACK TO MAIN LINE              75128
         LTR   R15,R15        DID HE DO ANYTHING?                 75128
         BNZ   C01ERR2        NOPE                                75128
         L     R1,=V(UJCJBKEY)                                    75128
         LM    R7,R9,0(R1)                                        75128
         CLC   TKN(8),0(R7)                                       75128
         BE    GOTKEYWD                                           75128
         BXLE  R7,R8,*-10                                         75128
           GETTKN REG=R6
         STH   R1,TKNCURR     STORE POINTER NEXT TKN              75128
         MVC   #WORK(L'TKN+2),#TKN  SAVE TOKEN                    75128
         GETTKN (R1)          GET NEXT, AND IF '=',CONCAT IT AND  75128
*                             NEXT                                75128
         CLI   TKN,C'='       '='                                 75128
         BNE   C01ERR2                                            75128
         BAL   R14,CONCAT     CONCAT '='                          75128
         GETTKN (R1)          GET NEXT ITEM                       75128
         STH   R1,TKNCURR     RESET POINTER                       75128
         BAL   R14,CONCAT     CONCAT '='                          75128
C01ERR2  JOLERR 302,'''',#WORK,''' IGNORED:- UNRECOGNISABLE'      75128
           B   A
ISTIME     GETTKN REG=R6
           B   JBTIME
           SPACE
ISSIZE     GETTKN (R6)
           B  JBSIZE
           TITLE 'EXAMINE KEY-WORK AND PARAMETER TABLES'
TRYKEYWD   EQU *
         GETTKN (R6)          GET KEYWORD                         75128
* IN ACTUAL FACT WE SHALL LOOK FOR 'HOLD' ETC FIRST
           L   R1,=V(UJCJBPRM)                 ADDR OF TABLE
         LM    R14,R15,4(R1)  LOAD INCR AND STOP ADDRESSES        75128
         L     R1,0(R1)       LOAD START ADDR OF TABLE            75128
PARMLOOP   CLC TKN(8),0(R1)
           BE  GOTPARM
           BXLE R1,R14,PARMLOOP
           SPACE 3
* NOW LOOK FOR KEYWORDS
           L   R1,=V(UJCJBKEY)                 ADDR TABLE
         LM    R7,R9,0(R1)    LOAD TABLE BXLE CONS                75128
         CLC   TKN(8),0(R7)   KEY IN TABLE = ?                    75128
           BE  GOTKEYWD
         BXLE  R7,R8,*-10                                         75128
         B     C01WHAT                                            75128
           SPACE 3
GOTPARM    EQU *
         MVC   DBL,C01LAR15   SHIFT LA R15,0 INSTRUCTION          75128
         MVC   DBL+2(2),8(R1) SHIFT S CONS                        75128
         EX    R0,DBL         LA R15,PROCESSING ROUTINE           75128
           LTR R15,R15
           BZ  C01NIMPL        NOT YET IMPLEMENTED,MATE
           BALR R14,R15                        GO TO PROCESSING ROUTINE
* BY RIGHTS WE SHOULD NEVER COME BACK HERE BUT IN CASE THE USER HAS
*          PUT HIS OWN KEYWORD HANDLING ROUTINE IN I'LL STICK A BRANCH
*          IN
           B   A
C01NIMPL JOLERR 304,'''',#TKN,''' NOT YET IMPLEMENTED'            75128
           B A
           SPACE 3
C01ISBRA MVI   C01DBRAC,C'('  SHIFT IN BRACKET INDICATOR          75128
         STH  R1,TKNCURR                                          75128
GOTKEYWD   EQU *
         LR    R10,R7                             SAVE TABLE POSN 75128
*                                              WE FOUND THE KEY-WORD
           GETTKN LOCN=TKNCURR
         CLI   TKN,C'('       USER CODED ( ) AROUND ITEM ?        75128
         BE    C01ISBRA       YES, SAVE '(' IND FOR LATER USE     75128
           CLI TKN,C'='
           BNE GOTTOKEY
           GETTKN REG=R1
         CLI   TKN,C'('                                           75128
         BE    C01ISBRA                                           75128
GOTTOKEY   STH R1,TKNCURR
         MVC   DBL(2),C01LAR15 SHIFT AN LA R15,0 INSTRUCTION      75128
         MVC   DBL+2(2),8(R10) AND THE S(ADDR RTN)                75128
         EX    R0,DBL         LOAD RTN ADDRESS                    75128
           LTR R15,R15
         BZ    C01NIMPL                                           75128
         MVC   #WORK(L'TKN+2),#TKN SAVE TOKEN AFTER'=('           75311
           BALR R14,R15
           B   A               EMERGENCY BRANCH ONLY.
           TITLE 'PROCESS PROGRAMMER NAME'
JBNAME     EQU  *
JBSUBMIT   EQU  *
           ENTRY JBSUBMIT,JBNAME
JBPROGRA   EQU *
           ENTRY JBPROGRA
           MVC #WORK(50),#TKN
TMORENME   GETTKN LOCN=TKNCURR
           CLI TKN,C'.'                        MORE OF THE NAME ?
           BE  MORENAME
STORNAME MVC   #TKN(L'TKN+2),#WORK COPY TO TKN           JOL30052 76200
         SR    R10,R10                                   JOL30052 76200
         IC    R10,TKN        LOAD QUOTE (IF ANY)        JOL30052 76200
         BAL   R14,DROPQUOT   DROP QUOTES (IF ANY)       JOL30052 76200
         JOLSTOR 'PROGRAMMER NAME',JOBPRGMR,#TKN         JOL30052 76200
         LTR   R15,R15        DID WE STORE IT ?          JOL30052 76200
         BNZ   A              NOPE                       JOL30052 76200
         CH    R10,=XL2'007D' WAS IT A QUOTE ?           JOL30052 76200
         BE    *+8            YES ->                     JOL30052 76200
         LA    R10,C' '       NO, KEEP R10 AS A BLANK    JOL30052 76200
         STC   R10,JOBPRGMQ   STORE INDICATOR IN QUOTE INDIC  052 76200
           B   A
MORENAME BAL   R14,CONCAT     CONCAT THE '.' IN TO #WORK          75128
         GETTKN (R1)          GET ITEM AFTER '.'                  75128
         STH   R1,TKNCURR                                         75128
         BAL   R14,CONCAT                                         75128
         B     TMORENME                                           75128
           TITLE 'PROCESS ACCOUNTING FIELDS'
JBACCT     EQU *
         CLI   TKN,C''''      DID USER SAY ACCT=' '               75311
         BE    C01STRAC       YES,JUST STORE IT                   75311
         CLI   C01DBRAC,C'('  DID USER SAY ACCT (A,B) ?           75128
         BNE   C01STRAC       NOPE,JUST STORE WHATS THERE         75128
         SPACE 1                                                  75311
* HERE WE HAVE ACCT=(1,2,,5) ETC                                  75311
* THIS IS A BIT OF A BORE TO HANDLE UNFORTUNATELY.                75311
*        GETTKN TKNCURR       GET THE FIRST ACCT FIELD            75311
         BAL   R10,C01TACT   TEST TYPE (GOES TO A IF')' CODED,   75311
*                                       R15=0 = VALID ACCT        75311
*                                       7=0 IF DUMMY ACCT         75311
*                                       AND TKNCURR SET TO GET    75311
*                                       NEXT ACCT                 75311
         LTR   R15,R15                                            75311
         BNZ   C01GET2                                            75311
         BAL  R10,C01STRA1    STORE ACCT FIELD 1                  75311
         SPACE 1                                                  75311
C01GET2  GETTKN TKNCURR       GET SUBACCT2                        75311
         BAL   R10,C01TACT    TEST TOKEN TYPE (SEE ABOVE)         75311
         LTR   R15,R15        WAS DUMMY CODED ?                   75311
         BNZ   C01GET3        YES, DONT STORE SUBACCT2            75311
         BAL  R10,C01STRA2    NO,REAL SUBACCT, STORE IT           75311
         SPACE 1                                                  75311
C01GET3  GETTKN TKNCURR       GET SUBACCT3                        75311
         BAL   R10,C01TACT    TEST TYPE                           75311
         LTR   R15,R15                                            75311
         BNZ   C01GET4                                            75311
         BAL  R10,C01STRA3                                        75311
         SPACE 1                                                  75311
C01GET4  GETTKN TKNCURR                                           75311
         BAL   R10,C01TACT                                        75311
         LTR   R15,R15                                            75311
         BNZ   C01GET5                                            75311
         BAL  R10,C01STRA4                                        75311
         SPACE 1                                                  75311
C01GET5  GETTKN TKNCURR                                           75311
         BAL   R10,C01TACT                                        75311
         LTR   R15,R15                                            75311
         BNZ   C01GET6                                            75311
         BAL  R10,C01STRA5                                        75311
         SPACE 1                                                  75311
C01GET6  GETTKN TKNCURR                                           75311
         BAL   R10,C01TACT                                        75311
         LTR   R15,R15                                            75311
         BNZ   C01GET7                                            75311
         BAL  R10,C01STRA6                                        75311
         SPACE 1                                                  75311
C01GET7  GETTKN TKNCURR                                           75311
         BAL   R10,C01TACT                                        75311
         LTR   R15,R15                                            75311
         BNZ   C01GET8                                            75311
         BAL  R10,C01STRA7                                        75311
         SPACE 1                                                  75311
C01GET8  GETTKN TKNCURR                                           75311
         BAL   R10,C01TACT                                        75311
         LTR   R15,R15                                            75311
         BNZ   C01GET9                                            75311
         BAL  R10,C01STRA8                                        75311
         SPACE 1                                                  75311
C01GET9  GETTKN TKNCURR                                           75311
         BAL   R10,C01TACT
         LTR   R15,R15
         BNZ   C01GET10
         BAL  R10,C01STRA9
         SPACE 1                                                  75311
C01GET10 GETTKN TKNCURR                                           75311
* NOW WE ONLY HANDLE UP TO 9 SUBACCTS - SO ...                    75311
         STH   R1,TKNCURR                                         75311
         CLI   TKN,C')'                                           75311
         BE    A                                                   DASD
         JOLERR 305,'MAX OF 9 SUB-ACCTS ALLOWED:-''',#TKN,        75311*
               ''' IGNORED;BUT '')'' MAY ALSO BE MISSING'         75311
         B     A                                                  75311
         SPACE 3                                                  75311
C01TACT  STH   R1,TKNCURR     SAVE CURRENT POINTER                75311
         CLI   TKN,C')'       IS IT END OF ACCT ?                 75311
         BE    A                                                   DASD
         CLI   TKN,C','       IS THIS A NULL ACCT FIELD ?         75311
         BE    C01SKPAC       YES,SO SKIP IT                      75311
         MVC   #WORK(L'TKN+2),#TKN SAVE SUBACCT FIELD             75311
         GETTKN (R1)          GET NEXT TOKEN,WHICH SHOULD BE ','  75311
*                             BUT IF NOT, IGNORE IT               75311
         SR    R15,R15        GET READY TO RETURN                 75311
         CLI   TKN,C','       ','                                 75311
         BNE   0(R10)         NOPE, ACCT=(FC01XXXX 9 2)           75311
         STH   R1,TKNCURR     SKIP COMMA NEXT GETTKN              75311
         BR    R10            RETURN                              75311
         SPACE 3                                                  75311
C01SKPAC LA    R15,4          SET R1570                           75311
         BR    R10            RETURN                              75311
         SPACE 6                                                  75311
C01STRAC BAL   R10,C01STRA1   STORE ACCT 1               JOL30051 76200
         LTR  R15,R15    STORE OK?
         BNZ   A
         MVC   #JOBACCT,#WORK SAVE LENGTH                         75128
           CLI    WORK,C''''  QUOTES CODED?                       75128
          BNE     A           NO,SO USER CAN CODE SUBACCTS THEN   75128
         XC   JOBACCT(JOBELAP-JOBACCT),JOBACCT CLEAR TO ZEROS
*                                              SO NO-ONE CAN STORE
*                                              IN SUB ACCOUNTS
         MVC  JOBACCT,WORK    SHIFT ADAT BACK IN(COS WE PUT 00 THERE)
           B   A
JBSUB1   BAL   R10,C01STRA1   STORE SUBACCT1             JOL30051 76200
         LTR   R15,R15        DID WE                     JOL30051 76200
         BNZ   A              NO ->                      JOL30051 76200
         MVC   #JOBACCT,#WORK                            JOL30051 76200
         B     A                                         JOL30051 76200
JBSUB2   BAL   R10,C01STRA2
         B     A
JBSUB3   BAL   R10,C01STRA3
         B     A
JBSUB4   BAL   R10,C01STRA4
         B     A
JBSUB5   BAL   R10,C01STRA5
         B     A
JBSUB6   BAL   R10,C01STRA6
         B     A
JBSUB7   BAL   R10,C01STRA7
         B     A
JBSUB8   BAL   R10,C01STRA8
         B     A
JBSUB9   BAL   R10,C01STRA9
         B     A
         SPACE 3
         USING C01ACCTB,R7                                         DASD
C01STRA1  L     R7,C01#ACCT        POINT R7 RO WORK AREA           DASD
         JOLSTOR 'ACCOUNTING',C01ACCT,#WORK                        DASD
         LTR R15,R15                                               DASD
         BNZR R10        IF STORED OK SET UP LENGTH POINTER        DASD
         MVC  #C01ACCT,#WORK                                       DASD
         BR  R10
C01STRA2  L     R7,C01#ACCT    POINT TO ACCT WORK AREA IN SAVE     DASD
         JOLSTOR 'SUBACCT2/BOX/ROOM',C01SUB2,#WORK                 DASD
         LTR R15,R15                                               DASD
         BNZR R10        IF STORED OK SET UP LENGTH POINTER        DASD
         MVC  #C01SUB2,#WORK                                       DASD
         BR    R10                                                 DASD
C01STRA3  L     R7,C01#ACCT    POINT TO ACCT WORK AREA IN SAVE     DASD
         JOLSTOR 'SUBACCT3',C01SUB3,#WORK                          DASD
         LTR R15,R15                                               DASD
         BNZR R10        IF STORED OK SET UP LENGTH POINTER        DASD
         MVC  #C01SUB3,#WORK                                       DASD
         BR    R10                                                 DASD
C01STRA4  L     R7,C01#ACCT    POINT TO ACCT WORK AREA IN SAVE     DASD
         JOLSTOR 'SUBACCT4/MAXLINES',C01SUB4,#WORK                 DASD
         LTR R15,R15                                               DASD
         BNZR R10        IF STORED OK SET UP LENGTH POINTER        DASD
         MVC  #C01SUB4,#WORK                                       DASD
         BR    R10                                                 DASD
C01STRA5  L     R7,C01#ACCT    POINT TO ACCT WORK AREA IN SAVE     DASD
         JOLSTOR 'SUBACCT5/MAXCARDS',C01SUB5,#WORK                 DASD
         LTR R15,R15                                               DASD
         BNZR R10        IF STORED OK SET UP LENGTH POINTER        DASD
         MVC  #C01SUB5,#WORK                                       DASD
         BR    R10                                                 DASD
C01STRA6  L     R7,C01#ACCT    POINT TO ACCT WORK AREA IN SAVE     DASD
         JOLSTOR 'SUBACCT6/COPIES',C01SUB6,#WORK                   DASD
         LTR R15,R15                                               DASD
         BNZR R10        IF STORED OK SET UP LENGTH POINTER        DASD
         MVC  #C01SUB6,#WORK                                       DASD
         BR    R10                                                 DASD
C01STRA7  L     R7,C01#ACCT    POINT TO ACCT WORK AREA IN SAVE     DASD
         JOLSTOR 'SUBACCT7',C01SUB7,#WORK                          DASD
         LTR R15,R15                                               DASD
         BNZR R10        IF STORED OK SET UP LENGTH POINTER        DASD
         MVC  #C01SUB7,#WORK                                       DASD
         BR    R10                                                 DASD
C01STRA8  L     R7,C01#ACCT    POINT TO ACCT WORK AREA IN SAVE     DASD
         JOLSTOR 'SUBACCT8',C01SUB8,#WORK                          DASD
         LTR R15,R15                                               DASD
         BNZR R10        IF STORED OK SET UP LENGTH POINTER        DASD
         MVC  #C01SUB8,#WORK                                       DASD
         BR    R10                                                 DASD
C01STRA9 L     R7,C01#ACCT    POINT TO ACCT WORK AREA IN SAVE
         JOLSTOR 'SUBACCT9',C01SUB9,#WORK
         LTR R15,R15
         BNZR R10        IF STORED OK SET UP LENGTH POINTER
         MVC  #C01SUB9,#WORK
         BR    R10
         DROP  R7                                                  DASD
         TITLE 'PROCESS TIME PARAMETER(S)'
         ENTRY JBTIME
JBTIME     MVC #WORK(15),#TKN                  SAVE FIRST TIME
           GETTKN LOCN=TKNCURR
*                                                        JOL30077 76200
           CLI TKN,C','                        ARE THE 2 TIMES ?
           BE  TIME2
* THERE IS ONLY ONE TIME PARAMETER.
           TNUM #WORK
           LTR R15,R15
         BNZ   TIMERR                                             75128
           JOLSTOR 'TIME',JOBELAP,#WORK
           B   TIMEQUAL
TIME2    GETTKN REG=R1
         STH   R1,TKNCURR
         TNUM  #TKN
         LR    R5,R1          SAVE BINARY NUMBER                  75128
         LTR   R15,R15        DID IT CONVERT OK ?                 75128
         BNZ   TIMERR         NO                                  75128
*                                                                 75128
         TNUM  #WORK
         LTR   R15,R15
         BNZ   TIMERR                                             75128
         CH    R1,=H'1440'    NO CPU TIMING ?                     75128
         BE    WORK1440
         CH    R5,=H'1440'    NO CPU TIMING ?                     75128
         BE    TKN1440
* NOW TAKE THE LARGEST TIME AND STORED IT AS THE ELASPED TIME
         CR    R5,R1                                              75128
         BH    TKNELAP                         TKN CONTAINS ELAPSED TME
TKN1440  DS    0H
         JOLSTOR 'ELAPSED TIME',JOBELAP,#WORK
         JOLSTOR 'CPU TIME',JOBCPU,#TKN
           B   TIMEQUAL
WORK1440   EQU *
TKNELAP    JOLSTOR 'ELAPSED TIME',JOBELAP,#TKN
           JOLSTOR 'CPU TIME',JOBCPU,#WORK
TIMEQUAL L     R1,AJOLGEN
         USING GENDETS,R1
         BOX   'THIS AREA MAY NEED MODIFICATION FOR JES ****'     75128
         CLI   SPOOL,C'H'     HASP ?                              75128
         BE    C01SETSB       SET UP SUBACCOUNT FIELD             75128
         CLI   SPOOL,C'2'     JES2 ?                              75128
         BE    C01SETSB       YES                                 75128
         DROP  R1
         B     C01TMQ2                                            75128
C01SETSB EQU   *                                                  75128
         MVC   WORK(L'JOBELAP),JOBELAP                            80290
         MVC   #WORK,=AL2(L'JOBELAP)                              80290
         BAL   R14,DRPBWORK   DROP ENDING BLANKS FROM WORK        80290
         L      R15,C01#ACCT   POINT TO WORK AREA                  DASD
         USING  C01ACCTB,R15                                       DASD
         IFVALUE #C01SUB3,C01TMQ2  IF SOMEONE HAS VALUE,LEAVE IT  80290
         MVC   #C01SUB3(L'JOBELAP),#WORK  SHIFT TO SUB ACCT3      80290
         DROP   R15
C01TMQ2  GETTKN LOCN=TKNCURR  SEE IF MINUTES ETC                  75128
         L     R15,=V(UJCTM)  LOAD TIME QUALIFIER TABLE           75128
         LM    R7,R9,0(R15)                                       75128
         CLC   TKN(8),0(R7)                                       74256
         BE    ISTIMEQ                                            74256
         BXLE  R7,R8,*-10                                         74256
* TIME NOT QUALIFIED SO GO TO A AND LEAVE THE TIME THE WAY IT WAS.
           B   A
ISTIMEQ    MVC JOBTIMEQ,TKN
           STH R1,TKNCURR
           B   A
TIMERR     EQU   *
         JOLERR 303,'ERROR IN TIME PARAMETER'                     75128
           B A
           TITLE 'PROCESS CLASS PARAMETER'
JBCLASS    EQU *
           ENTRY JBCLASS
           JOLSTOR 'CLASS',JOBCLASS,#TKN
           B  A
         TITLE 'FIX PRIORITY'
JBPRTY   EQU   *
         JOLSTOR 'PRIORITY',JOBPRTY,#TKN,NUM
         B     A              BACK TO MAINLINE                    75128
JBNOTIME EQU   *
         MVC TKN(4),=CL4'1440'
         MVI   #TKN+1,4
         JOLSTOR              'NOTIMING',JOBCPU,#TKN
         B     A              BACK TO MAINLINE                    75128
           TITLE 'PROCESS RACF PARAMETERS'
* CODE ADDED OCT 18, 1982 TO SUPPORT RACF
          ENTRY JBRACFUS,JBRACFGR,JBRACFP1,JBRACFP2
* USER
JBRACFUS DS    0H
           JOLSTOR 'RACF USER',JOBUSER,#TKN
           B   A
* GROUP
JBRACFGR DS    0H
           JOLSTOR 'RACF GROUP',JOBGRP,#TKN
           B   A
* PASSWORD ONE
JBRACFP1 DS    0H
           JOLSTOR 'RACF JOB PASSWORD',JOBPASS1,#TKN
           B   A
* PASSWORD TWO (NEW PASSWORD)
JBRACFP2 DS    0H
           JOLSTOR 'RACF (NEW PASSWORD)',JOBPASS2,#TKN
           B   A
           TITLE 'PROCESS REGION/SIZE PARAMETER'
JBREGION   EQU *
JBSIZE     EQU *
            MVC   #WORK(L'TKN),#TKN                               75128
           ENTRY JBREGION
           ENTRY JBSIZE
         GETTKN TKNCURR       GET NEXT TOKEN.                     75128
         CLC   =C'K ',TKN     NNNN K ?                            75128
         BE    C01SIZEK       YES, K CODED                        75128
         CLC   =C'BYTES ',TKN BYTES CODED ?                       75128
         BNE   *+8                                                75128
         STH   R1,TKNCURR     RESET TOKEN POINTER                 75128
         TNUM  #WORK          CONVERT TO NUMERIC                  75128
         LTR   R15,R15        DID IT CONVERT ?                    75128
         BNZ   C01STRSZ       NOPE, LET JOLSTOR GIVE ERR MESSAGE  75128
         SR    R0,R0          PREPARE TO DIVIDE                   75128
         D     R0,=F'1024'    DIVIDE BY 1 K                       75128
         LTR   R0,R0          ANY REMAINDER ?                     75128
         BZ    *+8                                                75128
         LA    R1,1(R1)       ADD 1 TO K NUMBER                   75128
* NOTE, WE LEAVE ROUNDING UP TO 2K TO OS                          75128
         CVD   R1,DBL         CONVERT TO DECIMAL                  75128
         UNPK  WORK(5),DBL    NOW ZONED                           75128
         OI    WORK+4,C'0'    FIX LAST BYTE                       75128
         MVI   #WORK+1,5      SET LENGTH OF #WORK TO 5            75128
         SPACE 1                                                  75128
C01STRSZ JOLSTOR 'SIZE/REGION',JOBREGN,#WORK,NUM                  75128
         LTR   R15,R15                                            75128
         BNZ   A                                                  75128
         MVI   JOBREGNQ,C'K'  SET UP 'K'                          75128
         B     A                                                  75128
         SPACE 1                                                  75128
C01SIZEK STH   R1,TKNCURR
         B     C01STRSZ
         TITLE 'PROCESS MESSAGE CLASS'                            75128
JBMSGCLA   EQU *
           ENTRY JBMSGCLA
           JOLSTOR 'SYSTEM MESSAGE CLASS',JOBMSGCL,#TKN
           B   A
           TITLE 'HANDLE JOB ROLL PARAMETERS'
JBROLL     EQU *
           ENTRY JBROLL
           MVC #TKN,=H'1'                      ONLY STORING 1 CHARACTER
*                                              AND DON'T WANT LENGTH ER
           JOLSTOR 'ROLL',JOBROLL1,#TKN        -RROR TO BE THROWN UP AT
*                                              US
           GETTKN LOCN=TKNCURR
           CLI TKN,C','                        2ND 1 CODED ?
           BNE A                               NO,GET NEXT FIELD
           STH R1,TKNCURR                      RESET POINTER
           GETTKN LOCN=TKNCURR                 GET THE 2ND ROLL PARM
           STH R1,TKNCURR                      POINT TO TOKEN AFTER IT
           MVC #TKN,=H'1'                      AGAIN,DON'T WANT LENGTH
           JOLSTOR 'ROLL',JOBROLL2,#TKN        ERROR WHEN STORING
           B   A
           TITLE 'HOLD JOB'
JBHOLD     EQU  *
JBSCAN   EQU   *                                                  75128
         ENTRY JBHOLD,JBSCAN                                      75128
         JOLSTOR 'HOLD/SCAN',JOBHOLD,#TKN                         75128
           B  A
JBNOTIFY JOLSTOR 'TSO NOTIFY',JOBNOTFY,#TKN                       75128
         B     A              BACK TO MAIN LINE                   75128
JBEXTRA  BAL  R14,DROPQUOT                                        75128
         JOLSTOR 'EXTRA JOB KEYS',JOBEXTRA,#TKN                   75128
         B     A                                                  75128
         SPACE 1
JBPALLOC MVI   TKN,C'1'                                           75311
         B     C01STRAL                                           75311
JBNPALLO MVI   TKN,C'0'                                           75311
C01STRAL MVI   #TKN+1,1                                           75311
         JOLSTOR 'ALLOCATION MESSAGE',JOBMSGL2,#TKN              75311
         B     A                                                  75311
         SPACE 3                                                  75311
JBPJCL   MVI   TKN,C'1'                                           75311
         B     C01STAL2                                           75311
JBNPJCL  MVI   TKN,C'0'                                           75311
C01STAL2 MVI   #TKN+1,1                                           75311
         JOLSTOR 'JCL-PRINT',JOBMSGL1,#TKN                        76200
         B     A                                                  75311
         SPACE 3                                                  75311
         SPACE 1                                                  75128
JBPERFO  JOLSTOR 'PERFORM GROUP',JOBPERFO,#TKN,255                75128
         B     A                                                  75128
         SPACE 1                                                  75128
JBREAL   EQU   *                                                  75128
JBVIRT   EQU   *                                                  75128
         MVI   #TKN+1,4       SET L' TO 4 (VIRTUAL MAY BE CODED)  75311
         JOLSTOR 'VIRT/REAL',JOBCORE,#TKN                         75128
         B     A                                                  75128
**** DUMMY JOLSTORS ******
JBDUM1   JOLSTOR '        ',JOBEXTRA,#TKN
         B     A
JBDUM2   JOLSTOR '       ',JOBEXTRA,#TKN                          75311
         B     A
JBDUM3   JOLSTOR '       ',JOBEXTRA,#TKN                          75311
         B     A                                                  75311
          TITLE 'FIX ROUTING CODES'                               74256
JBROUTE   DS   0H                                                 74256
C01LAR15 LA    R15,0          USED TO FIX UP S CONSTANTS BELOW
C01MVC   MVC    0(*-*,R14),2(R15)   MOVE                          80290
         LTORG                                                    75128
         CNOP  0,8                                          FIX-X 76200
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
           DC   S(*),S(*),S(*),S(*)
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*)         75128
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*)
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*)
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*)
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*)
UJCTM    CSECT                                                    75128
C01TMWDS DC    A(*+12)
         DC    A(8)
         DC    A(C01TMEND-8)
         DC    CL8'M'
         DC    CL8'S'
         DC    CL8'MINS'
         DC    CL8'SECS'
         DC    CL8'MIN'
         DC    CL8'SEC'
         DC    CL8'MINUTES'
         DC    CL8'SECONDS'
         DC    CL8'SECOND'
         DC    CL8'MINUTE'
C01TMEND EQU *
UJCJBPRM CSECT                                                    75128
         DC    A(*+12,10,C01PEND-10)  BXLE INCREMENTS             75128
         DC     CL8'HOLD        ',S(JBHOLD)                       75128
*        DC     CL8'NOIO        ',S(JBNOIO)   NO LABELS: JBNOIO,  7SOCO
*        DC     CL8'NOOPT       ',S(JBNOOPT)             JBNOPT   7SOCO
*        DC     CL8'PRODUCTION  ',S(JBPROD)              JBPROD   7SOCO
*        DC     CL8'PROD        ',S(JBPROD)              JBPROD   7SOCO
*        DC     CL8'TEST        ',S(JBTEST)              JBTEST.  7SOCO
         DC     CL8'SCAN        ',S(JBSCAN)                       75128
         DC     CL8'NOTIMEING   ',S(JBNOTIME)                     75128
         DC     CL8'NOTIMING   ',S(JBNOTIME)                     75128
         DC     CL8'NOTIME      ',S(JBNOTIME)                     75128
         DC     CL8'VIRT        ',S(JBVIRT)                       75128
         DC     CL8'VIRTUAL     ',S(JBVIRT)                       75128
         DC     CL8'REAL        ',S(JBREAL)                       75128
         DC     CL8'REALCORE    ',S(JBREAL)                       75128
         DC     CL8'PALLOC    ',S(JBPALLOC)                       75128
         DC     CL8'PALL      ',S(JBPALLOC)                       75128
         DC     CL8'NPALLOC   ',S(JBNPALLO)                       75128
         DC     CL8'NPALL     ',S(JBNPALLO)                       75128
         DC     CL8'PJ        ',S(JBPJCL)
         DC     CL8'PJCL      ',S(JBPJCL)
         DC     CL8'NPJ       ',S(JBNPJCL)
         DC     CL8'NPJCL     ',S(JBNPJCL)
         DC     CL8' ZAP      ',S(0)                              75128
         DC     CL8' ZAP      ',S(0)                              75128
         DC     CL8' ZAP      ',S(0)                              75128
         DC     CL8' ZAP      ',S(0)                              75128
         DC     CL8' ZAP      ',S(0)                              75128
C01PEND  EQU   *                                                  75311
UJCJBKEY CSECT                                                    75128
         DC    A(*+12,10,C01KEYEN-10)                             75128
         DC     CL8'PROGRAMMER  ',S(JBNAME)                       75128
         DC     CL8'SUBMITTER   ',S(JBNAME)                       75128
         DC     CL8'NAME        ',S(JBNAME)                       75128
         DC     CL8'USER        ',S(JBRACFUS)                     82300
         DC     CL8'GROUP       ',S(JBRACFGR)                     82300
         DC     CL8'PASSWORD    ',S(JBRACFP1)                     82300
         DC     CL8'NEWPASS     ',S(JBRACFP2)                     82300
         DC     CL8'TIME        ',S(JBTIME)                       75128
         DC     CL8'CLASS       ',S(JBCLASS)                      75128
         DC     CL8'SIZE        ',S(JBSIZE)                       75128
         DC     CL8'REGION       ',S(JBSIZE)
         DC     CL8'ACCOUNT     ',S(JBACCT)                       75128
         DC     CL8'ACCT        ',S(JBACCT)                       75128
         DC    CL8'DEPT       ',S(JBACCT)                         75128
         DC    CL8'CHARGE     ',S(JBACCT)                         75128
         DC     CL8'PRTY        ',S(JBPRTY)                       75128
         DC     CL8'PRIORITY    ',S(JBPRTY)                       75128
         DC    CL8'MSGCLASS',S(JBMSGCLA)                          75311
         DC     CL8'NOTIFY         ',S(JBNOTIFY)                  75128
         DC     CL8'BOX            ',S(JBSUB2)                    75128
         DC     CL8'ROOM           ',S(JBSUB2)                    75128
         DC     CL8'MAXLINES       ',S(JBSUB4)                    75128
         DC     CL8'MAXCARDS       ',S(JBSUB5)                    75128
         DC     CL8'FORM       ',S(JBSUB6)                        80290
         DC     CL8'COPIES     ',S(JBSUB7)                        80290
         DC     CL8'LOG        ',S(JBSUB8)                        80290
         DC     CL8'LINES      ',S(JBSUB9)                        80290
         DC    CL8'JOBEXTRA   ',S(JBEXTRA)                        75128
         DC    CL8'SUBACCT1   ',S(JBSUB1)                JOL30051 76200
         DC     CL8'JOBEXTRA    ',S(JBEXTRA)                      75128
         DC     CL8'SUBACCT2  ',S(JBSUB2)                         75128
         DC     CL8'SUBACCT3  ',S(JBSUB3)
         DC     CL8'SUBACCT4  ',S(JBSUB4)
         DC     CL8'SUBACCT5  ',S(JBSUB5)
         DC     CL8'SUBACCT6  ',S(JBSUB6)
         DC     CL8'SUBACCT7  ',S(JBSUB7)
         DC     CL8'SUBACCT8  ',S(JBSUB8)
         DC     CL8'PERFORM   ',S(JBPERFO)
         DC     CL8' ZAP           ',S(0)                         75128
         DC     CL8' ZAP           ',S(0)                         75128
         DC     CL8' ZAP           ',S(0)                         75128
         DC     CL8' ZAP           ',S(0)                         75128
         DC     CL8' ZAP           ',S(0)                         75128
         DC    CL8' ZAP01     ',S(JBDUM1)                         75311
         DC    CL8' ZAP02     ',S(JBDUM2)
         DC    CL8' ZAP03     ',S(JBDUM3)
C01KEYEN EQU   *
         END
