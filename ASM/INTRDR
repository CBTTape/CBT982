//CREADER JOB  (05,70003011),HJP,CLASS=M
// EXEC ASMFC,SOUT=Q,LD=
//SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//    DD DSN=SYST.AMODGEN,DISP=SHR
//SYSGO DD DSN=SPROG.INTRDR.OBJ,DISP=(,CATLG),UNIT=DISK
INTRDR   TITLE 'JOL/VS1 READER - USING VS1 SUBSYSTEM JOB SUBMISSION'
* COPYRIGHT - CLARKE COMPUTER SOFTWARE,
*             105 COLLINS STREET,
*             MELBOURNE,
*             VICTORIA,
*             AUSTRALIA, 3000
*        TELEPHONE (03)-654-2082
*        TELEX  33833
*
* NOTE *********************************************************
*
* ALL CHANGES TO THIS PROGRAM MUST BE SENT TO CLARKE COMPUTER
*  SOFTWARE AT THE ABOVE ADDRESS.
*
* THIS IS A CONDITION FOR CCS SUPPLYING THE SOURCE CODE, AND WILL ALLOW
* CCS TO SUPPLY ALL USERS WITH THE LATEST COPY OF THE SOFTWARE.
*  IT IS, THEREFORE, IN YOUR OWN INTERESTS TO DO SO.
*
* LARGE CHANGES SHOULD BE SENT ON A MINI-TAPE.
*
******************************************************************
*
* THIS IS THE JOL VS1 INTERNAL READER.
*
* AUTHOR: CLEM CLARKE
*         MARCH 23,1979
*
* NOTE: THIS MODULE REPLACES THE OLD UJERDR1 MODULE THAT USED TO
*        ISSUE A START FOR A READER. NOW, VS1 SUBSYSTEM JOB
*        SUBMISSION FACILITES ARE USED; THIS CUTS DOWN SUBSTANTIALLY
*        ON THE OVERHEADS INVOLVED IN STARTING READERS TO READ THE
*        JOL PRODUCED JCL.
*
* IT IS PLANNED THAT A MODULE SIMILAR TO THIS WILL BE MADE AVAILABLE
*        TO INTERFACE WITH CJRE AND ANOTHER WITH PANVALET.
*
* IT SHOULD BE NOTED THAT CLARKE COMPUTER SOFTWARE RECIEVED FROM
*  TONE CORP THE SOURCE CODE FOR THEIR 'HOT' READER SOMETIME IN
*  1976. THIS READER, WHILE PERFOMING THE FUNCTIONS REQUIRED, DID
*  NOT DO SO IN THE MANNER WE THOUGHT DESIRABLE DUE TO ITS NON
*  TYPE 1 IBM CODE. IT ALTERED THE CLOSE ROUTINE FOR JES, AND ALSO
*  REQUIRED DELAYS (HALF A SECOND) WHEN IT WAS NOT READY TO ACCEPT
*  DATA. THE METHOD USED BY US USES ONLY IBM FULLY SUPPORTED CODE.
*
*
* END OF PREAMBLE:-
               EJECT
           PRINT OFF
           MACRO
&NAME      GENSAVE &AREA=,&CSECT=,&BASE=11
           GBLA &REGEQU
.* SEE IF EQUATES SET UP FOR THIS RUN YET OR NOT
           AIF (&REGEQU NE 0).NOEQU
&CSECT     CSECT
R0         EQU 0
R1         EQU 1
R2         EQU 2
R3         EQU 3
R4         EQU 4
R5         EQU 5
R6         EQU 6
R7         EQU 7
R8         EQU 8
R9         EQU 9
R10        EQU 10
R11        EQU 11
R12        EQU 12
R13        EQU 13
R14        EQU 14
R15        EQU 15
&REGEQU    SETA 1
           AGO .NOCSECT
.NOEQU     ANOP
           AIF ('&CSECT' EQ '').NOCSECT
           LTORG
&CSECT     CSECT
.NOCSECT   ANOP
&NAME      SAVE (14,12),,&CSECT..&SYSDATE..&SYSTIME               76200
           AIF (N'&BASE EQ 1).ONEBASE
           USING  &CSECT,&BASE(1),&BASE(2)
           LR  &BASE(1),15
           LA  &BASE(2),2048(15)
           LA  &BASE(2),2048(&BASE(2))
           AGO .HOUSE
.ONEBASE   ANOP
           USING  &CSECT,&BASE
           LR  &BASE,15
.HOUSE     AIF ('&AREA' EQ '').GENAREA
           MNOTE 12,'AREA NOW UNSUPPORTED'
           AGO .HOUSE2
.GENAREA   CNOP 0,4
           BAL 15,*+76         BRANCH AROUND SAVE AREA
           DC  18F'0'
.HOUSE2    ST  15,8(,13)
           ST  13,4(,15)
           LR  13,15
           MEND
           MACRO
&NAME      GENRETN &RC=0
&NAME      L   R13,4(R13)      RESET SAVE ADDRESS
           AIF ('&SYSLIST(1)' EQ '').R1412
           RETURN &SYSLIST(1),T,RC=&RC
           MEXIT
.R1412     RETURN (14,12),T,RC=&RC
           MEND
*%GOTO PLSICRPM;                                                     /*
         MACRO
         IHAICRPM &DSECT=YES
***********************************************************************
*                                                                     *
*MODULE-NAME=IHAICRPM(OS/VS1)MACRO                             @X048E68
*DESCRIPTIVE-NAME=IN-CORE-READER PARAMETER INTERFACE           @X048E68
*COPYRIGHT=NONE                                                @X048E68
*                                                                     *
*        RELEASE 5   OS/VS1     2/03/75     LEVEL=3            @X50BEB2
*                                                                     *
***********************************************************************
.*  THIS MAPPING MACRO DEFINES THE INTERFACE BETWEEN THE IN-CORE
.*  READER INTERFACE MODULE, IEFVMF, AND IT'S INVOKER.
.*
.*  NO CHANGE ACTIVITY FLAGS APPEAR ON THE STATEMENTS AS THE ENTIRE
.*  MACRO IS NEW (CREATED BY REMOVING INFORMATION REQUIRED FOR IN-CORE
.*  READER FROM IHAJPRMS).
.*  A COMMENT CARD IS INSERTED TO REFLECT THE ABOVE FOR MICROFICHE
.*  FLAGGING PURPOSES
.*A000000-999999                                                 X02932
         AIF   ('&DSECT' EQ 'NO').NODSECT
IHAICRPM DSECT
         AGO   .DSECT
.NODSECT ANOP
IHAICRPM DS    0D
.DSECT   ANOP
ICRDERP  DS    F                       PTR TO AREA TO RETURN DER
ICRJLPAP DS    F                       PTR TO AREA FOR JLPA     XL03120
ICRACCMP DS    F                       USER ACCESS METHOD PTR  @X50BEB2
ICRCSCBP DS    F                       POINTER TO CSCB
ICRJCLSP DS    F                       PTR TO IN-CORE JCL      @X50BEB2
ICRPARMP DS    F                       PTR TO RDR PARMS        @X50BEB2
ICRPARML DS    H                       LENGTH OF READER PARMS
ICRSQID  DS    H                       SOURCE QID              @X50BEB2
ICREXITP DS    F                       PTR TO IEEPSN OR DUMMY MODULE
ICRIEEPW DS    F                       IEEPSN WORK AREA (MUST BE ZERO
*                                      IF  IEEPSN NOT USED)
*                                      MAPPING OF IEEPSN WORK AREA
         ORG   ICRIEEPW
ICRSTAT1 DS    CL1                     STATUS BYTE ONE
ICRPROC  EQU   X'80'                   PROC NOT FOUND            X02932
ICRMULTI EQU   X'04'                   MULTI-STEP SYSTEM TASK INDICATOR
ICRNORM  EQU   X'00'                   NORMAL RETURN CODE
ICRSTAT2 DS    CL1                     STATUS BYTE TWO
ICRSYST  EQU   X'80'                   SYSTEM TASK ON PREVIOUS STEP
ICRNODSI EQU   X'40'                   NO DATA SET INTEGRITY
ICRXTND  EQU   X'20'                   Q EXTEND PGM STARTED     XL03120
ICRRDR   EQU   X'08'                   READER STARTED
ICRWTR   EQU   X'04'                   WRITER STARTED
ICRSPP   EQU   X'02'                    PROBLEM PROGRAM STARTED
ICRDSO   EQU   X'01'                   DSO STARTED
ICRSTAT3 DS    CL1                     STATUS BYTE THREE
ICRGTF   EQU   X'10'                   GTF STARTED
ICRRTAM  EQU   X'02'                   RTAM STARTED
ICRINIT  EQU   X'01'                   INITIATOR STARTED
ICRSTAT4 DS    CL1                     RESERVED
         ORG
ICRFLG1  DS    XL1                     FLAG BITS
ICRRSTRT EQU   X'80'                   INVOKER IS RESTART READER
ICRSJS   EQU   X'40'                   SUBSYS. JOB SUBMISSION  @X50BEB2
ICRINTR  EQU   X'20'                   INITIATOR               @X50BEB2
ICRERROR DS    XL1                     ERROR PASSBACK FOR SJS  @X50BEB2
ICROK    EQU   X'00'                   SUCCESSFUL COMPLETION   @X50BEB2
ICRQUEFL EQU   X'04'                   QUEUE FULL              @X50BEB2
ICRSPLFL EQU   X'08'                   SPOOL FULL              @X50BEB2
ICRQUEIO EQU   X'0C'                   QUEUE I/O ERROR         @X50BEB2
ICRSPLIO EQU   X'10'                   SPOOL I/O ERROR         @X50BEB2
ICRJLFUL EQU   X'14'                   JOB LIST FULL           @X50BEB2
ICRLOGIC EQU   X'18'                   LOGIC ERROR             @X50BEB2
ICRINVPR EQU   X'1C'                   INVALID RDR PARMS       @X50BEB2
ICRINPIO EQU   X'20'                   INPUT I/O ERROR         @X50BEB2
ICROPTS  DS    XL1                     IN-CORE RDR OPTIONS     @X50BEB2
ICRSMF   EQU   X'80'                   TAKE SMF EXIT IF GEND   @X50BEB2
ICRENQ   EQU   X'20'                   RDR ENQUEUES JOB        @X50BEB2
ICRRDMSG EQU   X'10'                   NORMAL RDR MESSAGES     @X50BEB2
ICRCONID DS    XL1                     CONSOLE ID (MCS)        @X50BEB2
ICRLEN   EQU   *-ICRDERP               LENGTH OF PARM LIST     @X50BEB2
         MEND  ,                                                     */
*%PLSICRPM: ;
*DECLARE
*/* **************************************************************** */
*/*                                                                  */
*/*MODULE-NAME=IHAICRPM(OS/VS1)MACRO                         @X048E68*/
*/*DESCRIPTIVE-NAME=IN-CORE-READER PARAMETER INTERFACE       @X048E68*/
*/*COPYRIGHT=NONE                                            @X048E68*/
*/*                                                                  */
*/*      RELEASE 5     OS/VS1     LEVEL=3     2/03/75        @X50BEB2*/
*/*                                                                  */
*/* **************************************************************** */
*  1 IHAICRPM BASED BOUNDARY(DWORD),   /* IN-CORE RDR PARAMETER LIST */
*    2 ICRDERP POINTER(31),            /* ADDR OF AREA TO RETURN DER */
*    2 ICRJLPAP POINTER(31),           /* AREA FOR JLPA      XL03120 */
*    2 ICRACCMP POINTER(31),           /* USER ACCESS METHOD @X50BEB2*/
*    2 ICRCSCBP POINTER(31),           /* PTR TO CSCB        @X50BEB2*/
*    2 ICRJCLSP PTR(31),               /* JCL PTR            @X50BEB2*/
*    2 ICRPARMP PTR(31),               /* RDR PARMS PTR      @X50BEB2*/
*    2 ICRPARML FIXED(15),             /* LGT OF RDR PARMS   @X50BEB2*/
*    2 ICRSQID CHAR(2),                /* SOURCE QID         @X50BEB2*/
*    2 ICREXITP POINTER(31),           /* PTR TO IEEPSN OR DUMMY
*                                        DUMMY MODULE                */
*    2 ICRIEEPW FIXED(31),             /* IEEPSN W/A (MUST BE ZERO
*                                         IF IEEPSN IS NOT USED)     */
*/*                                       MAPPING OF IEEPSN WORK AREA*/
*      3 ICRSTAT1 BIT(8) BOUNDARY(BYTE), /* STATUS BYTE ONE          */
*        4 ICRNORM BIT(8),             /* NORMAL RETURN CODE         */
*          5 ICRPROC BIT(1),           /* PROC NOT FOUND      X02932 */
*          5 * BIT(4),                 /*  RESERVED                  */
*          5 ICRMULTI BIT(1),    /* MULTI-STEP SYSTEM TASK     */
*         5 * BIT(2),                  /* RESERVED                   */
*      3 ICRSTAT2 BIT(8) BOUNDARY(BYTE), /* STATUS BYTE TWO          */
*        4 ICRSYST BIT(1),             /* SYSTEM TASK ON PREV STEP   */
*        4 ICRNODSI BIT(1),             /* NO DATA SET INTEGRITY     */
*        4 ICRXTND BIT(1),             /* Q EXTEND STARTED    XL03120*/
*        4 * BIT(1),                   /* RESERVED            XL03120*/
*        4 ICRRDR BIT(1),              /* READER STARTED             */
*        4 ICRWTR BIT(1),              /* WRITER STARTED             */
*        4 ICRSPP BIT(1),              /* PROBLEM PROGRAM STARTED    */
*        4 ICRDSO BIT(1),              /* DSO STARTED                */
*      3 ICRSTAT3 BIT(8) BOUNDARY(BYTE), /* STATUS BYTE THREE        */
*        4 * BIT(3),                   /* RESERVED                   */
*        4 ICRGTF BIT(1),              /* GTF STARTED                */
*        4 * BIT(2),                   /* RESERVED           @X60CVB2*/
*        4 ICRRTAM BIT(1),             /* RTAM STARTED               */
*        4 ICRINIT BIT(1),             /* INITIATOR STARTED          */
*      3 ICRSTAT4 BIT(8) BOUNDARY(BYTE), /* RESERVED                 */
*    2 ICRFLG1 BIT(8),                 /* INVOKER FLAG       @X50BEB2*/
*      3 ICRRSTRT BIT(1),              /* RESTART READER     @X50BEB2*/
*      3 ICRSJS BIT(1),                /* SUBSYS JOB SUB     @X50BEB2*/
*      3 ICRINTR BIT(1),               /* INITIATOR          @X50BEB2*/
*    2 ICRERROR CHAR(1),               /* SJS ERROR RETURN   @X50BEB2*/
*      % ICROK = '''00''X';            /* NO ERROR           @X50BEB2*/
*      % ICRQUEFL = '''04''X';         /* QUEUE FULL         @X50BEB2*/
*      % ICRSPLFL = '''08''X';         /* SPOOL FULL         @X50BEB2*/
*      % ICRQUEIO = '''0C''X';         /* QUEUE I/O ERROR    @X50BEB2*/
*      % ICRSPLIO = '''10''X';         /* SPOOL I/O ERROR    @X50BEB2*/
*      % ICRJLFUL = '''14''X';         /* JOB LIST FULL      @X50BEB2*/
*      % ICRLOGIC = '''18''X';         /* LOGIC ERROR        @X50BEB2*/
*      % ICRINVPR = '''1C''X';         /* INVALID RDR PARMS  @X50BEB2*/
*      % ICRINPIO = '''20''X';         /* INPUT I/O ERROR    @X50BEB2*/
*    2 ICROPTS BIT(8),                 /* SJS OPTIONS        @X50BEB2*/
*      3 ICRSMF BIT(1),                /* SMF EXIT IF GEND   @X50BEB2*/
*      3 * BIT(1),                     /* RESERVED           @X50BEB2*/
*      3 ICRENQ BIT(1),                /* ENQUEUE JOB        @X50BEB2*/
*      3 ICRRDMSG BIT(1),              /* NORMAL RDR WTOS    @X50BEB2*/
*    2 ICRCONID CHAR(1);               /* CONSOLE ID (MCS)   @X50BEB2*/
*        %GOTO DERBSL;                                               /*
         MACRO
         IEFDER &DSECT=
*  MODULE-NAME=IEFDER(OS/VS1)MACRO                             @X048E6A
*  DESCRIPTIVE-NAME=DISK ENTRY RECORD MAPPING MACRO            @X048E6A
*  COPYRIGHT=NONE                                              @X048E6A
*  LAST UPDATE 11/5/73                                         @X04AA68
         AIF   ('&DSECT' EQ 'NO').NODST
IEFDER   DSECT
.NODST   ANOP
         DS    0F
DERDSKAD DS    XL4                     TTRL OF THIS DER         XL03120
DERNXT   DS    XL4                     TTRL OF JMR              XL03120
DERIDSD  DS    XL4                     TTR OF INPUT DSD
DERODSD  DS    XL4                     TTR OF OUTPUT DSD
DERIJCM  DS    XL4                     TTR OF INPUT JCM
DEROJCM  DS    XL4                     TTR OF OUTPUT JCM
DERRCT   DS    XL4                     TTRL OF FIRST RECORD CONTROL
*                                        TABLE                  XL03120
DERJCT   DS    XL4                     TTRL OF JCT ON SYSWADS
*                                        OR SWADS               XL03120
DERINJCT DS    XL4                     TTRL OF INITIATOR JFCB   XL03120
DERSTDCB DS    A                       ADDRESS OF STDS DCB
DERSTAWR DS    XL2                     NO. OF ASSIGN/WRITES TO STDS
DERDSBCT DS    H                       NO. OF DSB CHAINS ENQUEUED
*                                        FOR JOB                XL03120
DERLOG   DS    XL1                     LOG STATUS BYTE
DERLOGID EQU   X'80'                   DER FOR LOG DATA SETS
DERLOGXO EQU   X'40'                   LOG X OPENED
DERLOGXE EQU   X'20'                   LOG X ENQUEUED
DERLOGYO EQU   X'10'                   LOG Y OPENED
DERLOGYE EQU   X'08'                   LOG Y ENQUEUED
DERCJLP2 DS    0XL5                    COMPRESSED JLPA FOR LOG  XL03120
*                                      PROCESSING               XL03120
DERFREC2 DS    XL4                     TTRL OF FIRST BLOCK      XL03120
DERNBLK2 DS    XL1                     NUMBER OF BLOCKS         XL03120
         ORG   DERCJLP2                DUAL USAGE OF FIELDS     XL03120
DERCQMP2 DS    0XL5                    COMP QMPA FOR RSTRT COPY XL03120
DERQFLT2 DS    XL2                     1ST LOGICAL TRK          XL03120
DERQTID2 DS    XL2                     QUEUE ENTRY IDENT        XL03120
DERQNOT2 DS    XL1                     NO. TRKS ASSIGNED        XL03120
         DS    CL2                     RESERVED                 XL03120
DERSTREC DS    XL4                     TOTAL NUMBER OF STDS RECORDS
DERSTRTK DS    XL2                     NUMBER OF STDS RECORDS/TRACK
DERINREV DS    XL2                     NO. OF SWADS OVERFLOW RECORDS
DERJCLDF DS    CL40                    JCL DEFAULTS
DERFLAGS DS    XL1                     DER FLAGS - BYTE 1
DERJOBRS EQU   X'80'                   JOB TO BE RESTARTED
DERWMST  EQU   X'40'                   WARM START CONDITION
DERJOBF  EQU   X'20'                   JOB FAIL BIT
DERINTRP EQU   X'10'                   INTERPRETATION COMPLETE
DERTERM  EQU   X'08'                   TERMINATION COMPLETE
DERGSTRT EQU   X'04'                   GENERALIZED START IDENT.
DERPROCS EQU   X'02'                   PROCEDURE SPOOLED INDICATOR
DERTMRT  EQU   X'01'                   TERMINATION HAS PERFORMED ROUTE
DERCJLPA DS    0XL5                    COMPRESSED JLPA          XL03120
DERFREC  DS    XL4                     TTRL OF FIRST BLOCK      XL03120
DERNBLK  DS    XL1                     NUMBER OF BLOCKS         XL03120
         DS    CL2                     RESERVED                 XL03120
DERJACT  DS    XL4                     TTRL OF JACT RECORD      XL03120
DERSCDTR DS    XL4                     TTRL OF SCD              XL03120
DERJOBID DS    0CL12                   JOB IDENTIFICATION
DERJOBNM DS    CL8                     JOB NAME-EBCDIC- 8 BYTES
DERJOBNO DS    BL4                     JOB NUMBER-BINARY- 4 BYTES
DERTTRRT DS    XL4                     TTRL OF ROUTE TABLE      XL03120
DERQID   DS    H                       QID OF SUBMITTER
DERFLAG1 DS    XL1                     DER FLAGS-BYTE 2        @XA05623
DERDSO   EQU   X'80'                   JOB SELECTED BY DSO WTR
DERSYSTK EQU   X'40'                   JOB IS A SYSTEM TASK
DERREINT EQU   X'20'                   JOB BEING REINTERPRETED  XL03940
DERSWA   EQU   X'10'                   JOB UNDER SWA OPTION     XL03051
DERSM0   EQU   X'08'                   SM STEP 0 CREATED       @XA05623
DERASG   EQU   X'04'                   ASSIGN SPACE FLAG       @XA08521
         ORG   DERDSKAD+176
         MEND    ,   */
         MACRO
&NAME    IEFQMREQ
*   LINKAGE MACRO TO SWA MANAGER - IEFQB550
&NAME    L     15,16(0,0)              LOAD CVT POINTER
         USING CVTMAP,15               START OF CVT
         L     15,CVTJESCT             LOAD JESCT POINTER
         USING JESCT,15
         L     15,JESQMGR              LOAD QUEUE MANAGER ENTRY POINT
         BALR  14,15                   BRANCH TO SWA MANAGER
         DROP  15
         MEND                                                        */
*%QMREQBSL:;
*  DCL
*         SWAMGPTR REG(15) PTR(31);
*   SWAMGPTR = CVTJESCT -> JESQMGR;
*GEN (BALR 14,15);                            /* GO TO SWA MANAGER   */
         PRINT ON
         EJECT
         GENSAVE CSECT=UJERDR
         B     GO1
         DC    C'VS1 INTERNAL READER ... VERSION 1.1, OCT  16, 1979 '
         DC    C'     '
         DC    C'COPYRIGHT CLARKE COMPUTER SOFTWARE,'
         DC    C' 105 COLLINS STREET, MELBOURNE, AUSTRALIA, 3000'
GO1      DS    0H
* ON ENTRY, R1 POINTS TO THE DCB WHICH CONTAINS THE JCL THAT IS TO
*  BE COPIED TO THE VS1 SPOOL DATA SETS.
         LR    R4,R1          SAVE DCB ADDRESS
         USING IHADCB,R4
         MVI   DCBMACR,DCBMRGET+DCBMRMVG  MOVE MODE OF QSAM
         OPEN  ((R4),(INPUT))      NON RE-ENTRANT CODE
         TM    DCBOFLGS,DCBOFOPN   TEST IF DATA SET OPEN
         BO    ERDR1OPN
         WTO       'OPEN FOR JCL DATA SET FAILED - VS1'
         ABEND 16,DUMP
         SPACE 3
ERDR1OPN EQU   *
         SPACE 3
* NOW SET UP PARAMETER FOR IEFVMF - THE VS1 INTERNAL READER
* CLEAR PARAMETER AREA
         L     R5,=A(VMFPARMS)
         USING VMFPARMS,R5
         XC    VMFPARMS(LVMFP),VMFPARMS
         LA    R6,VMFP
         USING IHAICRPM,R6
         MVI   ICRFLG1,ICRSJS      TURN ON SUBSYSTEM JOB SUBMISSION.
         MVI   ICROPTS,ICRSMF+ICRENQ+ICRRDMSG TURN ON SMF,JOB ENQ +
*                                  READER MESSAGES.
         MVC   ICRDERP,=A(DER)     ** NOT REALLY NECESSARY- SEE IEFVMF.
*                                  USED WHEN JOB NOT ENQUED. PLAYING
*                                  SAFE.
*
* NOTE: READER PARMS NOT SET UP: IEFUMF WILL USE DEFAULTS.
*
*
         ST    R4,INPUTDCB
         SPACE 3
* NOTE ***********************************************************
*  ONLY PRPCEDURES IN SYS1.PROCLIB CAN BE USED. OTHER PROCEDURE
*  LIBRARIES CANNOT BE USED UNTIL RELEASE 7.0 OF VS1.
*
*  IT WOULD, OF COURSE, BE POSSIBLE TO COPY ANY PROCEDURES THAT ARE
*  NOT IN SYS1.PROCLIB AS 'IN-STREAM' PROCEDURES, BUT THIS HAS NOT BEEN
*  DONE IN THIS VERSION.
*******************************************************************
         SPACE 3
         MVC   ICRACCMP,=A(UJERDRG) SET UP OUR PSEUDO GET ROUTINE.
         LA    R1,X'3C'            INTO SUPERVISOR MODE
         SVC   107
         L     R1,=A(VMFPARMS)     R1 -> IN CORE READER PARM. INTERFACE
* NOW GO TO IEFVMF
         L     R7,16               CVT ADDRESS
         USING CVT,R7
         L     R7,CVTJESCT         JES COMMUNICATION TABLE
         USING JESCT,R7
         L     R15,JESVMF
         BALR  R14,R15
         SPACE 2
* RETURN TO PROBLEM PROGRAM STATE.
         LA    R1,X'24'
         SVC   107
* TEST RETURN CODES IN 'ICRERROR'
         CLI   ICRERROR,0          ALL ZERO ?
         BE    UJERDR1C            CLOSE DATA SET
         TM    ICRERROR,ICRQUEFL   QUEUE FULL ?
         BZ    UJE930
         PRINT NOGEN
         WTO   'UJE93-01 INTERNAL READER IEFVMF - QUEUE IS FULL'
UJE930   TM    ICRERROR,ICRSPLFL
         BZ    UJE931
         WTO   'UJE93-02 INTERNAL READER IEFVMF - SPOOL IS FULL'
UJE931   TM    ICRERROR,ICRQUEIO
         BZ    UJE932
         WTO   'UJE93-03 INTERNAL READER IEFVMF - QUEUE I/O ERROR'
UJE932   TM    ICRERROR,ICRSPLIO
         BZ    UJE933
         WTO   'UJE93-04 INTERNAL READER IEFVMF - SPOOL I/O ERROR'
UJE933   TM    ICRERROR,ICRJLFUL
         BZ    UJE934
         WTO   'UJE93-05 INTERNAL READER IEFVMF - JOB LIST FULL'
UJE934   TM    ICRERROR,ICRLOGIC
         BZ    UJE935
         WTO   'UJE93-06 INTERNAL READER IEFVMF - LOGIC ERROR'
UJE935   TM    ICRERROR,ICRINVPR
         BZ    UJE936
         WTO   'UJE93-07 INTERNAL READER IEFVMF - INVALID RDR PARMS'
UJE936   TM    ICRERROR,ICRINPIO
         BZ    UJE937
         WTO   'UJE93-08 INTERNAL READER IEFVMF - INPUT I/O ERROR'
UJE937   CLI   ICRERROR,0
         BNE   UJE93ER2
*UJERDR1C WTO   'UJE93-09 INT READER OK'
UJERDR1C EQU   *
         B     UJE93CLS
UJE93ER2 WTO   'UJE93-10 INT RDR FAILED'
         PRINT  GEN
UJE93CLS CLOSE ((R4))
         FREEPOOL (R4)
         GENRETN
ZAP      DC    S(*,*,*,*,*,*,*,*,*,*,*,*)
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)
         EJECT
         GENSAVE CSECT=UJERDRG
* THIS ROUTINE IS CALLED BY THE IBM READER IEFVMF TO TRANSFER
*  A RECORD TO IT.
*
* R1 -> RPL
         LR    R2,R1
         USING IFGRPL,R2
         L     R5,=A(VMFPARMS)
         USING VMFPARMS,R5
         L     R4,INPUTDCB
         USING IHADCB,R4
         MVC   DCBEODAD,=A(EOFXX)
         L     R3,RPLAREA
         TM    DCBRECFM,DCBRECCA+DCBRECCM       TEST IF MACHINE CONTROL
         BZ    NOCHAR                           NO,JUST DO GET
         GET   (R4),BIGCARD
         MVC   0(80,R3),BIGCARD+1
         B     GOTREC
NOCHAR   EQU   *
         GET   (R4),(R3)
GOTREC   EQU   *
         GENRETN
EOFXX    EQU   *
* EOF ON INPUT STREAM.
         L R14,RPLDACB                     ESTABLISH ACB ADDRESSABLITY
         USING ACBID,R14
         L     R14,ACBUEL          ** THIS CODE FROM IEEVRJCL
         USING IFGEXLST,R14        **   LOAD EXIT LIST POINTER
         L     R1,4(R13)           R1 -> ADDR OF CALLERS SAVED REGS
         MVC   12(L'EXLEODP,R1),EXLEODP SET EODAD RETURN IN OUT
         GENRETN RC=(15)           SAVE AREA.
         SPACE 3
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)
         LTORG
         SPACE 3
               EJECT
SUBJCL   CSECT
         USING   *,R15
         LA      R1,JCLDCB    LOAD THE ADDRESS OF A DCB
         L       R15,=V(UJERDR)
         BR      R15
         DC    S(*,*,*,*,*,*,*,*,*,*,*,*)
         LTORG
         PRINT   NOGEN
JCLDCB   DCB     DDNAME=$$JCL,DSORG=PS,MACRF=GM
         PRINT   GEN
         EJECT
INTRDR   CSECT
         USING   *,R15
         L       R1,8(R1)     LOAD ADDRESS OF DCB TO R1
         L       R15,=V(UJERDR)
         BR      R15
        DC     S(*,*,*,*,*,*,*,*,*,*,*,*)
        DC     S(*,*,*,*,*,*,*,*,*,*,*,*,*,*,*,*)
         LTORG
VMFPARMS CSECT
VMFP     DS    CL40
         DS    0D
DER      DS    CL(176)
INPUTDCB DS    A              PARAMETER FOR GET RTN
LVMFP    EQU   *-VMFPARMS
BIGCARD  DS    CL121
         PRINT NOGEN
         DCBD  DSORG=PS
         PRINT GEN
         IEFDER
         IHAICRPM
         CVT   DSECT=YES,SYS=AOS1
         IEFJESCT
         PRINT NOGEN
         IFGRPL
         IFGEXLST
         IFGACB
         END
//
//LKED.SYSLMOD DD DSN=SYS1.LINKLIB,DISP=SHR
//LKED.SYSIN DD *
    SETCODE AC(1)
    ALIAS INTRDR
    ALIAS SUBJCL
    ENTRY UJERDR
    NAME UJERDR(R)
