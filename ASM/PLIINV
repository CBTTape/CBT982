PLIINV:PROC (PARM);
   /* THIS PL/1 PROGRAM IS DESIGNED TO BE ENTERED BY THE JOL
      COMPILER, THEN TRANSMIT DATA BACK TO JOL */
   /***** IT IS DYNAMICALLY LOADED */
         DCL 1 PARM,
               2 ADDRESS_INPUT_STRING POINTER,
               2 ADDRESS_TKNX_WORK_AREA POINTER,
               2 ADDRESS_JOLCOM POINTER,
               2 ADDRESS_UJP90OP POINTER,
               2 ADDRESS_UJP85ASN POINTER,   /* ASSIGNMENT ROUTINE */
               2 ADDRESS_UJP02DCL POINTER,   /* DECLARE ROUTINE    */
               2 ADDRESS_AMACBUF  POINTER,   /* WORK AREA,RESERVED */
               2 ADDRESS_WORK     POINTER,   /* WORK AREA FOR USE  */
               2 ADDRESS_DBL      POINTER,   /* NAME OF MODULE     */
               2 ADDRESS_SYMBOLIC POINTER,   /* SYMBOLIC NAMES     */
    /* NOW WE HAD BETTER DEFINE THE ABOVE ITEMS */
         DCL INPUTSTRING CHAR(100) VAR BASED(ADDRESS_INPUT_STRING);
         DCL 1 TKNX           BASED(ADDRESS_TKNX_WORK_AREA),
               2 NUMBER_OF_TOKENS  BIN(15),
               2 CURRENT_TOKEN_WORK_POINTER BIN(15),
               2 TOKEN_DESCRIPTORS(150),
                3 TOKEN_LENGTH    BIT(4), /* LENGTH OF TOKEN */
                3 TOKEN_TYPE      BIT(4), /* 0=NUMERIC
                                             1=SPECIAL CHARACTER
                                             2=IDENTIFIER
                                             3=LITERAL QUOTED STRING
                                            16=ERROR TOKEN
                                          */
                3 TOKEN_OFFSET BIT(8),  /* OFFSET INTO MAIN
                                           TOKEN STRING DESCRIBED
                                           BELOW */
               2 MAIN_TOKEN_STRING_LENGTH
                                          BIN(15),
               2 MAIN_TOKEN_STRING CHAR(1000),
               2 CURRENT_TOKEN_LENGTH  BIN(15),
               2 CURRENT_TOKEN     CHAR(120),
             1 RE_DEFINE_TKN  BASED(ADDRESS_TKNX_WORK_AREA),
               2 TKNNO             BIN(15)
               2 TKNCURR           BIN(15)
               2 TKNDESC(150)     BIN(31),
               2 #TKNSTRG          CHAR(1000) VAR,
               2 #TKN              CHAR(120) VAR;
         DCL   UJP97OP ENTRY (CHAR(*) VAR);
    /*
         NOW LETS CALL THE ASSEMBLER INTERFACE TO OUPUT A RECORD
         TO JOL FOR US */
         CALL  UJP970P('STOP '' PLI SUBROUTINE INVOKED');
         DCL   1 SYMBOLIC  BASED(ADDRESS_SYMBOLIC),
                2 SYMBOLIC_VARIABLE_NAME CHAR(8),
                2 SYMBOLIC_VARIABLE_CONTENTS CHAR(120) VAR;
         SYMBOLIC_VARIABLE_NAME='X';
         SYMBOLIC_VARIABLE_CONTENTS='12345';
         CALL  UJP96INT(ADDRESS_UJP02DCL,SYMBOLIC);
         CALL  UJP96INT(ADDRESS_UJP02DCL,SYMBOLIC);
         CALL  UJP96INT(ADDRESS_UJP85ASN,SYMBOLIC);
         CALL  UJP97OP('STOP ''%X''');  /* SHOULD STOP 12345 */
         END;
