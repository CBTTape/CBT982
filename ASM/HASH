//CLARKET JOB (HASH),CVC,MSGCLASS=X,NOTIFY=CLARKE
// EXEC PGM=IEUASM,PARM='LOAD,LIST,TERM,TEST,NODECK'
//SYSTERM DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUT1 DD SPACE=(CYL,1),UNIT=VIO
//SYSUT2 DD SPACE=(CYL,1),UNIT=VIO
//SYSUT3 DD SPACE=(CYL,1),UNIT=VIO
//SYSGO  DD SPACE=(CYL,1),UNIT=VIO,DSN=&OBJ,DISP=(,PASS)
//SYSLIB DD DSN=SYS1.MACLIB,DISP=SHR
//SYSIN DD *
X        CSECT
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING X,R11
         SAVE  (14,12)
         LR    R11,R15
         ST    R13,SAVEAREA+4
         LA    R13,SAVEAREA
         B     GOBABY
SAVEAREA DS    18F
GOBABY   DS    0H
* NEW TABLE LOOK UP
*              ARRAY -> NAME TABLE
*              NAMES -> DETAILS
         OPEN  (INPUT,INPUT,OUTPUT,OUTPUT)
READ     GET   INPUT,CARD
         LH    R5,CURRNUM         NUMBER OF ITEMS IN THE TABLE
         SLL   R5,1               R5 NOW EQUALS SIZE OF TABLE
         LTR   R6,R5              COPY TO R6 (HALF TABLE SIZE)
         BZ    NOTFOUND           FIRST TIME IN
SEARCH   SRL   R6,1               DIVIDE BY TWO
         LH    R15,INDEX(R6)      PICK MID POINT OF TABLE
         SLL   R15,3              MULTIPLY BY 8 (LENGTH OF ENTRIES)
         LA    R15,NAMES(R15)     POINT TO SECONDARY NAME TABLE
         CLC   0(8,R15),INNAME
         BE    GOTNAME
         BH    TOOHIGH
* COMPARISION MUST BE TOO LOW, IE POSITION IN TABLE TOO LOW
TOOLOW   AR    R5,R6              R5=NEW HIGH MID-POINT
         B     TESTEND            DIVIDE BY 2
* COMPARISION MUST BE TOO HIGH, IE POSITION IN TABLE TOO HIGH
TOOHIGH  SR    R5,R6              R5=NEW LOW MID-POINT
TESTEND  LTR   R6,R6              TEST IF SIZE=0 (END SEARCH)
         BNZ   SEARCH             LOOK AGAIN
NOTFOUND MVC   MESSAGE,=CL20'NOT THERE'
         PUT   OUTPUT,CARD
         B     READ
GOTNAME  MVC   MESSAGE,=CL20'OK       '
         PUT   OUTPUT,CARD
         B     READ
EOF      ABEND  1
CARD     DS    CL80
         ORG   CARD
INNAME   DS    CL8
LEVEL    DS    CL1
         DS    CL8
MESSAGE  DS    CL20
         ORG
TABLE    DC    A(INDEX)
CURRNUM  DC    H'5'       +++++++++++++
MAXEND   DC    A(ETABLE)
INDEX    DS    100H
         ORG   INDEX
         DC    H'3'
         DC    H'2'
         DC    H'6'
         DC    H'4'
         DC    H'5'
ETABLE   DS    0H
         ORG
NONAMES  DC    H'0'
MAXNAMES DC    H'100'
NAMES    DS    100CL8
         ORG   NAMES
         DC    CL8' '                  **** ALWAYS BLANK
         DC    CL8'B'
         DC    CL8'A'
         DC    CL8'D'
         DC    CL8'E'
         DC    CL8'C'
         ORG
         LTORG
         PRINT OFF
INPUT    DCB   DDNAME=INPUT,DSORG=PS,MACRF=GM,EODAD=EOF
OUTPUT   DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=PM
         END
// EXEC PGM=IEWL,PARM='LIST,MAP,TEST'
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD DSN=&OBJ,DISP=(OLD,DELETE)
//SYSUT1   DD SPACE=(CYL,1),UNIT=VIO
//SYSLMOD  DD DSN=CLARKE.JOL36.LOAD(HASH),DISP=SHR
// EXEC PGM=HASH,TIME=(,2)
//STEPLIB  DD DSN=CLARKE.JOL36.LOAD,DISP=SHR
//OUTPUT   DD SYSOUT=*,DCB=(BLKSIZE=80,LRECL=80,RECFM=F)
//SYSUDUMP DD SYSOUT=*
//INPUT    DD *
A
B
C
D
E
F
G
H
