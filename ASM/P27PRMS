P27PRMS  TITLE 'Analyse PANEL Parameters'
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1980.
* JOL COPYRIGHT CCS-JOL 1988      1990
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-C001.
           SPACE 3
*                   J             000000            L
*                   J            0      0           L
*                   J           0        0          L
*                   J          0          0         L
*                   J         0            0        L
*                   J         0  ¬     ¬   0        L
*                   J         0  O     O   0        L
*                   J         0            0        L
*                   J         0     V      0        L
*                   J         0            0        L
*                   J         0   <____>   0        L
*        J          J         0            0        L
*         J        J           0          0         L
*          J      J             0        0          L
*           J    J               0      0           L
*            JJJJ                 000000            LLLLLLLLLLL
         SPACE 3
         PRINT OFF                                                J50
         COPY  JOLCOM
*      COPY CPY/JOLCOMD.CPY
         PRINT ON                                                 J50
         COPY  P28PARMS                                           J50
UJP27PRM JOLSAVE CSECT=UJP27PRM
         TITLE 'UJP27PRMS: Analyse PANEL Parameters'
         L    R10,P27GBL
         USING PANELWRK,R10
         USING #PARM,R4
         USING DITEM,R5
*       L       R6,=V(P29POPWK)
@HERE1   EQU    *
*        ORG   UJP27PRM                                           J50
*P27PARMS EQU    *
*         ENTRY P27PARMS                                           J50
*         ORG   @HERE1
*        WTO   'P27PARMS Called'
         XC    TXTROWNO(LFIXED),TXTROWNO                          J51
*        CLEAR RPLYLEN         THERE IS NO REPLY....
         SR    R1,R1
         STH   R1,SPCPROW        Clear specified Prompt Row
         STH   R1,SPCPCOL        Clear specified Prompt Column
         STH   R1,SPCRROW        Clear specified Reply Row
         STH   R1,SPCRCOL        Clear specified Reply Column
*cvc     LH    R15,CURRROW
*        LA    R15,1(R15)
*        STH   R15,CURRROW
         MVC   TXTCOLNO,LHSMARG
* Reset attributes
         MVI   P27ATTR,0         TURN OFF HIGHLIGHTS              J50
         MVI   P27COLOR,4 {      SET DEFAULT COLOUR               J50
         CALL$ UJP27TXT         Get the attributes and text
         MVC   #OUTTXT(L'OUTTXT),#DEFTXT  shift to prompt area
         MVC   #OUTTXTA(L'OUTTXT),#DEFTXTA  and the copy with ATTRS
*        WTO   'OUTTXT IS:'
*        WTO   OUTTXT
*
* Test if Center or CTR was specified.
*
         TM    P27FLAGS,P27F1CTR                                  J50
         BZ    P27NOCTR                                           J50
*
* Here we must centre the code.
*
* John Summerfield set the offset for the column to the centre, and
*  let the 3270 handle it.
*
* I'll do it a little differently (the way the C and PL/I versions do
*  it, in case attributes have been set in the string.
* We should also get the whole line in the same color.
*
         MVI   OUTTXT,C' '
         MVC   OUTTXT+1(100),OUTTXT
         MVI   OUTTXTA,C' '
         MVC   OUTTXTA+1(100),OUTTXT
*
* Get the length of the string
*
         LH    R15,#OUTTXT        Get length
         LTR   R15,R15           Stop Abends if no text           J51
         BNZ   P27CTROK                                           J51
         MVC   #OUTTXT(3),=X'000140' Make at least one blank      J51
         MVC   #OUTTXTA(3),=X'000140' Make at least one blank     J51
         MVC   #DEFTXT(3),=X'000140' Make at least one blank      J51
         MVC   #DEFTXTA(3),=X'000140' Make at least one blank     J51
         LA    R15,1                                              J51
P27CTROK DS    0H                                                 J51
         SRL   R15,1              DIVIDE BY 2
         SH    R15,=H'40'                                         J50
         BNM   P27NOCTR           Hmm.  Pretend not centered, too big
         LPR   R15,R15            Make positive
MAKECTR  DS    0H
         ENTRY MAKECTR
* R15 contains the amount to offset it to CENTRE it.
*        LA    R1,OUTTXT(R15)     Points to spot to copy to.
         LA    R1,OUTTXT          Points to spot to copy to.
         AR    R1,R15
         MVC   0(100,R1),DEFTXT   Shift and centre the string
         LR    R1,R15             Get offset again (length of blanks)
         AH    R1,#DEFTXT         New string length
         STH   R1,#OUTTXT         Set in OUTTXT string.
* Now repeat for the string with attributes
*        LA    R1,OUTTXTA(R15)    Points to spot to copy to.
         LA    R1,OUTTXTA         Points to spot to copy to.
         AR    R1,R15
         MVC   0(100,R1),DEFTXTA  Shift and centre the string
         LR    R1,R15             Get offset again (length of blanks)
         AH    R1,#DEFTXTA        New string length
         STH   R1,#OUTTXTA        Set in OUTTXTA string.
* Now treat the string as normal.
P27NOCTR DS    0H
         MVC   #DEFTXT,ZERO
         MVC   #DEFTXTA,ZERO      Clear the strings P27GETXT gets.
* in c we set up videobackground and highlight.  Do it differently.
***************** cvc fix
*
         MVC   REPROWNO,CURRROW      Set default reply row
         CLC   TKNCURR,TKNNO
*        TOMASM ' ja p27pret0'
         BH    P27PRET0
         CLI   TKN,C')'
         BE    P27PRET0
*
* Here is an ordinary panel line
*
         MVC   REPROWNO,CURRROW   Set Reply Row
         LH    R1,LHSMARG         Set the reply column
         AH    R1,#OUTTXT         Plus current length of prompt string
         STH   R1,REPCOLNO        OK.
*
*Save Symbolic name
*
         MVC   SYMBOLIC,TKN
         CLC   #TKN,=H'9'    CHECK IF SYMBOLIC NAME TOO LONG
         BL    P27NAME2
         JOLERR 404,'SYMBOLIC NAME ''',#TKN,''' TOO LONG'
P27NAME2 DS    0H
*        WTO   'SYMBOLIC IS:'
*        WTO   SYMBOLIC
*
* Skip the comma, and get to the length
*
         GETTKN TKNCURR           Skip comma
         STH   R1,TKNCURR
*        WTO   'SKIP COMMA - Tkn is'
*        WTO   TKN
         CLI   TKN,C','
         BE    GETRLEN
         JOLRETN  RC=0
*
GETRLEN  DS    0H
*
         GETTKN TKNCURR           Get the length specified
         STH   R1,TKNCURR
*        WTO   'Getting Number- Tkn is'
*        WTO   TKN
         TNUM  #TKN
         LTR   R15,R15
         BZ    P27GOTL
         JOLERR 442,'Invalid Reply Length:-',#TKN
         JOLRETN RC=16
*
P27GOTL  DS    0H
*
         STH   R1,RPLYLEN         Save it
         AH    R1,REPCOLNO
         MVI   TESTR,1                                             J60
         CH    R1,=H'80'
         BNH   P27NBUMP
         LH    R1,CURRROW
         LA    R1,1(R1)
         STH   R1,CURRROW
*
P27NBUMP DS    0H
*
         GETTKN TKNCURR           See if we have a default reply
         STH   R1,TKNCURR
         CLI   TKN,C','
         BNE   PINVALID           Should be a comma
         GETTKN TKNCURR           See if we have a default reply
         STH   R1,TKNCURR
*        WTO   'Default reply - Tkn is'
*        WTO   TKN
*
         CLC   TKNCURR,TKNNO
*        TOMASM ' ja p27pret0'
         BH    P27PRET0
         CLI   TKN,C')'
         BE    P27PRET0
*
* Check if *, means use symbolic name (new for 370)
*
         CLI   TKN,C'*'
         BE    P27ASTNM
         CALL$ UJP27TXT           OK, get the text
         B     P27GOTRT           Got the reply text
*
P27ASTNM DS    0H                 Here is an asterisk
*cvc fix MVC   THISIF,1           Naughty, but stops error messages
*cvc fix GETSYM SYMBOLIC
*cvc fix MVC   THISIF,0           Reset IF INDIC to 0
         MVC   #DEFTXT,#OP        Copy default
         MVC   #DEFTXTA,#OP       Copy default
*
* Check if specific row and column specified
*
P27GOTRT DS    0H
*
         CLC   TKNCURR,TKNNO
*        TOMASM ' ja p27pret0'
         BH    P27PRET0
         CLI   TKN,C')'
         BE    P27PRET0
*
         TNUM  #TKN
         LTR   R15,R15
         BZ    P27ROW10 K
         JOLERR 206,'ROW NUMBER ''',#TKN,''' INVALID - DEFAULTS USED'
         SR    R1,R1
P27ROW10 STH   R1,SPCPROW
         GETTKN TKNCURR
         STH   R1,TKNCURR
*cvc     BAL   R9,P27GETTK
         LTR   R15,R15
         BNZ   P27ENDIT
         TNUM  #TKN
         BZ    P27COL10
       JOLERR 207,'COLUMN NUMBER ''',#TKN,''' INVALID - DEFAULTS USED'
         SR    R1,R1
P27COL10 STH   R1,SPCPCOL
         GETTKN TKNCURR
         STH   R1,TKNCURR
*        BAL   R9,P27GETTK
         LTR   R15,R15
         BNZ   P27ENDIT
         TNUM  #TKN
         BZ    P27ROW20
         JOLERR 208,'REPLY ROW NUMBER ''',#TKN,                        *
               '''INVALID - DEFAULT USED'
         SR    R1,R1
P27ROW20 STH   R1,SPCRROW
         GETTKN TKNCURR
         STH   R1,TKNCURR
*        BAL   R9,P27GETTK
         LTR   R15,R15
         BNZ   P27ENDIT
         TNUM  #TKN
         LTR   R15,R15
         BZ    P27COL20
         JOLERR 209,'REPLY COLUMN NUMBER ''',#TKN,                     *
               '''INVALID - DEFAULT USED'
*        JOLERR 209,'REPLY COLUMN NUMBER ''',#TKN
*              '''INVALID - DEFAULT USED'
         SR    R1,R1
P27COL20 DS    0H
         STH   R1,SPCRCOL
P27ENDIT DS    0H
P27PRET0 JOLRETN RC=0
PINVALID DS    0H
         JOLERR 412,'Symbol ''',#TKN,''' Invalid in Panel'
         JOLRETN RC=16
*
         LTORG
         DC   140S(*)
*
*
*
*
XX5           DSECT
*        JOLSAVE CSECT=P27DISPL
UJP27DIS JOLSAVE CSECT=UJP27DIS
         TITLE 'UJP27DIS: Prepare SCREEN LINE'
*@HERE2   EQU    *
*         ORG   UJP27DIS                                           J50
*P27DISPL EQU    *
*        ENTRY P27DISPL                                           J50
*         ORG   @HERE2
* This code fixes up the text stream for the 3270
*
         ST    R5,SAVER4R5            P27DISPL alters R5 & R7
         ST    R7,SAVER4R5+4          P27DISPL alters R5 & R7
         CLI   P27MENUB,0              Menu Bar specified?
         BZ    P27NOMEN                not here
         MVI   P27MENUB,0              Menu Bar specified?
         CALL$ UJP27BAR               Fix up Menu Bar
*        MVC   TXTATTR,P27ATTR         COPY ATTRIBUTE,
         MVC   TXTATTR,=X'F2'          Reverse = F2, Underline=   F4
         MVC   TXTCOLR,P27COLOR        COPY COLOUR
         MVI   TXTCOLR,7               Set COLOUR
         LH    R1,#MENTXT
         MEMCPY LITERAL,MENTXT,R1
         LH    R1,#WORK
         MEMCPY LITERAL,WORK,R1
         MVC   TXTROWNO,=H'1'          Set up lines for menu bar
         MVC   TXTCOLNO,=H'4'                                     J52
         MVC   REPROWNO,=H'1'          Set up lines for menu bar
         MVC   REPCOLNO,=H'2'
         MVC   RPLYLEN,=H'1'
*        LH    R1,#MENTXT              Get length of Menu Text
         STH   R1,TXTLEN               Put in Screen Area
         LH    R14,TXTLEN        LOAD THE LENGTH OF THE MESSAGE TEXT
         LA    R14,LITERAL(R14)  CALCULATE END OF CURRENT STRING.
         LA    R15,1          LOAD THE LENGTH OF THE DEFAULT REPLY
         STH   R15,RLITLEN    STORE LENGTH FOR SCREEN HANDLER
         MVI   0(R14),C'_'    MOVE DEFAULT REPLY
         MVI   TESTR,X'01'     TELL ROUTINE THAT THERE IS A REPLY
         MVC   REPATTR,P27ATTR    COPY ATTRIBUTE                  J50
         MVI   REPCOLR,5          COPY ATTRIBUTE, COLOUR          J50
         MVI   P27ATTR,0         TURN OFF HIGHLIGHTS              J50
         MVI   P27COLOR,6 {      SET DEFAULT COLOUR               J50
         AH    R1,RLITLEN
         AR    R5,R1                   Point to new SCRN area
*        LA    R5,LFIXED(R5)           Add the fixed length area
         AH    R5,=AL2(LFIXED)         Add the fixed length area
* Store symbolic SYSMENU
         SH    R7,=H'8'       BACKTRACK IN TABLE
         MVC   0(8,R7),=CL8'SYSMENU'
         LH    R1,#SCITEMS             Increment number of items
         LA    R1,1(R1)
         STH   R1,#SCITEMS
         ST    R5,SAVER4R5            P27DISPL alters R5 & R7
         ST    R7,SAVER4R5+4          P27DISPL alters R5 & R7
         MVC   CURRROW,=H'2'           Set up lines for NEXT item .
         MVC   CURRCOL,=H'1'           As above
         JOLRETN RC=0                  And return !
*
P27NOMEN DS    0H                      Not Menu Bar
*
         CLI   P27HELPL,0              Help Line specified?
         BZ    P27NOHLP                No,
*
* Here we have a HELP Line
*
         MVI   P27HELPL,0              Turn it off
         CLC   #OUTTXTA,#OUTTXT        Were attributes on HELP line?
         BNE   HLPATR                  Yes.
         MVI   P27COLOR,6              SET Hilite COLOUR
HLPATR   DS    0H
         CLC   #OUTTXT,=H'76'          Line > 76?
         BL    LT76
         MVC   #OUTTXT,=H'76'
LT76     DS    0H
         LH    R1,#OUTTXT
         SRL   R1,1                    / 2                        J60
         SH    R1,=H'40'
         LPR   R1,R1
         STH   R1,TXTCOLNO
         MVC   TXTATTR,P27ATTR         COPY ATTRIBUTE,
         MVC   TXTCOLR,P27COLOR        COPY COLOUR
         LH    R1,#OUTTXT              Get length of Menu Text
         MEMCPY LITERAL,OUTTXT,R1
         MVC   TXTROWNO,=H'24'         Set up line for help line  J60
         MVC   REPROWNO,ZERO           Set up lines for menu bar
         MVC   REPCOLNO,ZERO
         MVC   RPLYLEN,ZERO
         LH    R1,#OUTTXT              Get length of Menu Text
         STH   R1,TXTLEN               Put in Screen Area
         AR    R5,R1                   Point to new SCRN area
*        LA    R5,LFIXED(R5)           Add the fixed length area
         AH    R5,=AL2(LFIXED)         Add the fixed length area
         LH    R1,#SCITEMS             Increment number of items
         LA    R1,1(R1)
         STH   R1,#SCITEMS
         ST    R5,SAVER4R5            P27DISPL alters R5 & R7
         ST    R7,SAVER4R5+4          P27DISPL alters R5 & R7
         JOLRETN RC=0                  And return !
P27NOHLP DS    0H                      Ordinary Panel to put out here
         ENTRY P27NOHLP
*
*        JOLERR 412,'Symbol ''',#TKN,''' Invalid in Panel'
         LH    R15,#OUTTXTA            LOAD LITERAL LENGTH
         STH   R15,TXTLEN              STORE IT
*        BCTR  R15,0
*        EX    R15,*+4                 MOVE STRING TO 'LITERAL'
*        MVC   LITERAL(0),OUTTXTA      MOVE TOKEN TO 'LITERAL'
         MEMCPY LITERAL,OUTTXTA,R15  MOVE TOKEN TO 'LITERAL'
         MVC   TXTROWNO,CURRROW        Set up row number
         MVC   TXTCOLNO,CURRCOL        and column number
         MVC   TXTATTR,P27ATTR         COPY ATTRIBUTE,
         MVC   TXTCOLR,P27COLOR        COPY COLOUR
         MVI   P27ATTR,0               TURN OFF HIGHLIGHTS
         MVI   P27COLOR,6 {            SET DEFAULT COLOUR
         TM    P27FLAGS,P27F1CTR
         BZ    P27NOCOL
         B     P27NOCOL                cvc fix
         SRL   R15,1                   DIVIDE BY 2
         SH    R15,=H'40'
         LCR   R15,R15
         STH   R15,TXTCOLNO
         SPACE 2
P27NOCOL DS    0H
         CLC   RPLYLEN,ZERO                                       J51
         BE    P27NOREP                                           J51
P27NAME  SH    R7,=H'8'       BACKTRACK IN TABLE
         MVC   0(8,R7),SYMBOLIC
         SPACE
* WE HAVE A DEFAULT REPLY TO PUT OUT.
         SPACE
         LH    R14,TXTLEN        LOAD THE LENGTH OF THE MESSAGE TEXT
         LA    R14,LITERAL(R14)  CALCULATE END OF CURRENT STRING.
         LH    R15,#DEFTXTA   LOAD THE LENGTH OF THE DEFAULT REPLY
         STH   R15,RLITLEN    STORE LENGTH FOR SCREEN HANDLER
         LTR   R15,R15         SEE IF THERE IS ONE (MAY BE 0 LENGTH)
         BZ    P27CHKRO       CHECK ROW AND COLUMN NUMBERS
         BCTR  R15,0
*        EX    R15,*+4         SHIFT TO END OF MESSAGE TEXT
*        MVC   0(0,R14),DEFTXTA MOVE DEFAULT REPLY
         MVC   0(100,R14),DEFTXTA MOVE DEFAULT REPLY
         MVI   TESTR,X'01'     TELL ROUTINE THAT THERE IS A REPLY
P27CHKRO DS    0H
         MVC   REPATTR,P27ATTR    COPY ATTRIBUTE                  J50
         MVC   REPCOLR,P27COLOR   COPY ATTRIBUTE, COLOUR          J50
         MVI   P27ATTR,0         TURN OFF HIGHLIGHTS              J50
         MVI   P27COLOR,6 {      SET DEFAULT COLOUR               J50
         MVC   #WORK(L'TKN+2),#DEFTXT  Move DEFAULT REPLY TO SAVE AREA
         CALL$ UJP85ASN      SET UP DEFAULT REPLY IN THE SYMBOLIC
         SPACE 2
P27NOREP DS    0H                                                 J51
*        LH    R1,TXTLEN        NOT HERE, SO WE WILL PUT ONE IN.
         LH    R1,#OUTTXT       Get length WITHOUT attributes
         LA    R1,2(R1)
         TM    P27FLAGS,P27F1CTR                                  J50
*        BZ    P27NCOL                                            J50
         B     P27NCOL           NOTE: This code done ealier      J51
         DS    0H
*        AH    R1,RPLYLEN       NOW CHECK IF IT WILL RUN OVER A LINE.
         AH    R1,#DEFTXT       NOW CHECK IF IT WILL RUN OVER A LINE.
*                                NOTE - length without attributes J51
         SRL   R1,1              DIVIDE BY 2                      J50
         SH    R1,=H'40'                                          J50
         LCR   R1,R1                                              J50
         STH   R1,TXTCOLNO
         AH    R1,TXTLEN        NOT HERE, SO WE WILL PUT ONE IN.
         LA    R1,2(R1)
P27NCOL  DS    0H                                                 J50
         STH   R1,REPCOLNO
         AH    R1,RPLYLEN       NOW CHECK IF IT WILL RUN OVER A LINE.
         SLR   R0,R0          CLEAR FOR DIVIDE
         D     R0,#COLUMNS    FIND REMAINDER
         AH    R1,CURRROW     ADD TO CURRENT LINE NUMBER
         STH   R1,CURRROW
P27RCOLO DS    0H
*
* Test if we had specific row and columns specified.
*
         CLC   SPCPROW,ZERO      Was Prompt Row specified?
         BE    P27NOSP           No.
         MVC   CURRROW,SPCPROW   Copy to Current Row
         MVC   TXTROWNO,SPCPROW  and screen Row
         MVC   TXTCOLNO,SPCPCOL  and column number
         CLC   SPCRROW,ZERO      Was Reply Row specified?
         BE    P27NOSP           No.
         MVC   REPROWNO,SPCRROW  Copy to screen area
         MVC   REPCOLNO,SPCRCOL  and column number
P27NOSP  LH    R1,TXTLEN
         AH    R1,RLITLEN
         AR    R5,R1          BUMP UP TO POINT TO NEW SPOT IN TABLE
*        LA    R5,LFIXED(R5)  POINT OVER FIXED AREA IN PARM LIST
         AH    R5,=AL2(LFIXED) POINT OVER FIXED AREA IN PARM LIST
        XC    TXTROWNO(LFIXED),TXTROWNO next item row and col numbers
         LH    R1,#SCITEMS             Increment number of items
         LA    R1,1(R1)
         STH   R1,#SCITEMS
         B     P27NTEST
*        LA    R1,TKN+100
*        TGET  (1),1
         SPACE 2
P27NTEST LH    R15,CURRROW
         LA    R15,1(R15)
         STH   R15,CURRROW
         ST    R5,SAVER4R5            P27DISPL alters R5 & R7
         ST    R7,SAVER4R5+4          P27DISPL alters R5 & R7
         JOLRETN RC=0
         HALT
P27RETNF DS    0H
         JOLRETN RC=16
         LTORG
         DC   140S(*)
         TITLE 'CALL$ SCREEN MANAGER'
XX6           DSECT
UJP27SCR JOLSAVE CSECT=UJP27SCR
         TITLE 'UJP27SCR: Display Panel Subroutine'
* CHECK IF WE ARE UNDER TSO, OR IF THE PANELS HAVE BEEN TURNED
*  OFF BEFORE ACTUALLY DISPLAYING THEM.
*        IFNULL IFTSO,P27RETN0 OK, NOT TSO, SO RETURN
         CLC    IFTSO,ZERO     OK, NOT TSO, SO RETURN
         BZ     P27RETN0
         CLI   IFFULLSC,C'Y'  HAVE PANELS BEEN TURNED OFF ANYWAY?
         BNE   P27RETN0       YES, SO OUT WE GO
         SPACE 2
         SH    R7,=H'8'
         MVC   0(8,R7),BLANKS TO ACT AS A STOP ON RETURN FROM SCREEN
         LA    R0,4000(R4)    GET WORK AREA FOR SCREEN HANDLER FIX DJD
         LR    R1,R4          POINT TO START OF PARAMETER AREA
         CALL$ UJP28SCR
         FIX   'If MENUBAR, call UJP27TBR'
         CLC   SYSPFK,=H'0'
         BNE   NOBAR
         CLC   #MENTXT,ZERO      Was Menu BAr Specified?
         BE    NOBAR             No.
         CLC   WHEREY,=H'1'                                       PC
         BNE   NOBAR                                              PC
         CLC   WHEREX,=H'4'      cursor column < 4 ?              PC
         BL    NOBAR                                              PC
         FIX 'Check for returned key'                             PC
         CALL$ UJP27TBR
         JOLRETN RC=0
NOBAR    DS    0H
         LR    R9,R15       SAVE THE RETURN CODE
         CVD   R0,DBL
         UNPK  WORK(2),DBL
         OI    WORK+1,X'F0'  SET ZONE BITS
         MVC   #WORK,=H'2'
         MVC   SYMBOLIC,=CL8'SYSPFK'
         CALL$ UJP85ASN
*        LA    R1,WORK                                            J40B
*        TPUT  (1),2                                              J40B
*        LA    R1,WORK+2                                          J40B
*        TGET  (1),2                                              J40B
         LTR   R9,R9          CHECK RETURN CODE FROM 28
         BZ    P27REC         RECIEVE DATA BACK
P27SERR  JOLERR 410,'Error Occurred in Screen Handler'
         JOLRETN RC=16
         TITLE 'RETURN INFORMATION TO JOL SYMBOLICS'
P27REC   EQU   *
         LR    R8,R1          SAVE R1 (RETURNED STRINGS)
         LH    R9,CURRROW     LOAD THE LAST ROW OUTPUT        **CVC
         LA    R9,1(R9)       SET +1 SO CURSOR ENDS UP THERE  **CVC
         LA    R9,1           SET LINE TO 1  ****************
* the code to clear the screen is not necessary on 3270's         J60
* as the clear screen is part of the initial output to the 3270.  J60
* Clem Clarke, Jan 11, 2010.
         B     IBM            IF ON IBM, DON'T DO NEXT BIT    **CVC
         STLINENO LINE=(R9),MODE=OFF SET LINE, AND TURN OFF FS **CVC
         STFSMODE   OFF
         B     IBM            IF ON IBM, DON'T DO NEXT BIT    **CVC
         LA    R0,1           FACOM ERROR, PUT SOMETHING ON THE SCREEN
         LA    R1,=C' '       FACOM ERROR, PUT SOMETHING ON THE SCREEN
         SVC   93             TPUT
* ON RETURN, R1 POINTS TO THE RETURNED STRINGS.
IBM      LH    R9,#SCITEMS    LOAD THE NUMBER OF ITEMS RETURNED
         LA    R7,4000-8(R4)  POINT TO TABLE CONTAINING SYMBOLICS
P27STRN  MVC   SYMBOLIC,0(R7) SHIFT NAME TO JOL SYMBOLIC NAME ADDRESS
*        IFNULL SYMBOLIC,P27RETN0 REACHED END, JUST RETURN
         CLC    SYMBOLIC,BLANKS   REACHED END, JUST RETURN
         BZ     P27RETN0
         LA    R1,#WORK       LOAD RECIEVE ADDRESS
         CLC   =H'0',0(R8)    IS THERE A PARAMETER TO RETURN?
         BE    P85SKIP        NOPE, SO LEAVE VALUE THE WAY IT WAS.
         TM    0(R8),X'80'    IS HIGH ORDER BIT ON?
         BZ    P27STR         YES MEANS A FIELD WAS CANCELLED
         NI    0(R8),X'FF'-X'80' SO... STORE 0 FILED IN IT.
P27STR   LR    R0,R8          LOAD SEND ADDRESS
         BAL   R14,MOVEDATA   MOVE TO WORK
         CLI   P27CAPS,0         Caps turned off?                 J51
         BE    P27NOUPR          Yes, leave lowercase             J51
         OC    WORK(256),=CL256' ' MAKE UPPER CASE
         FIX   'PROPERLY LATER'
P27NOUPR DS    0H                                                 J51
         CLC   =C'SYSMENU ',SYMBOLIC Is this SYSMENU?             J51
         BNE   STORE99                                            J51
         OC    WORK(2),BLANKS                                     J51
         CLI   WORK,C'_'         Default                          J51
         BNE   DOMEN3                                             J51
         MVC   #WORK,ZERO                                         J51
         B     STORE99                                            J51
DOMEN3   DS    0H                                                 J51
         CALL$ UJP27TBR
         JOLRETN RC=0
STORE99  DS    0H                                                 J51
         CALL$ UJP85ASN       STORE IN SYMBOLIC FIELD
P85SKIP  SH    R7,=H'8'       BACK TO NEXT SYMBOLIC NAME
         AH    R8,0(R8)       BUMP UP TO NEXT RETURNED ITEM.
         LA    R8,2(R8)       SKIP LENGTH OF STRING (VARYING|)
         BCT   R9,P27STRN     GO BACK AND STORE NEXT SYMBOLIC
P27RETN0 DS    0H
*        FREEMAIN R,LV=9288,A=(R4)
         JOLRETN
*   else    if ((clclit(Tkn, "MENUBAR") == 0))
*   {
*       if (currrow < 3)
*       {
*           menubar = true;
*           centre = true;
*       }
*       else
*       {
*           jolerrlit("P27325", "MENUBAR must be specified first");
*           return false;
*       }
*   }
*
*   else    if ((clclit(Tkn, "HELPLINE") == 0))
*   {
*           helpline = true;
*           centre = true;
*   }
*   if ((clclit(Tkn, "LM") == 0)) {
*       p27getnum(); /* get LHS Margin  */
*
*       if (number == 0)
*       {
*           cpylit(errtext, "LM incorrect:");
*           cat   (errtext, Tkn);
*           jolerr("P27315");
*           return false;
*       }
*       lhs_margin = number;
*       if (draw_box)
*            screen_width = 78 - (lhs_margin + rhs_margin);
*       else screen_width = 80 - (lhs_margin + rhs_margin);
*       return true;
*   }
*   else
*   if ((clclit(Tkn, "RM") == 0))
*   {
*       p27getnum(); /* get LHS Margin  */
*
*       if (number == 0) {
*           cpylit(errtext, "RM incorrect:");
*           cat   (errtext, Tkn);
*           jolerr("P27316");
*           return false;
*       }
*       rhs_margin = number;
*       if (draw_box)
*       screen_width = 78 - (lhs_margin + rhs_margin);
*       else screen_width = 80 - (lhs_margin + rhs_margin);
*       return true;
*   }
*
         EJECT
P27GETTK GETTKN TKNCURR
         STH   R1,TKNCURR     UP IT BY 1
         CLI   TKN,C','       COMMA ?
         BE    P27GETTK       YES, SKIP IT
         SR    R15,R15
         CLI   TKN,C'('
         BNE   P27GT010                                           J40B
         NI    P27FLAGS,255-P27F1CTR                              J40B
         MVI   P27ATTR,0         TURN OFF HIGHLIGHTS              J50
         MVI   P27COLOR,4        SET DEFAULT COLOUR               J50
         B     P274                                               J40B
P27GT010 DS    0H                                                 J40B
*        BE    P274           RETURN 4     NEW SUB PARAMETER
         CLI   TKN,C')'
         BE    P278           RETURN 8     END OF SUB PARAMETER
         CLC   =C'CTR ',TKN                                       J40B
         BE    P27CTR                                             J40B
         CLC   =C'CENTRE ',TKN                                    J40B
         BE    P27CTR                                             J40B
         CLC   =C'CENTER ',TKN                                    J40B
         BNE   P27GT020                                           J40B
P27CTR   DS    0H                                                 J50
         OI    P27FLAGS,P27F1CTR CENTRE THE LINE                  J40B
         B     P27GETTK                                           J40B
P27GT020 DS    0H                                                 J40B
         CH    R1,TKNNO
         BH    P2712          RETURN 12    END OF STATEMANT
*        MVC   #DEFTXTA(L'DEFTXTA),#TKN
*        MVC   #DEFTXT(L'DEFTXT),TKN
         MVC   #DEFTXTA,ZERO
         MVC   #DEFTXT,ZERO
         CALL$ UJP27TXT       get text, fixes colors etc
         MVC   #TKN(L'TKN),#DEFTXTA       shift fixed string back
         SR    R15,R15
         BR    R9
*cvc cvc
         L     R1,=A(UJCOLOUR)                                    J40B
         LM    R14,R15,4(R1)                                      J40B
         L     R6,0(,R1)                                          J40B
P27GT030 DS    0H                                                 J40B
         CLC   0(12,R6),TKN                                       J40B
         BNL   P27GT040                                           J40B
         BXLE  R6,R14,P27GT030                                    J40B
P27GT040 DS    0H                                                 J40B
         BNE   P27GT050                                           J40B
XXXX     CLI   12(R6),X'FF'      RESET ATTRIBUTE?                 J50
         BNE   P27NORES          NO                               J50
         MVI   P27ATTR,0         SET NO HIGHLIGHTING              J50
P27NORES DS    0H                                                 J40B
         TM    12(R6),X'F8'      TEST ATTR BITS                   J50
         BNZ   P27ATTRX                                           J50
COLOUR   MVC   P27COLOR,12(R6)   COPY NEW COLOUR                  J40B
         NI    P27COLOR,X'07'                                     J50
XXXX1    B     P27GETTK                                           J40B
P27ATTRX DS    0H                                                 J40B
         OC    P27ATTR,12(R6)    MASK NEW ATTRIBUTE               J40B
XXXX2    B     P27GETTK                                           J40B
P27GT050 DS    0H                                                 J40B
         DROPQUSR #TKN                 Drop Quote                 J50
*        BAL   R14,DROPQUOT   DROP QUOTES IF THERE ARE ANY
         SLR   R15,R15                                            J40B
         BR    R9
P2712    LA    R15,4(R15)
P278     LA    R15,4(R15)
P274     LA    R15,4(R15)
         BR    R9
         DS    0D                                                 J40B
         LTORG
*        DC    20S(*)
UJCOLOUR CSECT                                                    J40B
COLOURTB DC    A(CTSTA,13,CTEND)                                  J40B
CTSTA    DC    CL12'BLACK     ',X'00'                             J40B
         DC    CL12'BLINK     ',X'80'                             J40B
         DC    CL12'BLINKING  ',X'80'                             J40B
         DC    CL12'BLUE      ',X'01'                             J40B
         DC    CL12'BOLD      ',X'06'                             J40B
         DC    CL12'BRIGHT    ',X'06'                             J40B
         DC    CL12'BROWN     ',X'02'                             J40B
         DC    CL12'CYAN      ',X'03'                             J40B
         DC    CL12'FLASH     ',X'80'                             J40B
         DC    CL12'FLASHING  ',X'80'                             J40B
         DC    CL12'GREEN     ',X'04'                             J40B
         DC    CL12'HI        ',X'06'                             J40B
         DC    CL12'INVERSE   ',X'40'                             J40B
         DC    CL12'INVISIBLE ',X'00'                             J40B
         DC    CL12'MAGENTA   ',X'05'                             J40B
         DC    CL12'NORMAL    ',X'01'                             J40B
         DC    CL12'OVERLINE  ',X'20'                             J40B
         DC    CL12'OVERSCORE ',X'20'                             J40B
         DC    CL12'RED       ',X'06'                             J40B
         DC    CL12'RESET     ',X'FF'                             J40B
         DC    CL12'UNDERLINE ',X'10'                             J40B
         DC    CL12'UNDERSCORE',X'10'                             J40B
         DC    CL12'REVERSE   ',X'40'                             J40B
         DC    CL12'VERTLINE  ',X'08'                             J40B
         DC    CL12'WHITE     ',X'07'                             J40B
         DC    CL12'YELLOW    ',X'02'                             J40B
CTEND    DC    12X'FF',X'00'                                      J40B
         DC   140S(*)
*        END
*
