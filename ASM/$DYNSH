$JOLSH40 TITLE 'JOL TRANSIENT SCHEDULER AND INSTRUCTION HANDLER'
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1971,1972,1973,1974,1975,1976
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1980,1981,1982.
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-E001.
         SPACE 3
*                   J             000000            L
*                   J            0      0           L
*                   J           0        0          L
*                   J          0          0         L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*        J          J         0            0        L
*         J        J           0          0         L
*          J      J             0        0          L
*           J    J               0      0           L
*            JJJJ                 000000            LLLLLLLLLLL
           SPACE 3
* LAST SOURCE UPDATE MAR 1982 BY J SUMMERFIELD
*                                   OF KURRAWANG COMPUTER PROGRAMMING
*   CHANGES:-
*     1. OSIV/X8 SUPPORT
* LAST SOURCE UPDATE 26/8/1981   BY CVC.
*   CHANGES:-
*     1. FIX 800 BPI TAPE PROBLEM
*     2. ALLOW JOL TO USE PROGRAMS IN LPALIB
* FOLLOWING FIXES CODED, SEPT 7,1976
*
*CHG26028      PROVIDE SUPPORT FOR 'IF ERROR'
*CHG30002      AS ABOVE
*CHG30062      HIGHLIGHT ERROR MESSAGES ETC MORE
*JOL30112      PROVIDE SUPPORT FOR DELETE GDGALL
*JOL30114      ALLOW UP TO 5 LEVELS OF MACROS
*JOL30115      CLOSE FILES BEFORE ABENDING
*JOL30116      FIX DELETE TEMPORARY DATA-SETS
* ALSO UPDATE CAMLIST,SCRATCH ETC MACROS FOR VS RETURN CODES
********************************************************************
*
*            JOL EXECUTE 'INITIATOR/SCHEDULER'
*
*
*
*
*
*
* NOTE: MANY MACRO NAMES ARE THE SAME AS THOSE USED IN THE JOL
*     COMPILER,BUT THEIR GENERATED CODE DIFFERS VERY SLIGHTLY
*     FROM THE OTHER MODULES,EVEN THOUGH THE FUNCTION IS THE SAME
********************************************************************
           SPACE 1
***********************************************************************
*
*
* DUE TO THE FAILURE OF IBM JOBQ MANAGEMENT ROUTINES (EITHER TO MY
*    UNDERSTANGING OR IBM'S DOCUMENTATION) SOME 'EMERGENCY' TYPE
*    CODE ALTERATION IS GOING ON TO GET JOL TO FUNCTION UNDER
*    VS1. NOTE THAT MVS USES THE STANDARD IBM CODE.
*
* CODE MARCH 7,1976: ALL MARKED '*****' IN COLS 67-71
*    SEE ALSO  'UJEJOB' CSECT FOR CHANGES
*
***********************************************************************
           SPACE 3
           MACRO
           EYEBALL &A
          DC   0D'0',4CL8'&A'
           MEND
           SPACE 6
           MACRO
&NAME      JOLERR &STMT=STMT
.* THIS MACRO WILL PUT INTO A LOCATION A STRING OF CHARACTERS
.* THE STRING MAY BE IN A BUFFER OR JOL MAY ITSELF CONTROL
.*   THE WHERE-ABOUTS OF THE ERROR MESSAGE.
.*
.* SYSLIST(1) IS TAKEN TO BE THE ERROR SEVERITY AND ALSO THE
.*   ERROR NUMBER.
           LCLA &LITPOSN,&LITLEN
           LCLC &CSECT,&ERRNO
           LCLC &JOLERR,&CHAR1
           LCLA &LENGTH,&THIS,&NOVAR,&POSN,&L,&K,&STMTLEN
&STMTLEN   SETA 4
&CSECT     SETC '&SYSECT'(3,3)
&ERRNO     SETC '&SYSLIST(1)'(2,K'&SYSLIST(1)-1)
&CHAR1     SETC '&SYSLIST(1)'(1,1)
         AIF   ('&STMT' EQ 'STMT').ORDSTMT
           MVC S23STMT,&STMT MOVE NON-STANDARD STATEMENT NUMBER IN
.ORDSTMT   ANOP
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*
&NAME      BAL 14,UJS23EP&CHAR1 LINK TO APPROPRIATE ERROR POINT
&JOLERR    SETC '&CSECT-&ERRNO'
ER&CSECT&ERRNO MVC 0(8,1),=CL8'&JOLERR' ERROR CODE IN CROSS-REF LIST
E&SYSNDX   EQU   ER&CSECT&ERRNO
&THIS      SETA  2
.LUP4      ANOP
         AIF   (&THIS GT N'&SYSLIST).END
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '#').VAR2
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '''').LIT2
.* HERE IT SHOULD BE A CHAR VARIABLE
&L         SETA L'&SYSLIST(&THIS)
           MVC 0(&L,1),&SYSLIST(&THIS)         FIXED CHAR STRING
         AGO   .ADD3
.LIT2      ANOP
.* NOW LOOK FOR DOUBLE QUOTES IN STRING TO CALCULATE THE CORRECT
.*   LENGTH
&LITPOSN   SETA 2                              START AFTER 1ST QOTE
&LITLEN    SETA K'&SYSLIST(&THIS)
&LITLEN    SETA &LITLEN-2
.TQUOTE2 AIF   ('&SYSLIST(&THIS)'(&LITPOSN,2) NE '''''').NOTDBL2
&LITPOSN   SETA &LITPOSN+1
&LITLEN    SETA &LITLEN-1
.NOTDBL2   ANOP
&LITPOSN   SETA &LITPOSN+1
         AIF   (&LITPOSN LT K'&SYSLIST(&THIS)).TQUOTE2
&K         SETA &LITLEN
           MVC 0(&K,1),=C&SYSLIST(&THIS)       MOVE LITERAL STRING
&POSN      SETA  &POSN+&K
         AGO   .ADD3
.VAR2      ANOP
           LA 15,&SYSLIST(&THIS)           LOAD ADDRESS VARYING STRING
.ADD3      ANOP
&THIS      SETA &THIS+1
         AGO   .LUP4
.END       DC  H'0'                            END LIST
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*
           MEND
           SPACE 3
           MACRO
&NAME      JOLRETN &RC=0
&NAME      L   R13,4(R13)      RESET SAVE ADDRESS
         AIF   ('&SYSLIST(1)' EQ '').R1412
           RETURN &SYSLIST(1),T,RC=&RC
           MEXIT
.R1412     RETURN (14,12),T,RC=&RC
           MEND
           SPACE 3
           MACRO
&NAME    JOLSAVE &AREA=,&CSECT=,&BASE=R11
         GBLA &REGEQU
.* SEE IF EQUATES SET UP FOR THIS RUN YET OR NOT
         AIF   (&REGEQU NE 0).NOEQU
&CSECT   CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU  15
&REGEQU  SETA 1
         AGO   .NOCSECT
.NOEQU   ANOP
         AIF   ('&CSECT' EQ '').NOCSECT
         LTORG
         DS    0D
&CSECT   CSECT
.NOCSECT ANOP
&NAME    SAVE (14,12),,&CSECT.-&SYSDATE.:&SYSTIME
         AIF   (N'&BASE EQ 1).ONEBASE
         USING &CSECT,&BASE(1),&BASE(2)
         LR    &BASE(1),R15
         LA    &BASE(2),2048(R15)
         LA    &BASE(2),2048(&BASE(2))
         AGO   .HOUSE
.ONEBASE ANOP
         USING &CSECT,&BASE
         LR    &BASE,R15
.HOUSE   AIF   ('&AREA' EQ '').GENAREA
         MNOTE 12,'AREA NOW UNSUPPORTED'
         AGO   .HOUSE2
.GENAREA CNOP 0,4
         BAL   R15,*+76         BRANCH AROUND SAVE AREA
         DC    18F'-1'
.HOUSE2  ST    R15,8(,R13)
         ST    R13,4(,R15)
         LR    R13,R15
         MEND
         EJECT
* THESE NEXT TWO MACROS ARE USED FOR READING AND WRITING JOBQ.
*    IF THE SYSTEM IS VS,THE VS JOBQ ROUTINES ARE CALLED,OTHERWISE
*    A STRAIGHT READ OR WRITE OPERATION IS PERFORMED.
         MACRO
&NAME    GETJOBQ &DECB,&TTR
         GBLC  &JOLOS
         AIF   ('&JOLOS' NE 'X8').OK
         MNOTE 12,'GETJOBQ IS NOT SUPPORTED ON OSIV/X8'
         MEXIT
.OK      ANOP
&NAME    LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS
         L   R1,&TTR         LOAD ADDRESS OF AREA WITH TTR FOR POINT
         BAL R14,GETJOBQ     BRANCH AND LINK TO POINT,READ,CHECK RTN
         MEND
         SPACE
         MACRO
&NAME    PUTJOBQ &DECB,&TTR
         GBLC  &JOLOS
         AIF   ('&JOLOS' NE 'X8').OK
         MNOTE 12,'PUTJOBQ IS NOT SUPPORTED ON OSIV/X8'
         MEXIT
.OK      ANOP
&NAME    LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS
         AIF   ('&TTR' EQ '').NOTTR
         L   R1,&TTR         LOAD R1 WITH TTR REQUIRED
         AGO   .BAL
.NOTTR     SR  R1,R1           NO TTR,CLEAR REGISTER 1
.BAL       BAL R14,PUTJOBQ     BRANCH AND LINK TO POINT,WRITE CHECK RTN
           MEND
           MACRO
&NAME      CLEAR
.* THIS MACRO WILL CLEAR (SET TO ' ' OR 0) A NUMBER OF LOCATIONS
.* IF THE AREAS BEING CLEARED ARE CHARACTER,THE MACRO WILL MOVE
.* THE FIELD 'BLANKS' TO THE AREA.
.* IF THE AREA IS A HALF WORD,FULL WORD THEN RO WILL BE SET TO
.*   0 AND STORED
.* IF A DOUBLE WORK IF FOUND,OR A BIT FIELD,THEN AN XC TO ITSELF
.*   WILL BE GENERATED.
           LCLA &THISP,&ORIGL,&OFFSET,&L
           LCLC &IND,&INST,&LABEL
&LABEL     SETC '&NAME'
&THISP     SETA 1              START AT FIRST PARAMETER
&IND       SETC ' '            SET INDICATOR TO ' '
.LUP     AIF   (&THISP LE N'&SYSLIST).CLEAR
           MEXIT
.CLEAR     ANOP
         AIF   (T'&SYSLIST(&THISP) EQ 'C').CHAR
         AIF   (T'&SYSLIST(&THISP) EQ 'B').BIT
         AIF   (T'&SYSLIST(&THISP) EQ 'D').DBL
         AIF   ('&IND' NE ' ').ST
&LABEL     SR  0,0             CLEAR 0
&IND       SETC '1'
.ST      AIF   (T'&SYSLIST(&THISP) EQ 'H').HALF
         AIF   (T'&SYSLIST(&THISP) EQ 'F').FULL
         AGO   .DBL            DO AN XC THEN
           USING TKNX,R3
         AGO   .ADD1
.HALF      ANOP
           STH 0,&SYSLIST(&THISP)  SET &SYSLIST(&THIS) TO 0
         AGO   .ADD1
.FULL      ANOP
           ST  0,&SYSLIST(&THISP)  SET &SYSLIST(&THIS) TO 0
         AGO   .ADD1
.DBL       ANOP
.BIT       ANOP
&LABEL     XC  &SYSLIST(&THISP),&SYSLIST(&THISP) SET TO 0
         AGO   .ADD1
.CHAR      ANOP
         AIF   (L'&SYSLIST(&THISP) GT 20).LONG
         AIF   (L'&SYSLIST(&THISP) NE 1).MUVBLNK
&LABEL     MVI &SYSLIST(&THISP),C' ' MOVE 1 BLANK
         AGO   .ADD1
.MUVBLNK   ANOP
&LABEL     MVC &SYSLIST(&THISP),BLANKS SHIFT BLANKS IN
         AGO   .ADD1
.LONG      ANOP
&LABEL     MVI &SYSLIST(&THISP),C' ' SET FIRST BYTE TO ' '
.* NOW WE MUST MOVE +0 TO +1 ETC TILL ENTIRE STRING IS CLEARED
&ORIGL     SETA L'&SYSLIST(&THISP)
&L         SETA L'&SYSLIST(&THISP)-1
&OFFSET    SETA 1
.CLRLUP2 AIF   (&L LE 256).ONEMVC
           MVC &SYSLIST(&THISP)+&OFFSET.(256),&SYSLIST(&THISP)-1+&OFFSE*
               T PROPOGATE
&OFFSET    SETA &OFFSET+256
&L         SETA &L-256
         AGO   .CLRLUP2
.ONEMVC    MVC &SYSLIST(&THISP)+&OFFSET.(&ORIGL-&OFFSET),&SYSLIST(&THIS*
               P)-1+&OFFSET
.ADD1      ANOP
&THISP     SETA &THISP+1
&LABEL     SETC ' '
         AGO   .LUP
         MEND
         SPACE 2
         MACRO
&L       $TELL  &FCTADDR
         AIF   (K'&L EQ 0).NL
&L       DS    0H
.NL      ANOP
 AGO  .END
         LA    R10,WORK+4
         CONCAT '&SYSECT ABOUT TO MODIFY FCT FOR FILE '
         MVC   0(8,R10),FCTACSN
         LA    R10,8(,R10)
         CONCAT ' AT '
         IHBINNRA &FCTADDR
         ST    R1,TASKSSI
         UNPK  DBL(9),TASKSSI(5)
         TR    DBL,HEX
         MVC   0(6,R10),DBL+2
         LA    R10,6(,R10)
         LA    R0,WORK
         SR    R0,R10    MSG LEN
         LCR   R0,R0
         STH   R0,WORK
         MVI   WORK+2,X'80'   MCS FLAG
         MVI   WORK+3,X'00'
         MVC   0(2,R10),=X'00004020' DESC,ROUTCD
         LA    R1,WORK+4
         SH    R0,=H'4'
         TPUT  (1),(0),USERIDL==C'JOLAIF  '
         WTO   MF=(E,WORK)
.END     MEND
         SPACE 3
         MACRO
&L       UJE22UPD &P1,&P2
.* P1 IS ADDRESS OF DSNAME
.* P2 IS ADDRESS OF VOLUME SERIAL NUMBER(S)
         LA    R0,E22PARM     SET UP PARAMETER LIST
         ST    R0,CALLAREA
         MVC   E22DSN,&P1     COPY DSNAME
         MVC   E22VOL,&P2      AND VOLUME INFO
         LA    R1,CALLAREA    ADDRESS PARAMETER AREA
         MVI   0(R1),X'80'    THE FINAL TOUCH
         CALL  UJE22UPD       CALL MR FIXIT
         MEND
         TITLE 'JOL SCHEDULER MAIN-LINE'
         GBLA  &RSVDRC,&RETNSIZ
         GBLC  &JOLOS
         GBLC  &TYPE
         LCLB  &X8
         LCLC  &C,&C1,&C2,&C3,&C4,&C5,&C6,&DDPRT,&DDINST
&TYPE    SETC  'SCHED'
         $UJEPARM
&RETNSIZ SETA  2560          SIZE OF RETURN-CODE AREA
&X8      SETB  ('&JOLOS' EQ 'X8')
&RSVDRC  SETA  4000*(1-&X8)+50*&X8
&DDPRT   SETC  (&X8)'JOLPRINT'.(1-&X8)'$$PRNT'
&DDINST  SETC  (&X8)'JOLINST'.(1-&X8)'$$INST'
         PRINT DATA                                               75311
         AIF   (&X8).X8010 BYPASS MISLEADING REMARKS
***********************************************************************
*                                                                     *
* CODE FOR IF ERROR IS INCORPORATED IN THIS DESCRIPTION OF THE MAIN-  *
*  LINE ROUTINE                                                       *
*                                                                     *
*        CALL  UJE98INI;      /* IF ANY ERRORS (NO DD'S FOR SCHEDUER, *
*                                  ETC),                              *
*                             OR IF PROBLEM PROGRAM RETURNED A VALUE  *
*                             THAT CAUSES JOB TO BE FLUSHED,          *
*                             A NON-ZERO RETURN CODE IS GIVEN, AND    *
*                             THE JOB WILL BE FLUSHED.                *
*                        NOTE:- ABENDS DO NOT CAUSE AN ERROR HERE.    *
*                             */                                      *
*        IF R15,=0 THEN                                               *
*        DO;                                                          *
*           SET GOBACK /* TO OS */ ON;                                *
*           RETURN 4000;                                              *
*        END;                                                         *
*                                                                     *
*        CALL  UJE50RD;       /* READ A STMT FROM 'INSRUCT' FILE */   *
*        IF R15>=0 GO TO EOF; /* GO TO END OF JOB */                  *
*                                                                     *
*        SET  R4=COND(LEVEL*8 + NEST);                                *
*                                                                     *
*        IS INSTRUCT='IF' ?                                           *
*        YES, DO;                                                     *
*                                                                     *
*              SET 0(R4)='T';                                         *
* E00CLIF:     CALL IF;                                               *
*              IF TRUE        /* CHECKS FOR ABEND, AND IF 'ERROR' */  *
* NEW          THEN DO;                                               *
* NEW               CALL UJE50RD;                                     *
* NEW               IF R15>=0,                                        *
* NEW               GO TO EOF;                                        *
* NEW               IF 'IF' GO TO E00CLIF; /* TEST NEXT IF IN CHAIN*/ *
* NEW               ELSE GO TO E00EXECI;(EXECUTE INSTRUCTION) ;       *
*              END;                                                   *
* SKIP:        ELSE SKIP TILL MATCHING END ETC;                       *
*                                                                     *
*        END;                                                         *
*                                                                     *
* NEW    IF ABEND OCCURED                                             *
* NEW      AND CURRENT LEVEL,NEST                                     *
* NEW      <=  ERROR LEVEL,NEST (LEVEL,NEST ABEND OCCURED AT)         *
* NEW      THEN DO;           /* IE, SKIP INSTRUCTION BECAUSE ABEND*/ *
* NEW          CLEAR INERROR  /* CLEAR ERROR LOOP INDICATOR*/         *
* NEW          GO TO SKIP;    /* ALLOWS FOR IF ERROR, DO; */          *
* NEW      END;               /* ETC */                               *
*    /* NO ABEND */                                                   *
* EXECUTE-INSTRUCTION:        /* BRANCHED TO BY 'IF TRUE'             *
*                             ROUTINE ABOVE, THEREBY SKIPPING         *
* NEW                         THE 'IF ABEND AND LEVELS' ABOVE.        *
* NEW                                                                 *
* NEW                         HENCE, IF ERROR WILL FUNCTION */        *
*                                                                     *
*                                                                     *
*        IF A 'DO'                                                    *
*        THEN DO;                                                     *
*              NEST=NEST+1; GO TO READ;                               *
*        END;                                                         *
*                                                                     *
*        IF AN 'END'                                                  *
*        THEN  DO;                                                    *
*              NEST=NEST-1;                                           *
*              IF NEST=0                                              *
*              THEN LEVEL=LEVEL-1;                                    *
*              GO TO READ;                                            *
*        END;                                                         *
*        IS IT AN 'ELSE' ?                                            *
*        YES, DO;                                                     *
*              IS 0(R4)='T'                                           *
*              YES, ELSE MUST BE FALSE, GO TO SKIPLOOP;               *
*              NO,GO TO READ;                                         *
*        END;                                                         *
*                                                                     *
*  /* OTHER */                                                        *
*                                                                     *
*        BRANCH TO PROCESSING ROUTINE                                 *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
.X8010     ANOP
           SPACE
          EXTRN UJTNUM,UJEJOBQ   HELPS THE LINKAGE EDITOR FIND THINGS
         JOLSAVE CSECT=UJE00MN,BASE=R12
         ENTRY UJESCHED
UJESCHED EQU   UJE00MN
           L  R3,0(R1)
           USING PARMAREA,R3
           USING  TABLES,R5
           L  R5,=A(TABLES)
E00VSSTR DS    0H                                                 74365
         CALL UJE98INI         INITIALISE ROUTINES
         LTR R15,R15         INIT FAIL OR USER ABEND ?
         BZ  E00FIRST
BADRETN  DS    0H
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS
         MVI GOBACK,C'1'
         BAL   R11,UJEFILES   GO CLOSE ALL FILES
         JOLRETN RC=&RSVDRC  CANCEL JOB NOW
E00FIRST DS    0H
E00READ  DS    0H
E00MAINL DS    0H              THIS IS THE MAIN-LINE.
         CALL UJE50RD        READ NEXT STATEMENT
         LTR R15,R15         READ OK (EOF MAYBEE)
         BNZ E00EOF          EOF,RETURN AFTER SETTING END JOB
*                              INDICATORS.
         LH  R4,LEVEL        LEVEL INDICATOR
         SLL R4,3            *8 (WE ALLOW 8 NESTS PER LEVEL)
         LH R0,NEST
         AR R4,R0
         LA  R4,COND(R4)     THERE,NOW WE CAN LOOK AT 'CONDS'
           CLI LABEL,C' '
           BNE E00LABOK
           MVC LABEL(2),=C'$$'
           MVC LABEL+2(4),STMT
E00LABOK DS    0H
           CLC =C'IF ',ICOMMAND  IF?
           BNE E00TDO          NO,GO TEST FOR A DO
* OK,CALL THE IF PROCESSOR AND TEST FOR TRUE OR FALSE
           MVI 0(R4),C'T'      SET COND INITIALLY 'TRUE'
           CALL UJE04IF
           LTR R15,R15         IF 0,IT WAS A TRUE 'IF'
         BNZ   E00IFRD0       FALSE, SKIP INSTRUCTION(S) CHG26028 76200
* IF IS TRUE HERE                                        CHG26028 76200
         CALL  UJE50RD        READ NEXT INSTRUCTION      CHG26028 76200
         LTR   R15,R15        GET IT ?                   CHG26028 76200
         BNZ   E00EOF         NO, GO TO EOF ROUTINE      CHG26028 76200
         B     E00EXECI       YES, GO AND PERFORM IT     CHG26028 76200
           SPACE 3
* NOW THE 'IF' IS FALSE
E00IFRD0   MVI 0(R4),C'F'      SET COND TO 'FALSE'
E00IFRD1   CALL UJE50RD        READ THE NEXT INSTRUCTION
           LTR R15,R15
           BNZ E00EOF
           SPACE
E00SKIP  DS    0H                                        CHG26028 76200
           CLC =C'IF ',ICOMMAND  IF THEN...IF THEN SITUATION?
           BE  E00IFRD1        YES,SO SKIP THIS ONE NOW
           CLC =C'MACRO ',ICOMMAND   IS IT A MACRO HEADER ?
           BE E00IFLUP         START SKIPPING UNTIL MATCHING 'END'
           CLC =C'DO ',ICOMMAND IS IT A 'DO;
           BE E00IFLUP         START SKIPPING UNTIL MATCHING 'END'
* HERE IT IS AN ORDINARY INSTRUCTION,AND WE HAVE 'SKIPPED ' IF
*     WE GO AND READ A NEW ONE NOW
           B  E00READ
           SPACE 3
E00IFLUP DS    0H
* NOW WE HAVE FOUND A MACRO OR A DO
           LA R4,1             SET NUMBER OF OUTSTANDING ENDS TO 1
E00IFRD    DS    0H
           CALL UJE50RD        GET THE NEXT INSTRUCTION
           LTR R15,R15
           BNZ E00EOF          END OF INPUT FILE
           CLC =C'END ',ICOMMAND
           BNE E00TIFMC        GO TEST IF INNER MACRO OR DO
           SH R4,=H'1'         -1 FROM END COUNTER
           BZ  E00READ         GOOD OH,REACHED END OF FALSE LOOP
           B  E00IFRD
           SPACE 3
E00TIFMC DS    0H
           CLC =C'MACRO ',ICOMMAND
           BE  E00ADD1
           CLC =C'DO ',ICOMMAND
           BNE E00IFRD
E00ADD1    LA R4,1(R4)         UP THE NUMBER OF OUTSTANDING 'ENDS'
           B  E00IFRD          AND READ A NEW INSTRUCTION
*  END IF PROCESSING
           SPACE 3
E00TDO   DS    0H
E00TERR  CLI   ERRORIND,0     HAS AN ABEND OCCURED ?     CHG26028 76200
         BE    E00TDO2        NO, NOT YET                CHG26028 76200
* AN ABEND HAS BEEN DETECTED SOMEWHERE.                  CHG26028 76200
*******************************************************************DASD
*  IF ERROR SWITCH SETTINGS USING FIELD "INERRORL"                *DASD
*                                                                 *DASD
*  BYTES 0-3 ON = IF ERROR LOGIC IN PROCRESS                      *DASD
*           OFF = NO IF ERROR LOGIC REACHED AS YET OR             *DASD
*                 CURRENTLY RUNNING IF ERROR AT ABEND LEVEL       *DASD
*  BYTES 4-7 ON = IF ERROR LOGIC REACHED AND ABEND OCCURED        *DASD
*           OFF = NO ABEND OCCURED WITHIN IF ERROR LOGIC          *DASD
*******************************************************************DASD
         TM     INERRORL,X'0F' IF ERROR ON WITH AND ABEND ?        DASD
         BZ     E00SKIP      NOPE   LETS SKIP ANY RUNNING AFTER ABEDASD
         CLC   LEVEL(L'LEVEL+L'NEST),ERRLEVEL            CHG26028 76200
         BH    E00TDO2        OK, IF ERROR THEN DO LOOP  CHG26028 76200
         MVI   INERRORL,X'0F' TURN OFF 'IN ERROR LOOP'   CHG26028  DASD
         B     E00SKIP        SKIP INSTRUCTION(S)        CHG26028 76200
E00TDO2  DS    0H                                        CHG26028 76200
E00EXECI DS    0H                                        CHG26028 76200
         SPACE 2                                         CHG26028 76200
           CLC =C'DO ',ICOMMAND IS IT A 'DO'
           BNE E00TMAC         NO,TEST IF 'MACRO'
           LH  R1,NEST         ADD
           LA  R1,1(R1)            1 TO
           CH  R1,=H'8'                NEST
           BH  E00DOERR            IF NOT
           STH R1,NEST         T00 BIG
           B   E00READ         AND READ A NEW RECORD
E00DOERR   JOLERR 505,'TOO MANY DOS'   (THIS ABENDS,U0001)
           SPACE 3
E00TMAC    CLC =C'MACRO ',ICOMMAND
           BNE E00TEND
           LH  R1,LEVEL
           LA  R1,1(R1)
         CH    R1,=H'7'                                  JOL30114 76200
           BL  E00MACOK
           JOLERR 508,'TOO MANY LEVELS'  (ABENDS TOO)
E00MACOK   STH R1,LEVEL
           LA R1,SAVENEST(R1)
           MVC 0(1,R1),NEST+1 SAVE THE NEST SO WE CAN RESET AT MACRO
*                              END SO AS NOT TO LOSE OURSELVES
           XC  NEST,NEST
           B   SETMACRO        TRUE 'LOOP',SET UP MACRO START
           SPACE 3
E00TEND    CLC =C'END ',ICOMMAND WELL,PERHAPS IT IS AN 'END'
           BNE E00TELSE        NOPE,GO TEST IF IT IS AN'ELSE' THEN
           SPACE
           LH  R1,NEST         NOW REDUCE 'NEST'
           SH  R1,=H'1'
           BM  E00ENDMC        IF <0 IF IS A 'MACRO' END
           STH R1,NEST
           B   E00READ        *********************** MARCH 12 76
           BCTR R4,0           -1 FROM R4                         75311
           MVI 0(R4),C' '      CLEAR COND                         75311
           B   E00READ
           SPACE 3
E00ENDMC DS    0H
* NOW THE'MACRO END' REQUIRES SPECIAL ATTENTION BECAUSE WE MUST
*     STORE THE HIGHEST RETURN CODE FROM THE PROGRAMS EXECUTED
*     BY THE MACROS.
           LH R1,LEVEL
           LA R15,SAVENEST(R1)
           SH R1,=H'1'
           BNM E00MACEN
           JOLERR 506,'TOO MANY ENDS'  (ABENDS)
           SPACE 3
E00MACEN  DS    0H
           STH R1,LEVEL
           MVC NEST+1(1),0(R15)
           SPACE 3
** STORE THE HIGHEST RETURN CODE FROM THE MACRO
           LA R7,IDSTART
           LH R1,NOIDS
           MH R1,=H'18'
           LR R15,R7
           AR R7,R1
           LH R14,=H'-18'
           LR R1,R7
           USING IDOVLY,R1
           MVC DBL,IDRETN
           L R7,DBL
**** CHECK FOR A DEAD MARCO HEADER WITH A -1 RETURN CODE AND BYPASSDASD
           CLC  DBL(4),=F'-1'                                      DASD
           BNE E00LUP10
           SR R7,R7
E00LUP10   CLC IDNAME,=CL8'MACRO'
           BE  E00GMAC
           MVC DBL,IDRETN
**** CHECK FOR A DEAD MARCO HEADER WITH A -1 RETURN CODE AND BYPASSDASD
           CLC  DBL(4),=F'-1'                                      DASD
           BE   E00BXH1                                            DASD
           C R7,DBL
           BH  E00BXH1                                             DASD
*          BL  E00BXH1                                             DASD
           L   R7,DBL
E00BXH1    BXH R1,R14,E00LUP10
         JOLERR 507,'NO MACRO START'
E00GMAC  ST    R7,CALLAREA
         MVC   IDRETN,CALLAREA
         MVC   IDNAME,=CL8' '  TO GET RIGHT EFFECT FOR NESTED MACROS
         B     E00READ
         SPACE 3
E00TELSE DS    0H
* NOW THE 'ELSE' MUST BE TESTED
           CLC =C'ELSE ',ICOMMAND
           BNE E00TFALS       NOT ELSE,TEST IF FALSE 'LOOP'
           CLI 0(R4),C' ' WAS AN 'IF' JUST PRICESSED ?
           BNE E00ELSOK
           JOLERR 402,'ELSE IGNORED'
           SPACE 3
E00ELSOK DS    0H
           CLI 0(R4),C'F'      LAST FALS ?
           BNE E00TLTRU
           MVC 0(2,R4),=C'  '      TURN OFF COND CODE ALTOGETHER
           B  E00READ
E00TLTRU   B  E00IFRD1    GO JOIN 'IF' FALSE PROCESSOR
           SPACE 3
E00TFALS DS    0H
E00ORD   DS    0H
           CLEAR ISRUN
           L   R1,=A(JE00TBL1) LOAD ADDRESS OF TABLE WITH THE
*                              INSTRUCTION NAMES AND THE ADDRESSES
*                              OF THE ROUTINES TO HANDLE THEM.
           LM  R7,R9,0(R1)     LOAD BXLE ADDRESS CONSTANTS FOR
*                              THE ABOVE TABLE.
E00FINDR DS    0H
           CLC ICOMMAND,0(R7)   COMPARE INSTRUCTION TO THAT IN TABLE
           BE  E00GOTRT        GOT THE ROUTINE TO HANDLE IT.
           BXLE  R7,R8,E00FINDR
E00ERROR DS    0H
           JOLERR 503,'INVALID INSTRUCTION ''',ICOMMAND,               *
               ''' IN SCHED'
           SPACE 3
E00GOTRT   L   R15,8(R7)       LOAD ROUTINE ADDRESS
           BALR R14,R15
           CLI ISRUN,C'1'      WAS A RUN JUST PROCESSED ?
           BE  E00FNDRN        YES,TWAS A RUN
           LTR R15,R15         DID PROCESSOR HANDLE NORMAL INSTRUCTION
*                              (EG TYPE,DELETE ETC??)
           BZ  E00MAINL        YES,SO TRY NEXT INSTRUCTION.
* HERE AN INSTRUCTION WAS EXECUTED,BUT RETURNED A NON-ZERO
*     CODE.
           CH  R15,=H'4'       RETURN TO OS AFTER SKIPPING TO
*                              THE RIGHT JOB STEP ?
           BE E00STPON         STEP ON TO A NEW OS STEP.
           CH R15,=H'&RSVDRC'  STOP ETC EXECUTED ?
           BE BADRETN
E00CLRC    MVC 0(2,R4),=CL2' '
           B  E00MAINL
           B  *+4
           B  *+4
           B  *+4
           B  *+4
*     SET THE INDICATOR WHICH TELLS OUR CALLER (THE MONITOR)
*     TO  RETURN TO OS SO IT CAN SKIP STEPS (OR CANCEL THE JOB)
           SPACE 3
           SPACE 3
RETURN   DS    0H                                                 74365
E00EOF   DS    0H
         AIF   (&X8).X8020
* WE HAVE READ AN EOF ON THE INSTRUCTION FILE,SO WE WANT TO
*     GET TO THE END OF THE JOB
*                                                        CHG26028 76200
* IF AN ABEND HAS OCCURED, WE SHOULD SET A RETURN OF     CHG26028 76200
*  4000 SO THAT THE JOB WILL TERMINATE AS QUICKLY AS     CHG26028 76200
*  POSSIBLE (LETS NOT WASTE TOO MUCH TIME...)            CHG26028 76200
         SPACE 1                                         CHG26028 76200
         CLI   ERRORIND,0     DID AN ERROR OCCUR ?       CHG26028 76200
         BE    E00EOF2        NO, SO TERMINATE NICELY    CHG26028 76200
*                             (IF SLOWLY...)             CHG26028 76200
         MVC   LASTCC+2(2),=H'&RSVDRC' FLUSH THE JOB     CHG26028 76200
         B     RETNNOW        CLOSE FILES, RETURN.       CHG26028 76200
E00EOF2     LA R11,1            SET EOF INDICATOR ON
           MVC GOTOLAB,=XL8'FFFFFFFFFFFFFFFF' SET IMPOSSABLY HIGH LABEL
*                              NUMBER IN GOTOLAB,SO WE WILL MARK ALL
*                              THE STEPS UNTIL EOJ WITH COND=ONLY
           B  E00FINDS         FIND THE NEXT OS STEP
           SPACE 3
E00STPON DS    0H
         SR  R11,R11         SET EOF INDICATOR OFF
* NOW WE HAVE TO ORGANISE FOR OS TO STEP ON TO ANOTHER
*     STEP FOR US.
* WE CAN BE NASTY (SET NEXT STEP SCT TO ANOTHER STEP WAY DOWN
*     THE QUEUE)
* OR WE CAN BE KIND,IE SET UP A FEW COND=ONLY'S AND LET OS
*     GET THERE ITSELF.
* WE COULD BE LUCKY,I SUPPOSE,AND THE NEXT STEP WE WANT
* COULD REALLY BE THE NEXT OS STEP.
          SPACE
* NOW IF IT WAS A RUN STATEMENT WE WERE TOLD TO STEP ON FOR,
* THE STEP WE WANT MUST BE THERE.
*     IF IT WAS A CATLG ETC THAT WE HAD TO STEP ON FOR,
* WE COULD FIND THAT THE ACTUAL STEP WON'T BE THERE BECAUSE
* THE GENERATOR MAY HAVE CONBINED SEVERAL STEPS TO CUT DOWN
* THE NUMBER OF OS STEPS PRODUCED. IN THAT CASE,WE MERELY
* FIND A STEP THAT IS LESS THAN OR EQUAL,AND BRANCH TO IT
          SPACE
E00FINDS DS    0H
*          MVI SCTANSCT+3,0     ***** SET Z=0 (OK,ONLY READ)
           CLC SCTANSCT,=A(0)   LAST STEP IN JOB ? (THE NEXT ONE*****)
            BNE E00PNT         NOT EOF ON JOBQ
           LTR R11,R11         EOF ON MY Q?
           BNZ E00TEST         YES,SO MERELY RETURN TO OS
E00NOSTP   JOLERR 504,'CANNOT FIND STEP ',GOTOLAB
           SPACE 3
E00PNT   DS    0H
           GETJOBQ SCTDECB,SCTANSCT READ THE SCT,AFTER POINTING
* NOW IS IT THE STEP WE WANT ?
           CLC SCTSNAME,GOTOLAB
           BE  E00GOTRS        GOT RIGHT STEP
* NOW AS MENTIONED EARLIER,WE MAY HAVE GONE TOO FAR IT WE WERE
*     DOING A SCRATCH FOR US.
* HOWEVER (3.0) WE MAY HAVE A REAL STEP NAME ON THE GENERATED JCL 75311
*  AND IF SO WE MUST CONTINUE EXAMINING THE JOBQ                  75311
           CLC =C'$$',GOTOLAB  REAL STEP | JOL STEP NAME ?        75311
           BNE E00REWR         REAL, SO TOSS THIS SCT BACK WITH   75311
*                              COND=ONLY, AND CONTINUE            75311
           SPACE 1                                                75311
           BH E00GOTRS         WELL IT WILL DO ANYWAY EVEN IF IT
*                              IS A LITTLE HIGH
           SPACE
* NOW THE SCT IN CORE MUST BE REWRITTEN WITH COND=ONLY UNLESS
*     IT IS THE CURRENT OS STEP
E00REWR  DS    0H                                                 75311
           CLC JCTSSTR(3),SCT  CURRENT OS STEP ?
           BE E00TEST          YES,SO DON'T UPDATE AND OUTPUT
* SET COND=ONLY SO NEXT STEP (THIS SCT IN CORE) WON'T RUN
           MVC SCTABCND(3),=X'010000'
           PUTJOBQ SCTDECB     OUTPUT SCT AGAIN
           B E00FINDS
         AGO   .NX8020
.X8020   ANOP
E00STPON DS    0H
.NX8020  ANOP
         SPACE 3
E00GOTRS DS    0H
E00TEST  DS    0H
         POINT RETN,TTR$RETN
           WRITE E00RET2,SF,RETN,READAREA,'S'
           CHECK E00RET2
           SPACE 3
RETNNOW  DS    0H
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS
         MVI GOBACK,C'1'
         AIF   (&X8).X8040
           CLI IBMRTN,C' '     ARE WE USING AN IBM ROUTINE TO     *****
*                              ACCESS JOBQ ?                      *****
           BE  E00NDEL1        NO, SO DON'T TRY TO DELETE IT      *****
           DELETE EPLOC=IBMRTN YES, DELETE WHICH EVER ROUTINE     *****
E00NDEL1 DS    0H                                                 *****
.X8040   ANOP
*          CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                    *DASD
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD
         AIF   (&X8).X80CVC
           L   R15,LASTCC                                         82200
           AGO .X80RET
.X80CVC    L   R15,MAXCC                                          82200
.X80RET    JOLRETN RC=(15)                                        75311
E00FNDRN DS    0H
           LTR R15,R15         DO WE HAVE TO SKIP TO A NEW
           BNZ E00STPON        OS STEP FOR THIS RUN ?
           SPACE 3
SETMACRO DS    0H
* RUN IT NOW
           LH  R1,NOIDS
           LA  R1,1(R1)
           CH  R1,MAXIDS
           BL  MUVNAME
           LH  R1,MAXIDS
           CVD R1,DBL
           UNPK DDPRIM,DBL
           OI  DDPRIM+L'DDPRIM-1,X'F0'
*******************************************************            DASD
* NOW BEFORE ABENDING WE WILL TAKE A LOOK AT THE RETN *            DASD
* TABLE FOR A USED MACRO HEADER AND OVERLAY IT MAKING *            DASD
* ROOM FOR 1 NEW GUY                                  *            DASD
*******************************************************            DASD
         LH    R15,NOIDS      LOOK THIS MANY TIMES                 DASD
         LA    R1,18                                               DASD
         LA    R1,IDSTART(R1) START LOOKING HERE                   DASD
         USING IDOVLY,R1                                           DASD
SLIDELOP CLC   IDNAME,=CL8'MACRO' IS THIS GUY USED ?               DASD
         BNE   SLIDEUP        YEA MOVE IT UP                       DASD
         LA    R1,18(R1)      UP TO NEXT GUY                       DASD
         BCT   R15,SLIDELOP                                        DASD
* WELL GUY WHAT NOW ???????                                        DASD
           JOLERR 501,'MAX ',DDPRIM,' STEPS EXCEEDED'
SLIDEUP  MVC   0(18,R1),18(R1) SLIDE THE REST UP 1                 DASD
         LA    R1,18(R1)      INCR TO NEXT SLOT                    DASD
         BCT   R15,SLIDEUP    LETS DO EM ALL                       DASD
         LH    R1,NOIDS       NOW LOAD NO OF IDS AGAIN             DASD
MUVNAME    STH R1,NOIDS
           MH  R1,=H'18'
           LA R1,IDSTART(R1)
           USING IDOVLY,R1
           MVC IDSTMT,STMT
           OC IDSTMT,=C'0000'
           MVC IDNAME,TASKLABL
           MVC IDNEST,NEST
           MVC IDLEVEL,LEVEL
           MVC IDRETN,=F'-1'
           CLC =CL8'MACRO',ICOMMAND
           BNE NOTMACH
           MVC IDNAME,=CL8'MACRO'
           B  E00MAINL
NOTMACH  DS    0H
         AIF   (&X8).X8050
* WE MUST NOW WRITE THE PROGRAM NAME IN THE PGM FIELD OF THE SCT
*    SO THAT SMF WILL BE OK
           GETJOBQ SCTDECB,JCTSSTR GET SCT,AFTER POINT
           CLC =C'$JOLMN',SCTPGMNM    FIRST PROGRAM GETS SMF RECORD 3.1
           BNE E00SMF1
           MVC SCTPGMNM,RUNNAME
E00SMF1  DS    0H
           PUTJOBQ SCTDECB     RE-WRITE SCT
* OK LET'S XCTL
         AGO   .NX8050
.X8050   ANOP
         FIX   'FIDDLE SMF RECORDS HERE'
.NX8050  ANOP
           POINT  RETN,TTR$RETN
           WRITE DECBRET1,SF,RETN,READAREA,'S'
           CHECK  DECBRET1
         AGO   .VS050
           SPACE 1                                                74365
           CLI VS,C' '         ARE WE RUNNING UNDER VS ?          74365
* IF WE ARE,WE WILL ATTACH NOW RATHER THAN XCTLING AND CLOSING    74365
*          AS THIS IS FASTER AND VS CAN ROLL US OUT QUICKLIY      74365
           BNE E00ISVS         IS VS,DO THINGS DIFFERENTLY        74365
           CLI IBMRTN,C' '     ARE WE USING AN IBM ROUTINE TO     *****
*                              ACCESS JOBQ ?                      *****
           BE  E00NDEL2                                           *****
           DELETE EPLOC=IBMRTN YES, DELETE IT                     *****
E00NDEL2 DS    0H                                                 *****
*          CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                    *DASD
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD
           MVC DBL(4),STMT    SAVE STATEMENT NUMBER WHILE         75128
*                              PROBLEM PROGRAM IS EXECUTING
           L   R1,ATASKPRM                     LOAD ADDR OF PARAMETER
           ST R1,CALLAREA
           MVI CALLAREA,X'80'
           L   R13,4(R13)                      RESET SAVE ADDR
           L   R14,12(R13)                     RESET RETURN ADDR
           XCTL (2,12),DE=RUNNAME,DCB=0,MF=(E,CALLAREA)
.VS050     SPACE 3                                                75311
E00ISVS    MVC DBL,STMT        SHIFT STATEMENT NUMBER             75311
* 3.0 - MVS CODE                                                  75311
*                                                                 75311
* FOR 3.0 WE WILL ATTACH THE PROBLEM PROGRAM UNDER THE MONITOR,   75311
* THAT IS, WE SHALL RETURN AS USUAL.                              75311
*                                                                 75311
* LATER, WHEN THIS CODE IS RE-ENTRANT, IT WILL BE MORE            75311
* EFFICENT TO ATTACH IT HERE, BUT VS1 IS A BIT OF A PROBLEM       75311
* BECAUSE IT DOESN'T HAVE 16MEGABYTES TO PLAY WITH.               75311
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD
           JOLRETN RC=0        UJEMON WILL LOOK AT 'VS' TOO.      75311
*  D  *    MVC CALLAREA(4),ATASKPRM                                DASD
*  E  *    MVI CALLAREA,X'80'                                      DASD
*  A  *    XC TASK2ECB,TASK2ECB                                    DASD
*  D  *    LA R1,CALLAREA                                          DASD
*     *    ATTACH DE=RUNNAME,ECB=TASK2ECB          74365           DASD
*  M  *    LR  R11,R1          SAVE TCB ADDRESS                    DASD
*  V  *    WAIT 1,ECB=TASK2ECB                                     DASD
*  S  *    MVC TASKRETN(1),X'1D'(R11) SHIFT IN ABEND CODE          DASD
*     *    MVC TASKRETN+1(3),TASK2ECB+1 AND RETURN CODE            DASD
*  C  *    ST R11,CALLAREA                                         DASD
*  O  *    DETACH CALLAREA                                         DASD
*  D  *    B E00VSSTR          BACK TO MAINLINE                    DASD
*  E  *    B *+4                                                   DASD
*     *    B *+4                                                   DASD
*     *    B *+4                                                   DASD
*************************************************************      DASD
*  CLOSE ANY OPEN FILES BEFORE RETURNING TO THE MONITOR     *      DASD
*        MVS  WILL ABEND-C03                                *      DASD
*************************************************************      DASD
         FIX 'CLOSE TOGETHER'
UJEFILES DS    0H                                                  DASD
         ST    R11,CALLAREA+4
         LA    R10,INSTRUCT                                        DASD
         BAL   R11,UJEFCLSE                                        DASD
         LA    R10,PRINT                                           DASD
         BAL   R11,UJEFCLSE                                        DASD
         LA    R10,RETN                                            DASD
         BAL   R11,UJEFCLSE                                        DASD
         AIF   (&X8).X8060
         LA    R10,JOBQ                                            DASD
         BAL   R11,UJEFCLSE                                        DASD
.X8060   ANOP
         L     R11,CALLAREA+4
         BR    R11                                                 DASD
UJEFCLSE DS    0H                                                  DASD
         TM    48(R10),X'10'  IS FILE OPEN ??                      DASD
         BZ    0(R11)         NOPE  RETURN                         DASD
         JOLCLOSE ((R10)),MF=(E,CALLAREA) CLOSE THIS GUY           DASD
         BR    R11            RETURN                               DASD
*
         AIF   (&X8).X8080
* THE FOLLOWING LOCATIONS ARE USED FOR READING AND WRITING
*  THE SYSTEM JOBQ
*
* LOCN 1 CONTAINS THE TTR OF THE RECORD WRITTEN
* LOCN 2 CONTAINS THE ADDRESS (IN DISPACEMENT FORM) OF THE AREA
*  TO BE USED AS THE READ/WRITE AREA
*
JCTDECB  DC    F'0'
         LA    R1,JCT         EXECUTED ***
         SPACE
SCTDECB  DC    F'0'
         LA    R1,SCT
         SPACE
PDQDECB2 DC    F'0'
         LA    R1,PDQ
         SPACE
SIOTDECB DC    F'0'
         LA    R1,SIOT
         SPACE
JFCBDECB DC    F'0'
         LA    R1,INFMJFCB
         SPACE
PDQDECB  DC    F'0'
         LA    R1,PDQBLK
           SPACE 3
ISINPDQ    DS CL1
.X8080   ANOP
ISRUN      DC C' '
RETNBLKS   DS  H
PDQDSNNO   DS  H
GOTOLAB    DS  CL8
APDQDIR    DS  A
           SPACE 3
LABEL      DS  CL8
COMMAND    DS  CL8
GETATKN   LA R1,TKNX
          L  R15,=V(UJCGETKN)
          BR R15                                                  75128
         AIF   (&X8).X8100
           SPACE 6
* GET/PUT JOBQ ROUTINES CALLED BY GETJOBQ/PUTJOBQ MACROS
* ON ENTRY R0-> CONTROL AREA CONTAINING TTR SAVE SPACE, AND A(AREA)5128
*          R1-> TTR REQUIRED                                      74365
*
* A SEPARATELY ASSEMBLED CSECT CALLED UJEJOBQ IS RESPONIBLE
*  FOR ACTUALLY CALLING THE IBM MODULE 'IEFQMRAW' TO DO THE
*  JOBQ TRANSFERS
*
*  THE PARAMETERS 'UJEJOBQ' WANTS ARE :-
*  R1-> :-
*     1. A(RECEIVE/WRITE AREA)
*     2. A(TTR POINTER)
*     3. TRANSFR TYPE 4=READ ETC
*     4. A(IEFQMRAW)               IBM ROUTINE
*
GETJOBQ    MVI CALLAREA+11,4   READ INDICATOR TO PUT IN IEFQMRAW
           B   E00JOBQ
PUTJOBQ  MVI   CALLAREA+11,X'03'  WRITE INDICATOR FOR QM          75128
         LR  R15,R0        GET CONTROL AREA ADDRESS
         L   R1,0(R15)     GET TTR FROM SAVED AREA
E00JOBQ  LR    R15,R0         LOAD R15 A(CONTROL BLOCK)           75128
         IC    R1,=AL1(0)     SET BOTTOM BYTE TO 0                 3.1
         ST    R1,0(R15)      STORE TTR REQD IN CONTROL BLOCK     75128
         ST    R1,CALLAREA+4  AND IN PARM FOR UJEJOBQ             75128
         EX    R0,4(R15)      EXECUTE LA INSTRUCTION TO FIND      75128
*                             ADDRESS OF AREA TO READ/WRITE       75128
         ST    R1,CALLAREA    SET PARM(1)                         75128
         MVC   CALLAREA+12(4),AQMRAW SHIFT A(IEFQMRAW)            75128
           B  *+4    ******************************************
           B  *+4    ******************************************
           ST  R14,IEFQRETN    SAVE RETURN ADDRESS
         LA    R1,CALLAREA    SET R1 UP PROPERLY                  75128
         L     R15,=V(UJEJOBQ) LOAD JOL'S INTERFACE TO IEFQMRAW   75128
         BALR  R14,R15         AND BRANCH TO IT                   75128
         LTR   R2,R15         DID WE MANAGE FUNCTION ?            75128
           BZ E00RMODE
         JOLERR 509,'UNABLE TO READ/WRITE JOBQ'                   75128
           SPACE
E00RMODE DS    0H                                                 75128
*        UNSUP      LA R1,X'24' SVC 107                           75128
         L     R1,CALLAREA+4  RELOAD TTR FOR CALLER IN CASE HE WANT5128
           L   R14,IEFQRETN    LOAD RETURN ADDRESS
           BR  R14             AND GO BACK
.X8100    ANOP
           SPACE 3
E00FXVOL   MVI   VOL,C' '  CLEAR TO BLANKS                         DASD
           MVC   VOL+1(L'VOL-1),VOL                                DASD
           LA R1,VOL-1                                            74365
           LA R15,DDVOLUME                                        74365
E00SHFTC   MVI 0(R1),C','     SHIFT IN COMMA TO SEPARATE VOLS    74365
           MVC 1(6,R1),0(R15)  SHIFT IN A VOLUME                  74365
           LA  R1,6(R1)        STEP OVER ',VOLUME'                 DASD
           LA R15,6(R15)       STEP OVER VOLUME                   74365
           CLI 0(R1),C' '      DROP EXTRA BLANKS (IF L'VOL<6)     74365
           BNE *+8             NOT BLANK                          74365
           BCT R1,*-8          IS BLANK,DROP R1 BY 1              74365
           LA  R1,1(R1)        SKIP TO NEXT POSITION              75311
           CLI 0(R15),C' '     LAST VOL ?                         74365
           BE E00SETVL         YEP, OUT WE GO (NEARLY)            74365
           C R15,=A(DDVOLUME+30)   END LIST                       74365
           BNH E00SHFTC
E00SETVL   S  R1,=A(VOL-1)                                       75003
           STH  R1,#VOL
           BR R14                                                 74365
UJS23EP5   LA  R1,5
           B   UJS23SET
UJS23EP4   LA  R1,4
           B   UJS23SET
UJS23EP3   LA  R1,3
           B   UJS23SET
UJS23EP2   LA  R1,2
           B   UJS23SET
UJS23EP1   LA  R1,1
           B   UJS23SET
UJS23EP0   SR  R1,R1
UJS23SET DS    0H
           STC R1,S23SEV
           L   R15,=V(UJS23ER)
           BR  R15
* WILL EVENTUALLY RETURN TO R14 ADDRESS
#S23MAX  DC    H'92'               MAX WTO OR LREC SIZE           76200
#S23LNE2 DS    H                   LINE 2 LENGTH                  76200
S23LNE2  DS    CL100               LINE 2 WORK AREA               76200
S23SEV     DS  CL1
S23STMT    DC  XL4'00000000'
#S23BLKS   DS  H
           DS  H
#S23LREC   DS  H
#S23MSSG   DS  H
S23MSSG    DS  CL150                                              74365
           DS  F                                                  75003
#VOL       DC  H'0'                                               75311
VOL        DC  CL50' '                                            75311
TASK2ECB   DC  F'0'                                               74365
           DS  F               SPARE
RUNBLDL    DS  0D
           DC  H'1'
           DC  H'68'
RUNNAME    DS  CL8
RUNTTRK    DS  CL4
RUNZ1      DS  CL1
RUNC1      DS  CL1
RUNUSDTA   DS  CL68
UJ00ANS    DS 3F
UJE00DDM    DC CL8'$$PRNT'
           ENTRY RETN,INSTRUCT,PRINT  ******FOR LINK MAP ******   75128
RETN       DCB DDNAME=&DDINST,DSORG=PO,MACRF=W,                 80290  *
               DEVD=DA,RECFM=FB,LRECL=80,                              *
               BLKSIZE=&RETNSIZ                                    DASD
INSTRUCT   DCB DDNAME=&DDINST,DSORG=PO,MACRF=(R,W),DEVD=DA
PRINT      DCB DDNAME=&DDPRT,DSORG=PS,DEVD=DA,RECFM=VB,LRECL=126,      *
               BLKSIZE=136,MACRF=W
JOLCOIN    DCB DDNAME=JOLCOIN,DSORG=PS,MACRF=PM,                80290  *
               DEVD=DA,RECFM=FB,LRECL=80,                              *
               BLKSIZE=800
         AIF   (&X8).X8120
JOBQ       DCB DDNAME=$$JOBQ,DSORG=PS,MACRF=(WP,RP),DEVD=DA       *****
           ENTRY JOBQ                                             *****
TEMPDCB  DCB   DDNAME=&DDINST,DSORG=PO,MACRF=R,          JOL30116 76200*
               DEVD=DA,EXLST=TEMPEXIT                    JOL30116 76200
TEMPEXIT DC    A(JFCBDSNM+X'87000000')                   JOL30116 76200
ATIOT      DS  A
.X8120   ANOP
ATCB       DS  A               ADDRESS OF TCB
         AIF   (&X8).X8140
AQMRAW   DS    A(0)           IEFQMRAW JOB Q RTN ADDRESS          75128
IBMRTN     DC  CL8' '          NAME OF LOADED IBM ROUTINE TO ACCES*****
*                              THE SYSTEM JOB QUEUE               *****
JCTTTR     DC  A(0)            ADDRESS | TTR OF THE JCT (EACH     *****
*                              SYSTEM IS A LITTLE DIFFERENT)      *****
           SPACE 3
* THIS TABLE IS USED BY THE SCRATCH AND CATLG ROUTINES
*     ALTHOUGH THE JOL PROCESSOR KNOWS WHAT TYPE OF UNIT A 'DD' CARD
*     IS FOR,TO SAVE SPACE IN THE PROCESSOR IT IS NOT CONVERTED
*     TO A FULL IBM UNIT (AND OF COURSE THE USER MAY SPECIFY HIS
*     OWN GENERIC UNIT)
* THIS TABLE IS USED ONLY WHEN A SCRATCH OR CATALOGUE WAS GIVEN
*     AND THE USER DID NOT CREATE THE DATA-SET IN THIS JOB,AND
*     THERE-FORE OS MAY NOT HAVE CONVERTED IT INTO A NICE LOOKING
*     UMIT FOR US.
HEXUNITS   DC A(*+12)
           DC A(5)
           DC A(HEXUNITE-5)
         COPY  UNITABLE                                            DASD
HEXUNITE DS    0H
.X8140   ANOP
           SPACE 3
           PRINT GEN
HEX        EQU *-240                                              75311
           DC  C'0123456789ABCDEF'                                75311
#DSNAME    DS 0H
#DSN       DC  H'10'         INITED ONLY FOR TESTS
DSN        DS   0CL44
DSNAME     DC  CL44'NOT INIT'
RETN8    LA    R15,8
         B     RETRN
RETN4    LA    R15,4
         B     RETRN
RETN0    SLR   R15,R15
RETRN    JOLRETN RC=(15)
           SPACE 3
          DC    80S(*)
           LTORG
RETNAREA DS    0D
READAREA DS    XL&RETNSIZ                                          DASD
         ORG   READAREA
TTR$RETN   DS  F               CONSTRUCTED BY BLDL IN UJESCHED
TTR$INST   DS  F               CONSTRUCTED BY BLDL IN UJESCHED
NOIDS      DS  H          CURRENT NO OF IDS
LEVEL      DC H'0'
NEST       DC H'0'
COND       DC  CL50' '
ERRORIND DC    X'00'          SET ON IF ABEND            CHG26028 76200
INERRORL DC    X'00'          ON IF CURRENTLY DOING ERRORCHG26028 76200
* NOTE:- DO NOT SEPARATE NEXT TWO LOCATIONS              CHG26028 76200
ERRLEVEL DC    H'0'           SET BY 'UJE04IF' WHEN -    CHG26028 76200
ERRNEST  DC    H'0'           'IF ERROR' FOUND           CHG26028 76200
SAVENEST   DC  XL6'00'
         EYEBALL MAXCC
MAXCC      DC  F'0'
LASTCC     DC  F'0'
JOLSVC     DC  X'0A00'         SVC FROM 'OPTION' INSTRUCTION      75311
IDSTART  DS    0X
         ORG
           SPACE 3
TABLES CSECT
         COPY  DDDSNDET                                           75128
         ORG
DDDETLN  EQU   *-DDDSNDET     LENGTH OF THE AREA
         ORG   DDDSNDET                                           75128
         COPY  PGMDETS                                            75128
         SPACE 3                                                  75128
         ORG
         DS    0H
MAXIDS   DC    AL2((READAREA+L'READAREA-IDSTART)/18)
         DC    AL2(0)
BLANKS   DC    CL20' '
         LTORG
         AIF   (&X8).X8160
         EYEBALL JCT
JCT      DS    0D
         IEFAJCTB
           EYEBALL SCT
SCT        DS  0D
         IEFASCTB
           EYEBALL SIOT
SIOT     DS    0D
         IEFASIOT
         ORG
         EYEBALL PDQ
         DS    0D
PDQ      DS    CL176
         ORG   PDQ
PDQDSN1  DS    CL44            DSNAME 1 IN PASSED DATA SET QUEUE
PDQDSN2  DS    CL44            DSNAME 2 IN PASSED DATA SET QUEUE
PDQDSN3  DS    CL44            DSNAME 3 IN PASSED DATA SET QUEUE
PDQENTRY DS    CL1             NUMBER OF ENTRIES IN THIS PDQ
PDQRESD  DS    CL35            JUNK OR SOMETHING
PDQABLK  DS    CL3,CL1         ADDRESS OF ASSOCIATED PDQ BLOCK
PDQNPDQ  DS    CL3,CL1         ADDRESS OF NEXT PDQ DIRECTORY
*THESE FIELDS CORRESPOND TO THE MVS PASSED DATA SET INFORMATION
* BLOCK.
***** IT IS NOT POSSIBLE TO USE AN MVS MACRO FOR THIS FUNCTION
* AS ONE DOES NOT EXIST.
*****
* THIS IS THE ONLY BLOCK THAT HAS CHANGED FROM
* MVT TO MVS ************(SO FAR....) ******
          ORG  PDQ
PDIBLOCK  DS   0X
PDINPDIP  DS   AL3   ADDRESS OF NEXT PDI SVA
PDICTR    DS   AL1   NUMBER OF DSNAMES IN THIS BLOCK
PDIBNXTP  DS   A     NEXT PDI BLOCK (DIFFERS FROM PDINPDIP
*                    ABOVE, AS IT POINTS DIRECTLY AT THE BLOCK,
*                    NOT -16 AS PDINPDIP).
PDIDSNAM  DS   CL44  1ST DSNAME
PDIUNWA   DS   CL1   PASS Q INDICATORS
*                    BIT 0 ON IF INITIAL STATUS=OLD
*                    BIT 1 ON IF CURRENT STATUS=OLD
*                    BIT 2 ON IF PASS,OFF IF RECIEVED
*                    BIT 6 ON IF DSNAME IS A JOBLIB
PDIRESVD DS   CL1   RESERVED
PDISTPNO DS   H     STEP NUMBER THAT PASSED
PDISIOTA DS   AL3,AL1 SVA OF SIOT THAT PASSED DSN
PDISIOTP DS   A     USED FOR SIOT IN ALLOCATION ONLY.
* THE ABOVE FIELDS ARE REPEATED THREE TIMES.
         ORG  PDIDSNAM
PDIDSN1  DS   CL44
PDITERM1 DS   CL1
PDIRESV1 DS   CL1
PDISTN1  DS   H
PDISIOT1 DS   AL3,AL1
PDISIOW1 DS   A
PDILEN   EQU   *-PDIDSN1
PDIDSN2  DS   CL44
PDITERM2 DS   CL1
PDIRESV2 DS   CL1
PDISTPN2 DS   H
PDISIOT2 DS   AL3,AL1
PDISIOW2 DS   A
PDIDSN3  DS   CL44
PDITERM3 DS  CL1
PDIRESV3 DS   CL1
PDISTPN3 DS   H
PDISIOT3 DS   AL3,AL1
PDISIOW3 DS   A
         ORG
         EYEBALL PDQBLOCK
         DS    0D
PDQBLK   DS    CL176          PASSED DATA SET QUEUE BLOCK
         ORG   PDQBLK
PDQCSTEP DS    CL1             CURRENT STEP NUMBER (OR LAST USE
*                              OF THIS DATA SET)
PDQDDNO  DS    CL1             CURRENT DD NUMBER
PDQTERM  DS    CL1             PDQ TERMINATION WORK AREA
*    IF PDQTERM=B'0010' DD-CARD SAID NEW,PASS
*    IF PDQTERM=B'0100' DD-CARD SAID OLD,KEEP (IE NOT PASSED NOW)
*    IF PDQTERM=B'1110' DD-CARD SAID OLD,PASS (OLD,CURRENT STATUS=OLD)
*    IF PDQTERM=B'1010' DD-CARD SAID OLD,DELETE (OLD,NOT PASSED)
* IT APPEARS THAT ONCE THE CURRENT STATUS BIT IS 0,ANY REFERENCE
*    TO THE DATA SET NAME IS IGNORED (I.E AS THOUGH NEVER ON PDQ).
*
*
PDQ#UCB  DS    CL1             NUMBER OF UCB'S
PDQAJFCB DS    CL3,CL1         QUEUE ADDRESS OF THIS JFCB
PDQASIOT DS    CL3             QUEUE ADDRESS OF THIS SIOT
PDQSSTEP DS    CL1             CURRENT STEP NUMBER (WHICH APPEARS
*                              TO BE ALWAYS THE SAME AS PDQCSTEP ABOVE)
PDQUCBS  DS    CL40
PDQUACBO DS    CL3,CL1         ADDRESS OF PDQ OVERFLOW BLOCK
PDQBLKLN EQU   *-PDQBLK
* THE ABOVE FIELDS ARE REPEATED TWICE (IE 3 DATA SET DETAILS ALLOWED)
         ORG
.X8160   ANOP
         AIF   (&X8).X8180
         SPACE 3
         EYEBALL JFCB
         IEFJFCBN   LIST=YES                                      76200
         EYEBALL QMPA
QMPA     DS    0D              USED FOR VS CURRENTLY
QMPAJOB  DS    CL8             JOB NAME OR NO-WORK-CHAIN ELEMENT
QMPAFUNC DS    CL1             FUNCTION CODE
QMPAFLTR DS    CL2             NN OF 1ST LOGL TRACK ASSIGNED TO ENTRY
QMPANOTR DS    CL1             NUMBER OF RECORDS ASSIGNED IN THIS TRACK
QMPANXTL DS    CL2             NN OF NEXT LOGICAL TRACK
QMPANOLT DS    CL1             NUMBER OF LOGICAL TRACKS ASSIGNED
QMPAJBCD DS    CL1             JOB TYPE CODE
QMPAJBST DS    CL1             JOB STATUS CODE
QMPAPRTY DS    CL1             JOB PRIORITY
QMPANXTQ DS    CL2             NN OF NEXT QUEUE ENTRY
QMPAQID  DS    CL2             QUEUE ENTRY IDENTIFICATION
QMPAORCL DS    CL1             ORIGIN CLASS ID
QMPARES1 DS    CL1             RESERVED
QMPATRKS DS    A               ADDRESS TRACK STACKING PARM LIST
QMPAIND  DS    CL1
         ORG   QMPAIND
QMPAAECB DS    A               ADDRESS OF USERS ECB/IOB
QMPANORC DS    CL1             1ST 4 BITS=NO OF RECORDS TO ASSIGN
*                              2ND 4 BITS=NO OF RECORDS TO READ/WRITE
QMPAAEXT DS    AL3             ADDRESS OF EXTERNAL PARAMETER AREA
IEFQATCB DS    A               ADDRESS OF TCB
IEFQAREC DS    A               ADDRESS OF RECORD BUFFER
IEFQAQMP DC    A(QMPA)         ADDRESS OF QMPA
IEFQTTR  DS    A               TTR OF REQUESTED RECORD
IEFQRCLN DC    AL2(176)
IEFQFUNC DC    AL2(0)
IEFQDECB DS    A               WORK AREA(NOT REQUIRED BY IEFQMMAC)
IEFQRETN DS    A               RETURN ADDRESS
.X8180   ANOP
         EYEBALL INST
INST     DS    H                               INSTRUCTIONS USE THIS
*                                              AREA AS WORK AREA AND
*                                              THEY ARE WRITTEN FROM
*                                              HERE
         ORG   INST
ILENGTH  DS    H                               LENGTH OF RECORD
         DC    H'0'                            FOR VB RECORD DESCRIPTOR
II       DC    C'I'                            RECORD TYPE
ILABEL   DS    CL8                             STATEMENT LABEL
ISTMT    DS    CL4                             STATEMENT NUMBER
ILEVEL   DS    CL1
INEST    DS    CL1
ICOMMAND DS    CL8                             INSTRUCTION EG 'TYPE'
IBODY    EQU   *-ILENGTH                       LENGTH OF FIXED
*                                              PART OF RECORD
ITEXT    DS    CL150                                              75128
         SPACE 3
         EYEBALL TKNX
         COPY  TKNX
         ORG TKNSTRG-IBODY-2
INSTRDA  DS    0C
         ORG
         LTORG
         DS    0D
INSCSECT CSECT
JE00TBL1 DC    A(JE00TBL2)
         DC    A(12)
         DC    A(JE00END2-12)
JE00TBL2 DC    CL8'RUN     ',V(UJE20RUN)
         DC    CL8'C       ',V(UJE05CAT)        CATLG
         DC    CL8'U       ',V(UJE06UNC)        UNCATLG
         DC    CL8'K       ',V(UJE07KEE)        KEEP
         DC    CL8'S       ',V(UJE08SCR)        SCRATCH
         DC    CL8'D       ',V(UJE09DEL)        DELETE
         DC    CL8'RETURN  ',V(UJE23RET)                          74365
         DC    CL8'TYPE    ',V(UJE10TYP)
         DC    CL8'DISPLAY ',V(UJE11DIS)
         DC    CL8'SIGNAL  ',V(UJE12SIG)
         DC    CL8'STOP    ',V(UJE13STP)
         DC    CL8'F       ',V(UJE14FRE)        FREE
         DC    CL8'OPTIONS ',V(UJE31OPT)                          75311
JE00END2 DS    0C
         EJECT
PARMAREA DSECT
         COPY  UJECOMM
IDOVLY   DSECT
IDSTMT   DS   CL4
IDNAME   DS   CL8
IDRETN   DS   CL4
IDLEVEL  DS   CL1
IDNEST   DS   CL1
********  VOLINFO DSECT USED TO REFERENCE A CAMLST *************   DASD
VOLINFO  DSECT                                                     DASD
NOVOLS   DS    H                                                   DASD
CATDEV   DS    XL4  )                                              DASD
CATVOL   DS    CL6  )   REPEATS NOVOLS TIMES                       DASD
CATLABEL DS    H    )                                              DASD
         AIF   (&X8).X8200
UCBS     DSECT ,                                            FIX-X 76200
         IEFUCBOB  LIST=YES                                 FIX-X 76200
.X8200   ANOP
         TITLE 'UJE04IF: HANDLE EXECUTE IF STATEMENT'
         COPY     UJE04IF
         LTORG
           DROP  R7
           TITLE 'UJE05CAT:CATALOGUE DATA SET'
          JOLSAVE CSECT=UJE05CAT
* THIS ROUTINE DOES THE CATALOGUING
         AIF   (&X8).X8220
* NOW:- WE FACE MANY PROBLEMS WHEN DOING A 'CATLG' (OR A KEEP)
* FIRST,WE SHALL CALL THE KEEP ROUTINE WHICH READS THE ODD
*     JFCB,FIXES PDQ'S ETC
           CLI ICOMMAND,C'U'   UNCATALOGUE CALLING ME TO PRINT
*                              ERROR MESSAGES ?
*          BNE E05DOCAT
           BE E05PRNTE
           CLI ICOMMAND,C'D'   DELETE CALLING ME TO PRINT ERR?
           BE E05PRNTE
E05DOCAT DS    0H
           SPACE 3
         CALL UJE07KEE   KEEPS THE DATA SET.
         LTR R15,R15
         BZ  E05TVOLS
         LR  R2,R15
         CH  R15,=H'4'       DOES KEEP WANT TO SKIP TO A NEW OS STEP?
         BNE E05KEEPE        NO,THERE WAS A REAL ERROR
         JOLRETN RC=4
E05KEEPE LA  R2,32
E05UNSUC DS    0H
          JOLERR 202,                                                  *
               'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,''' KEPT ON VOL(*
               S) ',#VOL,' BUT NOT CATALOGUED BECAUSE:-'          74365
         B     E05PRNTE
E05TVOLS DS    0H
* AT THIS POINT WE MIGHT HAVE TO DO SOME EXTRA WORK BEFORE WE CAN  DASD
* CATALOGUE THIS DATASET                                           DASD
* FIRST IF THE JFCBNVOL (NUMBER OF VOLUMES) EXCEEDS 5              DASD
* THE REST OF THE VOLUME SERIAL NUMBERS ARE RECORDED IN            DASD
* A JFCB EXTENSION BLOCK AT 15 A CRACK                             DASD
* SO IF WE SUPPORT GREATER THAN 5 WE MUST ALLOW FOR THE            DASD
* O.S. MAXIMUN OF 255.                                             DASD
         CLC   JFCBNVOL,=AL1(L'JFCBVOLS/6) > 5 VOLUMES ?           DASD
         BNH   EO5TOLOW             NOPE DO THIS THE OLD WAY       DASD
         LA    R14,E05UNIT          POINT TO CATALOGUE AREA        DASD
         SR    R15,R15              CLEAR REG-15                   DASD
         IC    R15,JFCBNVOL         INSERT VOLUME COUNT            DASD
EO5STUFF DS    0H                                                  DASD
         MVC   0(4,R14),SCTUTYPE    PLUG IN UNIT TYPE              DASD
         MVC   4(6,R14),BLANKS      CLEAR VOLUME SERIAL            DASD
         MVC   10(2,R14),JFCBFLSQ   PLUG IN FILE SEQ #             DASD
         LA    R14,12(R14)          POINT TO NEXT AREA             DASD
         BCT   R15,EO5STUFF         DO THE REST                    DASD
         XC    0(12,R14),0(R14)     CLEAR NEXT AREA                DASD
* NOW PLUG IN THE FIRST 5 VOLUMES SERIALS FROM THE JFCB            DASD
         LA    R15,5                STOP AFTER 5                   DASD
         LA    R14,E05UNIT          POINT TO CATALOGUE AREA        DASD
         LA    R1,JFCBVOLS          POINT TO FIRST 5 VOLUMES       DASD
E05STJ5  DS    0H                                                  DASD
         MVC   4(6,R14),0(R1)       MOVE IN VOLSER                 DASD
         LA    R1,6(R1)             POINT TO NEXT VOLUME           DASD
         LA    R14,12(R14)          POINT TO NEXT AREA             DASD
         BCT   R15,E05STJ5          RETURN FOR THE REST            DASD
         ST    R14,E05START         SAVE THIS GUY FOR LATER        DASD
         SR    R15,R15              CLEAR REG-15                   DASD
         IC    R15,JFCBNVOL         INSERT # VOLUMES IN R15        DASD
         SH    R15,=H'5'            BACKOFF 5                      DASD
         STH   R15,E05#VOLS         SAVE IT                        DASD
* NOW READ THE JFCB EXTENSION BLOCK POINTER TO BY JFCBEXAD OF THE JDASD
         MVC   JFCBETTR,JFCBEXAD    PUT ON A WORD BOUNDARY         DASD
GJFCBX   GETJOBQ JFCXDECB,JFCBETTR  GET EXTENSION BLOCK            DASD
         MVC   JFCBETTR,JFCBXTTR    MOVE NEXT GUY TO POINTER       DASD
         LH    R15,E05#VOLS         GET NUMBER OF VOLS LEFT        DASD
         LA    R1,15                LETS STOP AFTER 15             DASD
         L     R14,E05START         START MOVING VOLSERS TO HERE   DASD
         LA    R2,JFCBXVOL          POINT TO EXTRA VOLSER AREA     DASD
GJFCBXM  MVC   4(6,R14),0(R2)       MOVE HIM IN                    DASD
         SH    R15,=H'1'            BACKOFF R15 BY 1               DASD
         BZ    E05DONE              IF ZERO THATS IT               DASD
         LA    R14,12(R14)          UP TO NEXT AREA                DASD
         LA    R2,6(R2)             UP TO NEXT VOLSER IS JFCBX     DASD
         BCT   R1,GJFCBXM           GO BACK FOR THE REST,          DASD
         STH   R15,E05#VOLS         SAVE THE # OF VOLS LEFT        DASD
         ST    R14,E05START         SAVE NEXT AREA ADDRESS         DASD
         B     GJFCBX               GET THE REST OF THE EXTENSION BDASD
EO5TOLOW DS    0H                                                  DASD
* NOW LETS DO THE CATALOGUE,SHALL WE ?
         XC    E05VOLS(E05ETBL-E05VOLS),E05VOLS CLEAR TABLE INITIALLY
         MVC   E05VOLX+(0*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+0
         MVC   E05VOLX+(1*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+6
         MVC   E05VOLX+(2*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+12
         MVC   E05VOLX+(3*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+18
         MVC   E05VOLX+(4*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),DDVOLUME+24
         MVC   E05UNIT+(0*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE
         MVC   E05UNIT+(1*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE
         MVC   E05UNIT+(2*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE
         MVC   E05UNIT+(3*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE
         MVC   E05UNIT+(4*(L'E05UNIT+L'E05VOLX+L'E05LABEL)),SCTUTYPE
         MVC   E05LABEL,JFCBFLSQ
         XC    E05#VOLS,E05#VOLS
E05DONE  DS    0H                                                  DASD
***** TO SUPPORT RECAT, BLDX (AGAIN)
**SEPT 75
         MVI   E05CAT,100  CATALOGUE INDICATORS
         MVI   E05CAT+1,0  TURN OFF BLDX ENTRY
           MVC E05#VOLS+1(1),JFCBNVOL SHIFT IN NUMBER OF VOLUMES
           LA R1,DSNAME
           ST R1,E05CAT+4
           CLI DDMBR+1,C'+'      GENERATION DATASET ?             75311
           BE  E05NOBLD        YES,DON'T CATALOGUE WITH BUILD INDEX
           CLI DDMBR,C'('      GENERATION DATASET ?
           BE  E05NOBLD        YES,DON'T CATALOGUE WITH BUILD INDEX
         CLI VS,C'2'   MVS                                         DASD
         BE  E05NOBLD  YEP  MVS WILL NOT RECAT WILL BLDX ON        DASD
         OI  E05CAT+1,X'40'                                       75128
E05NOBLD DS    0H
* NOW TEST RE-CATLG FUNCTION
         IFNULL DDLABTYP,E05NALWA
* ALWAYS HERE
         MVI E05CAT,X'54'  TURN ON RE-CATLG BIT                   75311
         CATALOG E05CAT                                           75311
         LTR     R15,R15   DID WE RECATLG IT?                     75311
         BZ   E05SUCES YES                                        75311
* NOW RECATLG FAILED, SO ATTEMPT STRAIGHT CATLG THEN              75311
         MVI   E05CAT,X'64'                                       75311
E05NALWA DS    0H
         CATALOG E05CAT                  DO THE CATALOGUE
         LTR R15,R15
         BNZ E05ERR
E05SUCES DS   0H
* NOW WE MUST CHECK AGAIN FOR GREATER THAN 5 VOLUMES BECAUSE       DASD
* ALL OF THE VOLUMES MIGHT NOT FIT ON 1 MESSAGE                    DASD
         LH    R14,E05#VOLS         LOAD VOL COUNT                 DASD
         XC    E05#VOLS,E05#VOLS    CLEAR VOL COUNT                DASD
         CH    R14,=H'5'            > 5 VOLUMES                    DASD
         BNH   E05SUCE2             NO   LETS DOIT THE OLD WAY     DASD
         SH    R14,=H'5'            SUBTRACT 5                     DASD
         STH   R14,E05#VOLS         STORE BACK FOR LATER           DASD
         MVI   DDVOLUME,C' '        MOVE IN JUST THE 1ST FIVE      DASD
         MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                   DASD
         MVC   DDVOLUME(L'JFCBVOLS),JFCBVOLS                       DASD
         BAL   R14,E00FXVOL         MOVE TO #VOL,VOL EDITTED       DASD
         L     R15,=A(E05UNIT+60)   POINT TO 6TH VOLSER IN CAMLST  DASD
         ST    R15,E05START         SAVE FOR LATER                 DASD
E05SUCE2 DS    0H                                                  DASD
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                   *
               #DSNAME,''' CATALOGUED ON VOL(S) ',#VOL            74365
          LH    R14,E05#VOLS        LOAD NUMBER OF VOLS LEFT       DASD
          LTR   R14,R14             ALL DONE                       DASD
          BZ    E05GOODR            YES SIR LETS GO                DASD
E05LMSGS DS    0H                                                  DASD
          L     R15,E05START        POINT TO NEXT AREA             DASD
          MVI   DDVOLUME,C' '       CLEAR CONSTRUCT AREA           DASD
          MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                  DASD
          LA    R1,DDVOLUME         POINT TO CONSTRUCT AREA        DASD
          LA    R2,5                LETS STOP AFTER 5              DASD
E05LMSG   MVC   0(6,R1),4(R15)      MOVE IN NEXT VOLUME SERIAL     DASD
          LA    R1,6(R1)            BUMP DDVOLUME BY 6             DASD
          LA    R15,12(R15)         BUMP CAMLST BY 12              DASD
          SH    R14,=H'1'           BACKOFF VOL COUNT BY 1         DASD
          BZ    E05LMSGD            IF ALL DONE GET OUT EARLY      DASD
          BCT   R2,E05LMSG          RETURN FOR THE REST            DASD
E05LMSGD DS    0H                                                  DASD
          STH   R14,E05#VOLS        SAVE # OF VOLS LEFT            DASD
          ST    R15,E05START        STORE NEXT AREA ADDRESS        DASD
          BAL   R14,E00FXVOL        MOVE TO #VOL,VOL EDITTED       DASD
          B     E05SUCE2            GO PRINT THE  MESSAGE          DASD
E05GOODR DS    0H                                                  DASD
          JOLRETN
E05ERR     LR  R2,R15
           B   E05UNSUC
           SPACE 3
E05PRNTE DS    0H
           B  E05RETNC(R2)
E05RETNC   B   E05SUCES
           B   E05RET4
           B   E05RET8
           B   E05RET12
           B   E05RET16
           B   E05RET20
           B   E05RET24
           B   E05RET28
           B   E05RET32
           B   E05RET36
E05RET4    JOLERR 203,'CATALOGUE VOLUME NOT MOUNTED'
           B  E05RETN0
         FIX  'NOTE R0=0 IF C AND ALREADY CATLGD'           FIX-X 76200
         FIX  'NOTE R0=60 IF U/D AND YSAM'                  FIX-X 76200
E05RET8    JOLERR 204,'DATA SET NAME FOUND AT LOWER LEVEL'
           B  E05RETN0
E05RET12 DS    0H
           JOLERR 205,'CATLG RETN''D 12'
           B  E05RETN0
E05RET16   JOLERR 206,'NO INDEX LEVEL FOR DATA SET'
           B  E05RETN0
E05RET20   JOLERR 407,'CATALOGUE DATA SET IS FULL'
           B  E05RETN0
E05RET24   JOLERR 208,'INVALID GENERATION NAME'
           B  E05RETN0
E05RET28   JOLERR 409,'PERMANENT I/O ERROR ON CATALOGUE DATA SET'
           B  E05RETN0
E05RET32   JOLERR 210,'KEEP FAILED FOR DATA SET'
           B  E05RETN0
E05RET36   JOLERR 211,'NO VOLUMES WERE SUPPLIED'
E05RETN0   B    RETN0
E05CAT     CAMLST CAT,0,,E05VOLS
         AGO   .NX8220
.X8220   ANOP
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E05NOFCT              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY
         SPACE
         USING FCT,R4
E05NXFCT DS    0H
         CLC   FCTFLN,DSN            Q... IS THIS IT?
         BE    E05FFCT               A... YES, GO AND FIX IT
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E05NXFCT              BR IF THERE IS ONE
         B     E05NOFCT
E05FFCT  DS    0H    FOUND AN FCT TO "FIX"
         $TELL (R4)
         MODESET  KEY=ZERO
         NI    FCTSTS1,X'FF'-FCTS1DLT  IF CAT, DO NOT DELETE
         NI    FCTFDST1,X'FF'-FCTFSNFD DITTO
         NI    FCTFLG3,X'FF'-FCTF3UCT TURN OFF UNCAT
         B     *+8                    SKIP NEXTY INSTRUCTION.  CVC
         OI    FCTFLG3,FCTF3CAT      TURN CAT BIT ON
         SPACE 2
*  WELL, THAT SHOULD BE ALL
         SPACE
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY
         SPACE 3
* WHILE HERE, COPY THE VOLUME SERIAL NUMBERS TO RESOLVE FUTURE VOLREFS
         SPACE 2
         CLEAR DDVOLUME
         SLR   R8,R8
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT
         BZ    E05NVCT             EXIT IF THERE ARE NO VOLUMES
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT
         BH    E05VOK               BE IF OK
         JOLERR 512,'DS ',DDDSID,',',#DSN,                             .
               ' VOLUME REFERENCES CANNOT BE RESOLVED, DATASET RESIDES .
               ON TOO MANY VOLUMES'
E05VOK   DS    0H
         L     R6,FCTVCT
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES
E05VNXTV DS    0H
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA
         L     R6,4(,R6)            ADDRESS THE NEXT VCT
         BCT   R8,E05VNXTV          CONTINUE UNTIL ALL AREA DONE
         CALL  UJE07KEE       KEEP THE DATASET
         SPACE 2
E05CVC9  BAL   R14,E00FXVOL         COPY VOLS TO #VOLS
         SPACE
         UJE22UPD DDDSNAME,DDVOLUME FIX FUTURE VOLUME REFERENCES
         OPEN  (JOLCOIN,(OUTPUT))
         MVC   WORK(80),=CL80'/ CATL'
         PUT   JOLCOIN,WORK
         MVC   WORK(6),=C'/ FILE '      SHIFT IN FILE NAME
         MVC   WORK+7(44),DSN           AND DSNAME
         LA    R1,WORK+7                GET ADDRESS OF WORK
         AH    R1,#DSN                  GET LENGTH OF DSNAME
         MVI   0(R1),C','               PUT COMMA AT END
         MVC   1(L'DDVOLUME,R1),VOL     SHIFT IN VOLS
         PUT   JOLCOIN,WORK
         CLOSE (JOLCOIN)
         LA    R1,CTFEPARM              GET ADDRESS OF PARAMETER AREA
         LINK  EP=CTFE                  DO THE CATALOG
         CH    R15,=H'10'               GOOD RETURN CODE ?
         BE    E05X8CAT
         JOLERR 202,'DATA SET ''',#DSN,''' NOT CATALOGUED - SEE LIST'
         B     RETN0
E05X8CAT JOLERR 004,'DATA SET ''',#DSN,''' CATLOGUED ON VOL(S) ',#VOL
*  WELL, THAT SHOULD BE ALL: NOW FREE THE ORIGINAL DATASET
*        B     RETN0
*        JOLERR 004,'DSID ',DDDSID,' MARKED "CATALOGUE"'
         MVI   DDDISP+1,C'L' LAST USE                                  .
                                (A LIE OF COURSE, BUT HE WON'T KNOW)
         MVC   DDDDNAME,FCTACSN    ENSURE HE USES THE CORRECT DDNAME
         CALL  UJE14FRE            FREE THE DATASET
         B     RETN0
E05NVCT  JOLERR 201,                                                   .
               'DSID ',DDDSID,' NOT CATALOGUED, HAS NO VOLUMES  '
         B     RETN0
CTFEPARM DS    0F
         DC    A(NULLP)
         DC    X'80',AL3(E05ACNMS)
NULLP    DC    H'0'
E05ACNMS DC    H'16'
         DC    CL8'JOLCOIN',CL8'JOLUTP'
.NX8220  ANOP
E05RETN0 B     RETN0
E05NOFCT CLC   DDVOLUME,=C'     '     DOES IT HAVE A VOLUME
         BNE   E05CVC9                YES
         JOLERR 203,                                                   .
               'DSID ',DDDSID,' NOT CATALOGUED, IS NOT ALLOCATED'
         B     RETN0
         LTORG                                                     DASD
         DC    80S(*)                                              DASD
         AIF   (&X8).X8240
JFCXDECB DC    F'0'                                                DASD
          LA       R1,JFCBXTTR                                     DASD
          SPACE 3                                                  DASD
          EYEBALL  JFCX                                            DASD
          IEFJFCBX                                                 DASD
JFCBETTR  DC       F'0' JFCB EXTENSION POINTER                     DASD
E05START  DC       F'0' AREA ADDRESS WORK AREA                     DASD
.X8240   ANOP
          ENTRY E05VOLS                                            DASD
E05VOLS   DS 0D
E05#VOLS  DS H
E05UNIT   DS CL4
E05VOLX   DS CL6
E05LABEL  DS CL2
          PRINT NODATA SAVE SOME PAPER
          DC    254CL12' '          EXTENDED WORK AREA FOR 255 VOLUDASD
          PRINT DATA WASTE MORE PAPER FOR CLEM
E05ETBL   EQU   E05VOLS+100                                        DASD
*RECAT B'0001'
*CAT   B'0010'
*UNACT B'00001000'
*BLD   B'0100'
*DELETE INDEXES B'00001100'
********* ALL THE ABOVE APPLY TO BYTE 0
*  +2  (3RD) B'00000001'=VSAM
* .X8240   ANOP
           TITLE 'UJE06UNC:UNCATALOGUE DATA SET'
           JOLSAVE CSECT=UJE06UNC
*        AIF   (&X8).X8260
         LA    R1,DSNAME
         ST    R1,E06REMUV+4
         ST    R1,E06REMDT+4   REMOVE INDEXES,TOO
****************************************************************   DASD
* NEW 8-1-77 "UNCATLG GDGALL"   NO JCL NEED   ITS ALL DONE HERE*   DASD
****************************************************************   DASD
         CLI   DDCATLGS,104    UNCAT GDG ALL ?                     DASD
         BE    E06GDGAL        GO DO IT                            DASD
         CLI   DDMBR,C'+'      GDG ?
         BE    E06NODLT        YES,DON'T DELETE INDEX
         CLI   DDMBR,C'('      GDG ?
         BE    E06NODLT        YES,DON'T DELETE INDEX
         CATALOG E06REMDT    DO THE UNCATALOG AND REMOVE INDEXES
         LTR   R15,R15         ERROR ?
         BNZ   E06FAIL         YES,PRINT ERROR MESSAGES
         B     E06SUCES
E06NODLT DS    0H
         CATALOG E06REMUV
         LTR   R15,R15
          BNZ E06FAIL
E06SUCES  DS    0H
           JOLERR 101,'DSID ',DDDSID,' DSNAME ',                       *
               #DSNAME,' UNCATALOGUED'
          B    E06RETN
E06FAIL  DS    0H
           LR  R2,R15          SAVE UNCATLG RETURN CODE
           JOLERR 202,                                                 *
               'UNCATLG FOR DSID ''',DDDSID,                           *
               ''' NAME ''',#DSNAME,''' FAILED BECAUSE:-'
         CALL UJE05CAT       LET IT PRINT WHY
E06RETN  JOLRETN   RC=0                                            DASD
E06GDGAL L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD
         ST    R15,E06LOCAT+12         POINT TO LOCATE AREA        DASD
         MVC   #DSNAME(2),=H'44'       SET DSNAME TO THE BIGGIE    DASD
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD
         LA    R1,DSNAME               POINT TO DSNAME             DASD
         LA    R15,43(R1)              POINT TO END OF DSNAME      DASD
         LA    R14,1                   INCR BY 1                   DASD
E06FIND  CLI   0(R1),C' '              END OF DSNAME YET           DASD
         BE    *+8                     YEP LETS MOVE               DASD
         BXLE  R1,R14,E06FIND          RETURN                      DASD
         MVC   0(3,R1),=C'(0)'         LOOK FOR RELATIVE GDG 0     DASD
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD
E06LOOK  MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD
         LOCATE E06LOCAT                                           DASD
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD
         BNZ   E06RETN                 NOPE THAT ALL               DASD
         CATALOG E06REMUV                                          DASD
         LTR   R15,R15                 DID THIS WORK OK            DASD
         BNZ   E06FAIL                 NOPE SOMETHINGS WRONG       DASD
         JOLERR 103,'DSID ''',DDDSID,''' DSNAME ''',                   *
               #DSNAME,''' GDGALL UNCATALOGED'                     DASD
         B     E06LOOK                 RETURN TO LOOK FOR MORE GDGADASD
E06LOCAT CAMLST NAME,DSNAME,,0                                     DASD
E06REMUV   CAMLST UNCAT,0
E06REMDT   CAMLST UCATDX,0     UNCATLG,REMOVE INDEXES
.X8260    ANOP
         JOLRETN
         SPACE 2
         DC    80S(*)
           TITLE 'UJE07KEE:KEEP DATA SET'
           JOLSAVE CSECT=UJE07KEE
* A KEEP INSTRUCTION IS TO BE EXECUTED.
         AIF   (&X8).X8280
* THE KEEP IS A PRETTY EASY INSTRUCTION TO DO,AS IT BASICALLY
*    MEANS THAT THE PDQ MUST BE FOOLED INTO THINKING THAT THE
*    DATA SET WAS ORIGINALLY OLD.
* THE ONLY COMPLICATION THAT CAN ARISE IS THAT WE WOULD (ON OCCASIONS)
*    LIKE THE VOLUME TO BE UNLOADED(OR SET INTO AN UN-LOADABLE
*    STATUS
* PERMANENT,RETAINED,'JOL PREFERRED' ETC VOLUMES DO NOT HAVE TO
*    HAVE THEIR STATUS SET SO THEY MAY BE UNLOADED AND THIS IS
*    LEFT TO THE OPERATORS DISCRETION.
* IF IT IS A TAPE OR A NON-PREFERRED,(PRIVATE IN OTHER WORDS)
*    VOLUME AND IT IS NOT RETAINED,IT SHOULD BE DISMOUNTED.
          CLC DDDSNAME,=C'*DUMMY  '
          BNE  E07NOTDM                           74365
          JOLERR 206,'DSID ''',DDDSID,''' DSNAME ''',#DSN,             *
               ''' NOT KEPT:- DUMMY DATA SET'                    75003
          JOLRETN RC=16
E07NOTDM DS    0H
           CALL UJE81PDQ
           LTR R15,R15
           BZ  E07INPDQ
           CLI ICOMMAND,C'K'   KEEP ?
           BE  E07ERR1         YES,FLAG IT AS AN ERROR THEN
           CLC =C'*.',DDVOLUME VOLUME REFERENCE SPECIFIED,BUT DATA SET
* NOT CREATED ? THIS CAN OCCUR IF THE CREATING STEP WAS BYPASSED
           BE  E07ERR1         GO FLAG AS AN ERROR
           CLI DDVOLUME,C' '   VOL SPECIFIED ?
           BE  E07RETNF        NO,SO ERROR
           CLI DDUNITYP,C' '   UNIT SPECIFIED ?
           BE  E07RETNF        NO,ERROR TOO
* WELL A UNIT AND VOLUME WERE SPECIFIED,SO WE SHALL CONVERT
*     THE UNIT TO AN IBM TYPE OF NAME AND GENTLY RETURN
* (THE USER CODED 'CATLG DSN X UNIT Y VOL Z')
          SPACE
E07FIXU   DS    0H
           NI DDUNITYP,B'10011111' TURN OFF PERM BIT
* SPECIAL CODE FOR MVS                                            76200
         CLI   VS,C' '  IS IT A VS SYSTEM OF ANY SORT?            76200
         BE    E07NVS9                                             DASD
* OK, SPECIAL FOR VS AND 3330-1                                   76200
         CLC   =C'3330-1',DDUNIT                                  76200
         BNE   E07NVS9                                            76200
         LA    R1,MVS3330                                         76200
         B     E07GOTU                                            76200
         SPACE 2                                                  76200
E07NVS9  DS    0H                                                 76200
          L   R1,HEXUNITS
          LM  R14,R15,HEXUNITS+4
E07FINDU   CLC DDUNITYP,4(R1)
           BE  E07GOTU
           BXLE R1,R14,E07FINDU
           CALL  UJEDEVNM  WELL HOW ABOUT THE DEVICE NAME TABLE    DASD
           LTR   R15,R15                                           DASD
           BZ    E07GOTU+6  GREAT                                  DASD
           JOLERR 403,'INVALID UNIT FOUND IN KEEP'
           B   E07RETNF
E07GOTU    MVC SCTUTYPE,0(R1)
* SET UP NUMBER NUMBER OF VOLUMES IN JFCB,AND VOLUMES
           MVC JFCBVOLS,DDVOLUME
           MVI JFCBNVOL,1
           CLI DDVOLUME+06,C' '
           BE E07RETN0
           MVI JFCBNVOL,2
           CLI DDVOLUME+12,C' '
           BE E07RETN0
           MVI JFCBNVOL,3
           CLI DDVOLUME+18,C' '
           BE E07RETN0
           MVI JFCBNVOL,4
           CLI DDVOLUME+24,C' '
           BE E07RETN0
           MVI JFCBNVOL,5
           B  E07RETN0
E07ERR1  DS    0H
           JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               '''',                                                   *
               ' NOT YET CREATED:-KEEP IGNORED'
E07RETNF DS    0H
           JOLRETN RC=16
           SPACE 3
E07INPDQ DS    0H
* NOW JUST BECAUSE THE NAME APPEARS IN THE PDQ DOESN'T MEAN FOR
*    1 SECOND THAT IT HASN'T :-
*          1.  BEEN SCRATCHED
*          2.  BEEN ALREADY KEPT
           LH  R1,PDQDSNNO     1ST,2ND OR 3RD NAME IN PDQ ?
          CLI VS,C'2'    IS IT AN MVS SYSTEM?
        BNE  E07NMV1S  NO                                          DASD
* OK, MVS HAS DIFFERENT TYPE OF PASSED DATA SET Q
         MH  R1,=AL2(PDILEN)
          LA R14,PDITERM1(R1)
        B   E07NMVS1
E07NMV1S   MH  R1,=AL2(PDQBLKLN)                                   DASD
           LA  R14,PDQTERM(R1)
E07NMVS1 DS    0H
           TM  0(R14),X'C0'    OLD,DELETE ?
           B   *+8             ****************
           BO  E07DELET
           SPACE 3
*** LAST BYTE OF JFCB TTR =0 IN SIOT
           GETJOBQ JFCBDECB,SCTPJFCB  GET THE JFCB
           CLI JFCBVOLS,X'FF'  UNOPENED SCRATCH VOLUME ?
           BNE E07NOTFF        GO WRITE BACK JFCB,SIOT
           JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,         *
               ''' NOT KEPT:UNOPENED SCRATCH VOLUME'
           B   E07RETNF
E07NOTFF  DS    0H
           NI JFCBIND2,B'01111111' TELL OS AN OLD DATA SET
           OI JFCBIND2,B'01000000'
           PUTJOBQ JFCBDECB
           MVC CALLAREA,SIOT
           MVI CALLAREA+3,0
           GETJOBQ SIOTDECB,CALLAREA
*                                                           FIX-X 76200
* THE NEXT FEW LINES ARE NEW IN 3.1 AND ARE CODED IN        FIX-X 76200
*  THE HOPE THAT WE CAN HAVE THE OPERATING SYSTEM UNLOAD    FIX-X 76200
*  THE VOLUME FOR US AT STEP TERM.                          FIX-X 76200
* IN ADDITION, THE DSNAME SHOULD BE TAKEN OFF THE PASSED    FIX-X 76200
*  DATA SET QUEUE. CURRENTLY, AT JOB TERMINATION, A NUMBER  FIX-X 76200
*  OF UNNECESSARY MESSAGES ARE DISPLAYED INDICATING THAT    FIX-X 76200
*  DATA SETS HAVE BEEN KEPT. THESE SHOULD NO LONGER OCCUR.  FIX-X 76200
*                                                           FIX-X 76200
*                                                           FIX-X 76200
         CLI   DDDISP+1,C'L'  LAST USE OF DATA SET ?        FIX-X 76200
*                             IF WE CAN LET OS UNLOAD ?     FIX-X 76200
         BNE   E07NLAST       NOT LAST USE                  FIX-X 76200
* MARK SIOT AND LET IT THINK WE HAVE FINISHED WITH          FIX-X 76200
*  THE DATASET (WHICH WE HAVE, OF COURSE).                  FIX-X 76200
         NI    SCTSDISP,X'FF'-SIOTRETN-S3400DSP-PRIVATE     FIX-X 76200
         OI    SCTSDISP,8     TURN KEEP ON                  FIX-X 76200
         OI    SCTSBYT2,SCTRECVD MARK RECIEVED              FIX-X 76200
         B     E07MAKOL       MAKE IT OLD, RE-WRITE SIOT    FIX-X 76200
E07NLAST DS    0H                                           FIX-X 76200
         OI  SCTSDISP,B'00001000'   SIOT = KEEP
E07MAKOL OI    SCTSBYT4,1     MARK OLD                      FIX-X 76200
           PUTJOBQ SIOTDECB
           SPACE 3
           MVC DDVOLUME,JFCBVOLS
           BAL R14,E00FXVOL    SET UP VOLUME(S) IN #VOL           74365
* NOW TO MARK THE PDQ
* TEST IF MVS, DIFFERENT...
         CLI  VS,C'2'   MVS?
         BNE E07NMVS2  NOPE ->
* MVS SIOT CONTAINS THE UCB POINTER, MVT THE PDG DOES
          LH R14,SCTUTYPE
          B    E07TUNIT
E07NMVS2  DS    0H
           MVC CALLAREA,PDQABLK
           MVI CALLAREA+3,0
           GETJOBQ PDQDECB,CALLAREA
           LH R1,PDQDSNNO
           MH R1,=AL2(PDQBLKLN)
           L   R14,PDQUCBS(R1) GET UCB POINTER FOR DEVICE TYPE    74365
           MVC SCTUTYPE,16(R14) MOVE IN UCB DEVICE TYPE
E07TUNIT DS    0H
*
* THIS FIXES A PROBLEM WHEN A TAPE IS WRITTEN ON A DUAL     FIX-X 76200
*  DENSITY DRIVE, AND A CATALOGUE IS PERFORMED              FIX-X 76200
* WE SHALL (AS OS DOES), MAKE THE UNIT IN THE CATALOGUE ONE FIX-X 76200
*  WHICH WILL ALLOW THE TAPE TO BE MOUNTED ON A NON-DUAL    FIX-X 76200
*  DENSITY DRIVE IF THE TAPE WAS WRITTEN IF HIGH DENSITY    FIX-X 76200
*  MODE.                                                    FIX-X 76200
         CLI   SCTUTYPE+2,UCB3TAPE TAPE DEVICE ?            FIX-X 76200
         BNE   E07DA          NO->                          FIX-X 76200
* TAPE DEVICE HERE.                                         FIX-X 76200
         TM    SCTUTYPE+1,UCBDUDN1+UCBDUDN2 DUAL DENSITY?   FIX-X 76200
         BZ    E07UOK         UNIT IS OK, LEAVE IT.         FIX-X 76200
* THE UCB THAT THE DATA SET IS ON IS A DUAL DENSITY UCB,    FIX-X 76200
*  BUT NOW WE MUST CHECK THE DENSITY OF THE DATA SET.       FIX-X 76200
*
*  FOR 800 BPI, WE WANT TO SET UP UNIT AS 30,00,80,XX
*  FOR 1600 BPI, WE WANT TO SET UP UNIT AS 34,00,80,XX
*  FOR 6250 BPI, WE WANT TO SET UP UNIT AS 32,00,80,XX
         CLI   JFCDEN,JFC800  IS IT 800 BPI ?               CVC   81220
         BNE   E07T1600       TEST IF 1600 BPI.             CVC   81220
         MVC   SCTUTYPE(2),=X'3000'   SET 800 BPI NOW       CVC   81220
         B     E07UOK                                       CVC   81220
         SPACE 2
E07T1600 CLI   JFCDEN,JFC1600 IS IT 1600 BPI ?              CVC   81220
         BNE   E07T6250       TEST IF 6250 BPI.             CVC   81220
         MVC   SCTUTYPE(3),=X'3400'   SET 1600 BPI NOW      CVC   81220
         B     E07UOK                                       CVC   81220
         SPACE 2
E07T6250 CLI   JFCDEN,JFC6250 IS IT 6250 BPI ?              CVC   81220
         BNE   E07UOK         LEAVE IT, DON'T KNOW WHAT IT ISVC   81220
         MVC   SCTUTYPE(3),=X'3200'   SET 6250 BPI NOW      CVC   81220
         B     E07UOK                                       CVC   81220
         SPACE 2
E07DA    NI    SCTUTYPE+1,X'FF'-UCBRR TURN OFF 'SHARE'      FIX-X 76200
         SPACE 2
E07UOK  CLI  VS,C'2'  MVS AGAIN?
         BNE   E07NMVS3
         LH    R1,PDQDSNNO
         MH    R1,=AL2(PDILEN)
         LA    R14,PDITERM1(R1)
         B     E07MARK9
E07NMVS3 DS    0H
           LA R14,PDQTERM(R1)
E07MARK9 DS    0H
         NI    0(R14),X'0F'     TURN OFF TOP 4 BITS
         CLI   DDDISP+1,C'L'   LAST USE,IE OLD,KEEP ?
         BNE   E07PASS
         OI    0(R14),B'01000000' OLD,KEEP
         NI    0(R14),B'11000000'  INDICATE RECIEVED        FIX-X 76200
         B     E07MARKD
E07PASS  OI    0(R14),B'11100000' OLD,PASS
E07MARKD DS    0H
         CLI   VS,C'2'    MVS AGAIN?????
         BNE   E07NMVS4
         SH    R14,=H'44'         BACKUP TO DSNAME              DASD
         MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ      DASD
         PUTJOBQ PDQDECB2
         B    E07RETN0
E07NMVS4 DS    0H
         PUTJOBQ PDQDECB
         SPACE 3
E07RETN0  DS    0H
           CLI ICOMMAND,C'K'   IS THIS A KEEP INSTRUCTION?        74365
           BNE E07RETNO W      NO,SO NO MESSAGE,JUST RETURN       74365
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' KEPT ON VOL(S) ',#VOL                          74365
E07RETNO  TM    JFCDSRG1,JFCORGIS  IS THIS A ISAM FILE             DASD
          BNO   E07RTN        NOPE LETS LEAVE                      DASD
           CALL UJEISPDQ   GO SAVE THE DUPLICATE PDQ DSNS          DASD
E07RTN     JOLRETN RC=0                                            DASD
E07LETOS DS    0H
           JOLRETN RC=4
           SPACE 3
E07DELET DS    0H
           JOLERR 202,'DSID ''',DDDSID,''' DSNAME ',                   *
               ''' PREVIOUSLY DELETED :- KEEP IGNORED'
           JOLRETN RC=16
         AGO   .NX8280
.X8280   ANOP
         SLR   R2,R2                 COUNT THE FCTS FOUND
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E07NOFCT              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY
         SPACE
         USING FCT,R4
E07NXFCT DS    0H
         CLC   FCTFLN,DSN            Q... IS THIS IT?
         BNE   E07NOTIT              A... NO
         BAL   R2,E07FFCT            GO AND FIX THE BITS
E07NOTIT DS    0H
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E07NXFCT              BR IF THERE IS ONE
         B     E07NOFCT
E07FFCT  DS    0H    FOUND AN FCT TO "FIX"
         $TELL (R4)
         MODESET  KEY=ZERO
         NI    FCTSTS1,X'FF'-FCTS1DLT  IF KEEP, DO NOT DELETE
         NI    FCTFDST1,X'FF'-FCTFSNFD DITTO
         OI    FCTFLG2,FCTF2KEP      TURN KEEP ON
         SPACE 2
*  WELL, THAT SHOULD BE ALL
         SPACE
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY
         BR    R2             GO AND SEE IF THERE AREA ANY MORE
E07NOFCT DS    0H
         LTR   R2,R2
         BZ    E07NOKPT
         CLI   ICOMMAND,C'K' Q... IS THIS A GENUINE KEEP?
         BNE   E07RETN0      A... NO, PROBABLY A CATLG: SKIP MSG
         JOLERR 003,'DSID ',DDDSID,' ',#DSN,' MARKED "KEEP"'
E07RETN0 DS    0H
         B     RETN0
E07NOKPT DS    0H   NO ENTRIES MARKED KEEP
         JOLERR 202,'DSID ',DDDSID,' NOT KEPT, IS NOT ALLOCATED'
         B     RETN0
.NX8280  ANOP
         SPACE 3
         DC    80S(*)
         TITLE 'UJE08SCR:SCRATCH DATA SET'
         JOLSAVE CSECT=UJE08SCR
* SCRATCH INSTRUCTION IS TO BE EXECUTED.
         AIF   (&X8).X8300
*    NOW IF IT IS A DISC,WE ISSUE A SCRATCH.
*          IF THE VOLUME IS NOT MOUNTED,WE GO AND FIND THE STEP
*          WHICH WE WANT TO EXECUTE (IT HAS A DD-CARD WHICH MOUNTS
*          THE VOLUME).
           SPACE
*    IF IT IS A TAPE,AND IT CAN BE FREED NOW (NOT RETAINED)
*          IT MUST BE GIVEN A DISPOSITION OF DELETE
*          THIS MUST BE DONE BY JCL AT THE MOMENT
*    IF IT IS RETAINED,THE PDQ IS MARKED DELETE,UNLESS WE HAVE
*          TIOT ENTRY,IN WHICH CASE IT IS MARKED DELETE,AND OS WILL
*          PROBABLY REMOVE THE VOLUME.
*    IF IT IS NOT RETAINED,WE MUST STEP DOWN TO THE CORRECT
*          STEP AND HAVE IT REMOVED FROM THE SYSTEM FOR US.
           SPACE 3
* PUT INTO LOGICAL TERMS,THE CODE COES LIKE THIS:-
*
*          IF INPDQ
*          THEN DO;
* ERROR2:      IF ¬STILL_IN_PDQ,ERROR AND RETURN; /*ALREADY GONE*/
*              IF ALLOCATED_TO_THIS_STEP
*              THEN DO;
*                  TURN ON DELETE_BITS IN SIOT;
*                  REWRITE SIOT;
*                  RETURN;
*              END;
*              GO TO E08_NOT_IN_THIS_STEP_MAYBE;
*          END;
*  /* NOT IN PDQ */
*
*          IF VOL & UNIT ¬=''
*          THEN DO;
*              SET UP DSNAME,VOL,UNIT;
*              GO TO E08_NOT_IN_THIS_STEP_MAYBE;
*          END;
*          GO TO ERROR2;
* NOT_HERE?:
*
*
*          IF IS MAG TAPE THEN GO TO E08MAGTP
* /* DISC HERE */
*          SCRATCH;
*          VOL_NOT_MOUNTED,GO TO LETOS;
*          RETURN;
* LETOS:   SET UP STEP NAME TO SKIP TO FOR OS STEP
*          RETURN(4);
* E08MAGTP:
*          MARK DELETE; /* IF OLD,MARK NEW,DELETE*/
*          IF VOLUME TO BE RETAINED
*          THEN RETURN;
*          GO TO LETOS;        /*UNLESS IN THIS STEP*/
*
*
* THE SITUATION THEN BASICALLY MEANS THAT IF A SCRATCH IS ISSUED
*    FOR A DISC,AND THE DISC/IS NOT MOUNTED,A NEW OS STEP OCCURRS
*
* IF A TAPE IS TO BE SCRATCHED,AND IT CAN BE UNLOADED (IE OTHER
*    DATA SETS ARE STILL BEING USED ON IT) NO REAL ACTION OCCURRS
*    BUT IF IT CAN BE UNLOADED A NEW OS STEP IS INITIATED.
********** UNTIL I CAN FOOL OS ***********
           SPACE 3
* NOW IF THE NAME IS A TEMPORARY DSNAME,WE MUST FIDDLE AROUND UNTIL WE
*    HAVE THE PART OF THE NAME THAT OS PUT IN FRONT OF OURS,AND PUT
*    OURS AT THE BACK. THIS THEN GIVES US A REAL DSNAME WHICH SHOULD
*    BE IN THE PASSED DATA SET QUEUE.
*                                                        JOL30112 76200
* DELETE GDGALL PROCESSING IS HANDLED BY OS.             JOL30112 76200
* IF THE CATLG INDICATOR HAS 104,IT MEANS THAT THE       JOL30112 76200
* COMPILER FOUND GDGALL. ALL WE HAVE TO DO IS            JOL30112 76200
* RETURN A 4, AND THAT WILL EXECUTE THE SCRATCH STEP     JOL30112 76200
*                                                        JOL30112 76200
         CLI   DDCATLGS,104   GDGALL ?                   JOL30112 76200
         BNE   E08TTEMP       NO,TEST TEMPORARY THEN     JOL30112 76200
           JOLERR 112,'DSID ',DDDSID,' DSNAME ',#DSN,                  *
               ' IS GDGALL, THE OPERATING SYSTEM WILL DELETE IT'
         JOLRETN RC=4                                    JOL30112 76200
E08TTEMP CLI   DDDSNAME,C'&&' TEMPORARY ?                JOL30112 76200
           BNE E08NTEMP        NO,SO FORGET THIS BIT OF PROCESSING
*                                                        JOL30116 76200
* NOW READ THE JFCB OF THE $$INST FILE AND               JOL30116 76200
* FIND OUT WHAT DSN HAS BEEN GIVEN TO                    JOL30116 76200
* TEMPORARY DATA SETS                                    JOL30116 76200
*                                                        JOL30116 76200
         RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200
* NOW FIND LAST DOT,AND SHIFT IN OUR TEMP NAME (&&WORK000I FOR EXAMPLE)
         LA    R15,JFCBDSNM+43 GET END OF DSNAME         JOL30116 76200
E08FSTOP   CLI 0(R15),C'.'     GOT THE LAST '.' ?
           BE  E08GOTST        YES
           BCT R15,E08FSTOP    FIND STOP LOOP
           JOLERR 508,'INTERNAL ERROR:NO ''.'' IN TEMP DSN'
           SPACE
E08GOTST CLI   DDDSNAME+1,C'&&' DOUBLE & CODED ?         JOL30116 76200
         BNE   E08ONEA                                   JOL30116 76200
         MVC   DDDSNAME+1(8),DDDSNAME+2 DROP 2ND         JOL30116 76200
E08ONEA  MVC   1(8,R15),DDDSNAME+1 SET UP REAL DSNAME    JOL30116 76200
         MVC   DDDSNAME,JFCBDSNM   SHIFT BACK            JOL30116 76200
E08NTEMP DS    0H
           CALL UJE81PDQ       SEE IF NAME IN PDQ
*                              NOTE,IT ALSO READS IN SIOT AND JFCB
           LTR R15,R15
           BNZ E08NOTHR        NOT IN PDQ
* NOW IT WAS IN THE PDQ HERE.
* A QUICK CHECK TO SEE IF IT HAS ALREADY BEEN DELETED
*************** FAILURE HERE,JUST ATTEMPT TO SCRATCH
           LH  R1,PDQDSNNO     1ST,2ND,3RD DSNAME IN PDQ ?
             CLI  VS,C'2'   MVS???
           BNE E08NMVS1
            MH  R1,=AL2(PDILEN)
            LA  R14,PDITERM1(R1)
            B  E08TDEL
E08NMVS1 DS    0H
           MH R1,=AL2(PDQBLKLN)
           LA  R14,PDQTERM(R1)
E08TDEL   DS   0H
           TM  0(R14),X'C0'    HAS IT BEEN (OLD,DELETED) ?
           B  E08TSTP
           BO E08ERR2          ALREADY GONE MY FRIEND
* OK,IT IS STILL PASSED SUCCESSFULLY APPARENTLY
*    HOWEVER,NOW WE MUST SEE IF THE DATA SET IS BEING USED BY
*    THIS STEP,IF SO,MERELY MARK THE SIOT DELETE AND THAT'S THAT
E08TSTP  DS    0H
          CLI   VS,C'2'
         BNE   E08MARKD
           LA  R14,PDQCSTEP(R1) CURRENT STEP NUMBER ADDRESS IN PDQ
           CLC 0(1,R14),JCTSNUMB CURRENT STEPS EQUAL
           BNE E08RJFCB        READ THE JFCB
* NOW MARK THE SIOT TO DELETE AND OUTPUT A MESSAGE SAYING
*    WILL BE SCRATCHED.
E08MARKD DS    0H
           MVC CALLAREA,SIOT
           MVI CALLAREA+3,0
           GETJOBQ SIOTDECB,CALLAREA
           OI  SCTSDISP,B'00000100' TURN ON DELETE BIT
           OI  SIOTALTD,B'00000100' TURN ON DELETE BIT IN CONDITION
*                                   DISPOSITION PROCESSING
           PUTJOBQ SIOTDECB
E08RJFCB   DS 0H
E08TEST  DS    0H
           GETJOBQ JFCBDECB,SCTPJFCB GET CORRESPONDING JFCB
           LH  R1,PDQDSNNO     DATA SET NUMBER IN PDQ
           MH  R1,=AL2(PDQBLKLN)
           L   R14,PDQUCBS(R1) GET UCB ADDRESS FOR DEVICE TYPE    74365
            CLI  VS,C'2'   MVS AGAIN??
          BNE   E08NMVS2
* THE SIOT IN MVS CONTAINS THE UCB POINTER, NOT THE PDQ
          LH   R14,SCTUTYPE
       B  E08NOSTP
E08NMVS2 DS    0H
           MVC SCTUTYPE,16(R14) MOVE IN UCB UNIT TYPE
           B  E08NOSTP         DO THE SCRATCH
           SPACE 3
E08NOTHR DS    0H              NOT IN PDQ
* THE DATA SET WAS NOT IN THE PASS QUEUE,AND THEREFORE IT SHOULD
*    (MUST?) HAVE A VOL & UNIT,AND WILL HAVE A DDCARD SOMEWHERE
*    FOR IT TO BE MOUNTED IF ITS NOT NOW.
           CLI DDVOLUME,C' '   VOL SPECIFIED ?
           BE  E08NOPDQ        NOPE
           CLI DDUNITYP,C' '   UNIT GIVEN ?
           BE  E08NOPDQ        NOPE
* OK,NOW SET UP THE JFCBDSN,AND THE VOLUME & UNIT AND
*    GO TO THE SCRATCH ROUTINES.
           MVC JFCBDSNM,DDDSNAME
           MVC JFCBVOLS,DDVOLUME
           NI DDUNITYP,B'10011111' DROP PERM BIT
           MVI JFCBNVOL,1
           CLI DDVOLUME+06,C' '
           BE  E08FIXUN
           MVI JFCBNVOL,2
           CLI DDVOLUME+12,C' '
           BE  E08FIXUN
           MVI JFCBNVOL,3
           CLI DDVOLUME+18,C' '
           BE  E08FIXUN
           MVI JFCBNVOL,4
           CLI DDVOLUME+24,C' '
           BE  E08FIXUN
           MVI JFCBNVOL,5
           BE  E08FIXUN
E08FIXUN DS    0H
         NI DDUNITYP,B'10011111'
* SPECIAL CODE FOR MVS,VS1                                        76200
         CLI   VS,C' ' IS IT A VS SYSTEM OF SOME SORT?            76200
         BE    E08NVS9                                             DASD
* OK SPECIAL FOR VS AND 3330-1                                    76200
         CLC   =C'3330-1',DDUNIT                                  76200
         BNE   E08NVS9                                            76200
         LA    R7,MVS3330                                         76200
         B     E08GOTUN                                           76200
E08NVS9  DS    0H                                                 76200
           L   R1,=A(HEXUNITS)
           LM  R7,R9,0(R1)
E08FHEXU   CLC DDUNITYP,4(R7)  UNIT WE WANT ?
           BE  E08GOTUN
           BXLE R7,R8,E08FHEXU
           CALL UJEDEVNM   HOW ABOUT THE DEVICE NAME TABLE         DASD
           LTR  R15,R15                                            DASD
           BZ   E08NOSTP   SUPER   SAVED AGAIN                     DASD
           JOLERR 402,'SCRATCH REQUIRES UNIT ''',DDUNIT,''' UNKNOWN TO *
               JOL'
           B   E08RETNF
           SPACE 3
E08GOTUN   MVC SCTUTYPE,0(R7)  SHIFT IN IBM UNIT TYPE
           B   E08NOSTP        DO THE SCRATCH ETC
E08ERR2  DS    0H              NOT IN PDQ AND NO VOL/UNIT SPECIFIED
           JOLERR 209,'DSID ''',DDDSID,''' DSNAME ''',#DSN,''' ALREADY *
               SCRATCHED'
           JOLRETN RC=16
           SPACE 3
E08NOSTP DS    0H              NOT USED IN THIS STEP
* NOW THIS SITUATION IS JUST A FRACTION MORE DIFFICULT THAN THE
*    OTHERS.
* IF THE DATA SET IS ON DISK,ISSUE A SCRATCH
           CLI SCTUTYPE+2,X'80' MAG TAPE ?
           BE  E08MAGTP
* DISK,LETS ISSUE THE SCRATCH AFTER SETTING THINGS UP
           CLC JFCBNVOL,=AL1(L'JFCBVOLS/6)
           BH  E08LETOS        HELP,TOO MANY VOLUMES,LET
*                              OS DO ALL THE SCRATCHING IT LIKES
*                              THANKS
           XC E08NOVOL(E08SCREN-E08NOVOL),E08NOVOL
           MVC E08NOVOL+1(1),JFCBNVOL
           MVI E08NOVOL,0
           MVC E08UNIT+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE
           MVC E08UNIT+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE
           MVC E08UNIT+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE
           MVC E08UNIT+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE
           MVC E08UNIT+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ)),SCTUTYPE
           MVC  E08VOL+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+0
           MVC  E08VOL+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+6
           MVC  E08VOL+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+12
           MVC  E08VOL+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+18
           MVC  E08VOL+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ)),JFCBVOLS+24
           CLEAR DDVOLUME                                         74365
           MVC DDVOLUME(L'JFCBVOLS),JFCBVOLS                      74365
           BAL R14,E00FXVOL    SET UP VOLUME LIST IN #VOL         74365
           SR  R0,R0
           MVI   E08SCRA+2,X'40'  RESET SCRATCH (LAST ALWAYS?)
           IFNULL DDLABTYP,E08NALWA
* ALWAYS
           MVI   E08SCRA+2,X'50'  OVER-RIDE PURGE DATE
E08NALWA DS    0H
           SCRATCH E08SCRA
           LTR R15,R15
           BNZ E08WHAT
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' SCRATCHED FROM ',#VOL                          74365
E08MAGTP DS    0H
           CLI ISINPDQ,C' '    WELL,IS IT?
           BNE E08INPDQ
           JOLRETN
E08INPDQ DS    0H
* THE NAME IN THE PDQ MUST BE SET TO OLD,DELETED SO THAT OS
*   WON'T BOTHER DELETING  THE THING AGAIN AT JOB TERMINATION
         CLI  VS,C'2'   VS2
         BE    E08MVS5
           MVC CALLAREA,PDQABLK
           MVI CALLAREA+3,0
           GETJOBQ PDQDECB,CALLAREA
E08MVS5  DS    0H
           LH R1,PDQDSNNO
            CLI  VS,C'2'
           BNE  E08NMVS4
           MH   R1,=AL2(PDILEN)
           LA   R14,PDITERM1(R1)
            MVI   0(R14),0           OLD,DELETE FLAGS              DASD
            SH    R14,=H'44'         BACKUP TO DSNAME              DASD
            MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ      DASD
            PUTJOBQ PDQDECB2  OP PDI BLOCK
            JOLRETN  RC=0
E08NMVS4  DS    0H
           MH R1,=AL2(PDQBLKLN)
           LA R14,PDQTERM(R1)
           OI 0(R14),B'10100000'  OLD,DELETE FLAGS
           PUTJOBQ PDQDECB
           JOLRETN
           SPACE 3
E08WHAT  DS    0H
* SCRATCH FAILED
* WHY ??
         CH   R15,=H'8'  DID WE BUILD A BAD CAMLIST ENTRY ??       DASD
         BH   E08BADCM   BETTER TELL SOMEONE ABOUT THIS            DASD
           SPACE 2
* IF FAILURE OCCURRED BECAUSE THE VOLUMES WEREN'T MOUNTED,
*    I KNOW THAT THERE IS A JCL STEP BELOW WHICH WILL MOUNT
*    THE VOLUMES AND PERFORM THE SCRATCHES,SO LETS GO.
           LA  R1,E08SEQ+1+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           LA  R1,E08SEQ+1+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           LA  R1,E08SEQ+1+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           LA  R1,E08SEQ+1+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           LA  R1,E08SEQ+1+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           B   E08RETNF
E08ERR   DS    0H
* CALLED BECAUSE WE HAVE TO ANALYSE THE REASON WHY A SCRATCH FAILED
           CLI 0(R1),0         IS THIS ONE A ZERO ?
           BE  0(R2)           YES,SO JUST RETURN TO CALLER.
           CLI 0(R1),5         UNABLE TO MOUNT COS NO DEVICE ?
           BE  E08NPACK        LET OS DO SCRATCH (STEP DOWN TO RIGHDASD
*                              STEP)
           CLI 0(R1),6         DIDN'T OPERATOR WANT TO MOUNT VOL ?
           BE  E08NPACK                                            DASD
           CLI 0(R1),1         NOT IN VTOC ?
         BNE   E08TRET2                                     FIX-X 76200
           JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',                 *
               #DSN,''' NOT FOUND IN VOLUME :-SCRATCH IGNORED'
           BR  R2
E08TRET2 CLI   0(R1),2                                      FIX-X 76200
         BNE   E08TRET3                                     FIX-X 76200
         JOLERR 410,'DSID ''',DDDSID,''' DSNAME ''',#DSN,   FIX-X 76200*
               ''' IS A VSAM DATA SPACE OR ',               FIX-X 76200*
               'INCORRECT PASSWORD SUPPLIED'                FIX-X 76200
         BR    R2                                           FIX-X 76200
E08TRET3   CLI 0(R1),3         RETENTION PERIOD ?
           BNE E08TRET4
           JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' NOT SCRATCHED,CONTAINS RETENTION DATE'
         BR    R2                                           FIX-X 76200
E08TRET4   CLI 0(R1),4         I/O ERROR ?
         BNE   E08TRET7                                     FIX-X 76200
           JOLERR 406,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' NOT SCRATCHED,I/O ERROR ON VTOC'
         BR    R2                                           FIX-X 76200
E08TRET7 CLI   0(R1),7                                      FIX-X 76200
         BNE   E08ERRXY                                     FIX-X 76200
         JOLERR 411,'DSID ''',DDDSID,''' DSNAME ''',#DSN,   FIX-X 76200*
               ''' IS BEING USED BY SOMEONE ELSE:-'         FIX-X 76200*
               'TRY AGAIN LATER'                            FIX-X 76200
         BR    R2                                           FIX-X 76200
E08ERRXY SR    R2,R2                                        FIX-X 76200
         IC    R2,0(R1)                                     FIX-X 76200
         JOLERR 507,'SCRATCH RETURNED INVALID CODE;SEE REG 2'   X 76200
E08BADCM DS    0H                                                  DASD
         JOLERR 213,'DSID ''',DDDSID,'''DSNAME ''',#DSN,               *
               ''' ON VOLS ',#VOL,' NOT SCRATCHED',                    *
               'CATALOGUE INVALID DEVICE UNIT=',                       *
               DDUNIT                                              DASD
          B   E08LETOS                                             DASD
E08NPACK  DS    0H                                                 DASD
         JOLERR 214,'DSID ''',DDDSID,'''DSNAME ''',#DSN,               *
               ''' ON VOLS ',#VOL,' NOT SCRATCHED',                    *
               'PACK NOT MOUNTED, UNIT=',                              *
               DDUNIT                                              DASD
           SPACE 3
E08LETOS  DS    0H
* IT HAS BEEN DECIDED THAT,FOR NO DOUBT AN EXTREMELY GOOD REASON,
*    WE MUST STEP DOWN TO THE STEP THAT SHOULD BE THERE TO
*    HAVE THE VOLUME MOUNTED SO THE SCRATCH MAY BE PERFORMED.
           JOLRETN RC=4
E08RETNF  DS    0H JOLRETN RC=16                                   DASD
*******************************************************            DASD
*    PDQ RECORDS NOT DELETED IF SCRATCH FAILS         *            DASD
*******************************************************            DASD
* WHEN A PROGRAMMER SAYS TO DELETE A DATASET BEFORE   *            DASD
* THE FIRST STEP OF THE JOB,  JOL WILL GENERATE A STEP*            DASD
* WITH A DDCARD REFERENCE TO THE DATASET TO BE DELETED*            DASD
* IF THE DATASET IS CATALOGED BUT NOT ON THE PACK THE *            DASD
* THIS SCRATCH ROUTINE WILL RETURN WITHOUT REMOVING   *            DASD
* THE PDQ RECORD.     ANY REFERENCE TO THIS DATASET   *            DASD
* LATER ON WILL ADD NEW PDQ RECORDS BUT WILL POINT    *            DASD
* TO THE FIRST ENTRY RESULTING IN ABEND=213           *            DASD
*******************************************************            DASD
         CLI   ISINPDQ,C' '    IS BAD GUY IN PDQ                   DASD
         BE    E08NFRPQ        NOPE  BETTER GO NOW                 DASD
* THE NAME IN THE PDQ MUST BE SET TO OLD,DELETED SO THAT OS        DASD
*   WON'T BOTHER DELETING  THE THING AGAIN AT JOB TERMINATION      DASD
           MVC CALLAREA,SIOT                                       DASD
           MVI CALLAREA+3,0                                        DASD
           GETJOBQ SIOTDECB,CALLAREA                               DASD
           OI  SCTSDISP,B'00000100' TURN ON DELETE BIT             DASD
           OI  SIOTALTD,B'00000100' TURN ON DELETE BIT IN CONDITIONDASD
*                                   DISPOSITION PROCESSING         DASD
           PUTJOBQ SIOTDECB                                        DASD
         CLI   VS,C'2'   VS2                                       DASD
         BE    E08MVS6                                             DASD
         MVC   CALLAREA,PDQABLK                                    DASD
         MVI   CALLAREA+3,0                                        DASD
         GETJOBQ PDQDECB,CALLAREA                                  DASD
E08MVS6  DS    0H                                                  DASD
         LH    R1,PDQDSNNO                                         DASD
         CLI   VS,C'2'                                             DASD
         BNE   E08NMVS5                                            DASD
         MH    R1,=AL2(PDILEN)                                     DASD
         LA    R14,PDITERM1(R1)                                    DASD
         MVI   0(R14),0           OLD,DELETE FLAGS                 DASD
         SH    R14,=H'44'         BACKUP TO DSNAME                 DASD
         MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ         DASD
         PUTJOBQ PDQDECB2  OP PDI BLOCK                            DASD
         B     E08NFRPQ                                            DASD
E08NMVS5 DS    0H                                                  DASD
         MH    R1,=AL2(PDQBLKLN)                                   DASD
         LA    R14,PDQTERM(R1)                                     DASD
         MVI   0(R14),B'10100000'  OLD,DELETE FLAGS                DASD
         PUTJOBQ PDQDECB                                           DASD
E08NFRPQ JOLRETN RC=16                                             DASD
****************************************************************   DASD
* IF DOING A DELETE CHECK THE CATALOGUE TO SEE IF THE DATASET  *   DASD
* IS CATALOGUED AND IF SO REUTRN TO THE SCRATCH                *   DASD
*                                                              *   DASD
* THE FOLLOWING MESSSAGE IS ONLY ISSUED WHEN THE DATASET       *   DASD
* IS NOT ON THE PDQ                                            *   DASD
*                                                              *   DASD
* HERE AT STANDARD OIL A MODIFICATION EXISTS WHERE IF THE      *   DASD
* SCRATCH FAILED THE UNCATLG WILL STILL RUNS                   *   DASD
****************************************************************   DASD
E08NOPDQ NOP   E08PDQMG    TURN THIS ON TO SHUT OFF THIS CODE      DASD
         CLI   ICOMMAND,C'D'     DELETE STMT ?                     DASD
         BNE   E08PDQMG          NO---ISSUE THE MESSAGE            DASD
         CALL  UJELOCAT          CALL LOCATE MODULE                DASD
         LTR   R15,R15           ARE WE IN LUCK ?                  DASD
         BNZ   E08PDQMG          NOPE NOT TODAY                    DASD
         MVC   JFCBDSNM,DSNAME  COPY DATA SET NAME TO JFCB         DASD
         L     R15,=V(E05VOLS)  POINT TO CAMLST                    DASD
         USING VOLINFO,R15       GET SOME ADDDRESSILITY            DASD
         MVC   JFCBNVOL,NOVOLS+1 # VOLUMES                         DASD
         MVC   SCTUTYPE,CATDEV   UNIT TYPE                         DASD
         LH    R1,NOVOLS         # VOLUMES AGAIN                   DASD
         CH    R1,=H'5'          MORE THAN WE CAN HANDLE ?         DASD
         BNH   *+8               NO                                DASD
         LA    R1,5              ADJUST # VOLUMES FOR US           DASD
         LA    R14,JFCBVOLS      MOVE TO HERE                      DASD
         MVI   JFCBVOLS,C' '                                       DASD
         MVC   JFCBVOLS+1(L'JFCBVOLS-1),JFCBVOLS   CLEAR JFCB      DASD
E08LPVOL DS    0H                                                  DASD
         MVC   0(6,R14),CATVOL   MOVE VOL SER                      DASD
         LA    R15,12(R15)       POINT TO NEW CAMLST ENTRY         DASD
         LA    R14,6(R14)        UP TO NEXTBUCKET IN JFCB          DASD
         BCT   R1,E08LPVOL       GET ALL OF THE VOLUMES            DASD
         B     E08NOSTP          LETS DO THE SCRATCH AGAIN         DASD
         DROP  R15                                                 DASD
E08PDQMG   JOLERR 203,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' NOT YET CREATED:-SCRATCH IGNORED'
           B  E08RETNF
           SPACE 3
E08SCRA    CAMLST SCRATCH,JFCBDSNM,,E08NOVOL
E08NOVOL   DS  H
E08UNIT    DS  CL4
E08VOL     DS  CL6
E08SEQ     DS  H
         DS  ((L'JFCBVOLS/6)*12)C
E08SCREN DS    0H
         AGO   .NX8300
.X8300   ANOP
E08FRST  DS    0H
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E08NOFCT              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY
         SPACE
         USING FCT,R4
E08NXFCT DS    0H
         CLC   FCTFLN,DSN            Q... IS THIS IT?
         BNE   E08NOTIT              A... NO
         BAL   R2,E08FFCT            GO AND FIX THE BITS
         MVC   DDDDNAME,FCTACSN      DDNAME TO MY AREA
         MVI   DDDISP+1,C'L'         LAST USE
         CALL  UJE14FRE              FREE THE FILE
         B     E08FRST               GO AND START AGAIN
E08NOTIT DS    0H
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E08NXFCT              BR IF THERE IS ONE
E08NOFCT DS    0H
         LTR   R2,R2
         BZ    E08NOKPT
         JOLERR 003,'DSID ',DDDSID,' ',#DSN,' SCRATCHED'
E08RETN0 DS    0H
         B     RETN0
E08NOKPT DS    0H   NO ENTRIES MARKED
         SPACE 3
* IT SEEMS WE NEED TO ALLOCATE THE DATASET
         SPACE 1
         TM    DDUNITYP,X'80'  IF IT'S A TAPE, FORGET IT
         BZ    E08NOSCR
         SPACE 1
         MVC   DDDDNAME,=C'JOL00000' HOPE NOBODY ELSE USES THIS
         OI    E21FLAG,E21CONT       TELL ALLOC NOT TO ABEND US
         CALL  UJE21ALL              ALLOC THE DATASET
         LTR   R15,R15
         BZ    E08ALLOK             IT WENT WELL
         JOLERR 301,'DATASET ',#DSN,' IS NOT SCRATCHED'
         B     E08NOSCR
E08ALLOK DS    0H
         B     E08FRST              NOW IT'S ALLOCATED, GO BACK
*                                    AND FIDDLE THE FCT
E08NOSCR DS    0H
         B     RETN0
         SPACE 3
E08FFCT  DS    0H    FOUND AN FCT TO "FIX"
         $TELL (R4)
         MODESET  KEY=ZERO
         OI    FCTSTS1,FCTS1DLT            TURN DELETE ON
         OI    FCTFDST1,X'FF'-FCTFSNFD      "    "    "
         NI    FCTFLG2,X'FF'-FCTF2KEP      TURN KEEP OFF
*        OI    FCTFLG3,FCTF3UCT+FCTF3CTR   UNCAT + CAT REF
         NI    FCTFLG3,X'FF'-FCTF3CAT      SINCE WE ARE SCRATCHING,
*                                           DON'T CATALOGUE IT
         SPACE 2
*  WELL, THAT SHOULD BE ALL
         SPACE
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY
         BR    R2             GO AND SEE IF THERE AREA ANY MORE
         SPACE 3
.NX8300  ANOP
         SPACE 3
         DC    80S(*)
         TITLE 'UJE09DEL:DELETE DATA SET'
         AIF   (&X8).X8320
JSCBOFFS   EQU 180
CVT        EQU 16
JCTTTRA    EQU 261
.X8320   ANOP
         JOLSAVE CSECT=UJE09DEL
         CALL  UJE08SCR
         LTR   R15,R15
         BZ    E09UNCAT  O.K. GUYS THE SCRATCH WORKED KEEP GOING   DASD
* STANDARD OIL REQUESTED THIS MOD                                  DASD
* THEY WANTED THE UNCATLG TO ALWAYS RUN EVEN IF THE SCRATCH FAILED DASD
         CLI   DDCATLGS,104   GDGALL ?                             DASD
         BNE   E09UNCAT   LET THE UNCATLG RUN THEN                 DASD
         JOLRETN RC=(15)
E09UNCAT DS    0H                                                 76200
*        CLI   #DSN+2,C'&&'   TEMPORARY DATA SET ?                76200
*        BE    E09RETN0                                           76200
         CLI   DDTYPE,DDREALDS    Q... TEMPORARY DATASET?
         BL    E09RETN0           A... YES
         CALL  UJE06UNC                                           76200
E09RETN0 B     RETN0                                              76200
         TITLE 'UJE10TYP:TYPE A MESSAGE'
         JOLSAVE CSECT=UJE10TYP
* THIS ROUTINE DOES THE TYPING
           L   R7,=A(#TKN)
           USING #TKN,R7
           JOLERR 301,#TKN
           JOLRETN
          TITLE 'UJE11DIS:DISPLAY A MESSAGE'
           JOLSAVE CSECT=UJE11DIS
           L   R7,=A(#TKN)
           USING #TKN,R7
* DISPLAY HANDLER
           JOLERR 101,#TKN
           JOLRETN
          TITLE 'UJE12SIG:SIGNAL AN ERROR MESSAGE'
           JOLSAVE CSECT=UJE12SIG
* SIGNAL ERROR ROUTINE
           L   R7,=A(#TKN)
           USING #TKN,R7
           SR R2,R2
           NI TKN,X'0F'        DROP 'F' FROM SEVERITY NUMBER
           IC R2,TKN           AND SAVE SEVERITY NUMBER
           GETTKN 3            GET MESSAGE TEXT
           CH R2,=H'3'
           BL  SIGONLY                         ONLY WARNINGS
           BE  SIGWTOR                         WTOR
* HERE A TERMINAL ERROR TO BE RASIED
           JOLERR 407,'TERMINAL ERROR ',#TKN,' SIGNALLED'
SIG&RSVDRC MVC TASKRETN,=F'&RSVDRC'
           MVI  GOBACK,C'1'
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS
SIGTERM    JOLERR 406,'JOB TERMINATING'
           JOLRETN RC=&RSVDRC
           SPACE 3
SIGONLY  DS    0H
           CH R2,=H'2'
           BL SIGERR1
         JOLERR 202,'SEVERE ERROR ',#TKN,'SIGNALLED'        FIX-X 76200
           B  SIGRETN
SIGERR1  JOLERR 101,'MINOR ERROR ',#TKN,' SIGNALLED'        FIX-X 76200
SIGRETN    JOLRETN
           SPACE 3
SIGWTOR  DS    0H
*          JOLERR 403,'MAJOR ERROR ',#TKN,' SIGNALLED'
         CLC   #TKN,=H'70'     IS MESSAGE TOO LONG
         BNH   E12WTOR1        NO
         MVC   #TKN,=H'70'     YES SO ADJUST LENGTH
E12WTOR1 EQU   *               JOLERR WONT ACCEPT A LABEL??
         JOLERR 403,#TKN,': REPLY GO OR STOP '
*  JOLERR SETS JOBNAME ETC UP IN #S23LREC
         LA    R1,#S23LREC-8
         MVI   0(R1),4         LENGTH OF REPLY
         MVC   1(3,R1),=AL3(SIGREPLY) ADDRESS OF REPLY AREA
         MVC   4(4,R1),=A(SIGECB) ADDR OF ECB TO WAIT ON
SIGRETRY   CLEAR SIGREPLY
           XC  SIGECB,SIGECB
*ERE1204  DS    0H
*     WTOR 'JOLE12-04 REPLY GO OR STOP',SIGREPLY,4,SIGECB,DESC=(2)
         LA    R1,#S23LREC-8
         SVC   35                  ISSUE WTOR
           WAIT ECB=SIGECB
         OC    SIGREPLY(4),=C'    '     TO UP CASE
           CLC =C'GO  ',SIGREPLY
           BE  SIGCONT
           CLC =C'STOP',SIGREPLY
           BE  SIGTERM
           B   SIGRETRY
           SPACE 3
SIGECB     DS  F
SIGREPLY   DS CL4
           SPACE 3
SIGCONT  DS    0H
         JOLERR 405,'JOB CONTINUING'
         B   SIGRETN
         TITLE 'UJE13STP:STOP HANDLER'
         JOLSAVE CSECT=UJE13STP
* STOP EXECUTER
         L     R7,=A(#TKN)
         USING #TKN,R7
         JOLERR 401,'STOP ''',#TKN,''' EXECUTED'
STPRETN  MVI   GOBACK,C'1'
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS
         MVC   TASKRETN,=F'&RSVDRC'
         JOLRETN RC=&RSVDRC
         TITLE 'UJE14FRE:FREE (MARK NOT IN USE) DATASETS'
         JOLSAVE CSECT=UJE14FRE
         CLI   DDTYPE,DDPUNCH   Q... SYSIN, SYSOUT OF SOME KIND?
         BNH   E14FREE          A... YES, FREE IT NOW
         TM    DDUNITYP,X'80'  IF IT'S A TAPE, FREE FILE ALWAYS
         BO    E14TDISP
* PROPOGATE THE TAPE VOLUME NOW, AS IT MAY BE USED LATER
*  IN VOLUME REFERENECES OR CATALOGUE STATEMENTS.
         CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'
         B     E14FREE                    FREE IT NOW
*        CLI   DDDISP+1,C'L'  LAST USE?
E14TDISP CLI   DDDISP+1,C'P'  LAST USE?
         BE    E14DISUS        NO, JUST MAKE MARKS
E14FREE  DS    0H
         XC    CALLAREA(12),CALLAREA   CLEAR PARAMETER AREA
         MVI   CALLAREA,C'F'   INDICATE FREEFILE
         MVI   CALLAREA+1,12   TABLE SIZE
         MVC   CALLAREA+4(8),DDDDNAME  DDNAME TO THE AREA
         FREEFL MF=(E,CALLAREA)
         LTR   R1,R15
         BZ    E14FREED
         CVD   R15,DBL
         CALL  UJS46FER
         MVC   TASKSSI(4),=X'40202120'
         ED    TASKSSI,DBL+6
         JOLERR 102,'DSID ',DDDSID,''',DDNAME ',                       .
               DDDDNAME,' NOT UNALLOCATED DUE TO RETURN CODE ',        .
               TASKSSI
         B     E14RETN
E14FREED DS    0H
         JOLERR 003,'DSID ',DDDSID,' DDNAME ',                         .
               DDDDNAME,' UNALLOCATED'
E14RETN  DS    0H
         B     RETN0
E14DISUS DS    0H    MARK DATASET NOT IN USE
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E14NOFCT              EXIT IF NONE ?!! & SSSSSSSSS
         CLC   =CL8' ',DDDDNAME      Q... CONCATENATED FILE?
         BE    E14NXFCT              A... YES
         MVC   SAVEDD,DDDDNAME       COPY THE DDNAME
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY
         SPACE
         USING FCT,R4
E14NXFCT DS    0H
         CLC   FCTACSN,SAVEDD        Q... IS THIS IT?
         BE    E14FFCT               A... YES, GO AND FIX IT
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E14NXFCT              BR IF THERE IS ONE
E14NOFCT JOLERR 104,                                                   .
               'DSID ',DDDSID,                                         .
               ' DDNAME ',DDDDNAME,                                    .
               ' NOT MARKED NOT IN USE: NO FCT FOUND'
         B     RETN0
E14FFCT  DS    0H    FOUND AN FCT TO "FIX"
         AP    DDCTR,=P'1'          ADD TO MY COUNTER
         $TELL (R4)
         MODESET  KEY=ZERO
*        NI    FCTACSN,X'BF'        MAKE MY MARK FOR "NOT IN USE"
         MVC   FCTACSN(4),=C'$JOL'  MAKE MY MARK FOR "NOT IN USE"
         UNPK  FCTACSN+4(4),DDCTR
         SPACE
* WHILE I AM HERE, LET'S HAVE A LOOK AT SOME OTHER BITS
         SPACE
         LR    R2,R4                 SAVE THIS ADDRESS
         TM    FCTFLG6,FCTF6CF       Q... CONCATENATED?
         BZ    E14NOCAT              A... NO
         NI    FCTFLG6,X'FF'-FCTF6CF TURN THAT OFF
E14NXTCF DS    0H
         L     R1,FCTCFNO            ADDRESS NEXT IN THIS CHAIN
         XC    FCTCFNO(4),FCTCFNO    CLEAR THIS FIELD
         LA    R4,0(,R1)             CLEAR THE HIGH ORDER BYTE
         LTR   R4,R4                 Q... ANYTHING THERE?
         BZ    E14NOCAT              A... NO
         CLC   FCTACSN,DDDDNAME      CHECK THIS, JUST IN CASE
         BNE   E14NOCAT              UM, ER, I'LL SEE YOU LATER
         NI    FCTFLG6,X'FF'-FCTF6CF TURN OFF CONCAT FLAG
         B     E14NXTCF              LET'S PLAY WITH THE NEXT ONE TOO
E14NOCAT DS    0H
         LR    R4,R2                 ADDRESS OF THE ORIGINAL
         SPACE 2
*  WELL, THAT SHOULD BE ALL
         SPACE
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY
         SPACE 3
         JOLERR 005,                                                   .
               'DSID ',DDDSID,                                         .
               ' DDNAME ',DDDDNAME,                                    .
               ' MARKED NOT IN USE'
         B     RETN0
         TITLE 'UJ20RUN:PERFORM A RUN INSTRUCTION'
         JOLSAVE CSECT=UJE20RUN
* HANDLE RUN STATEMENT
           MVI ISRUN,C'1'
           MVC RUNNAME,PGM
           MVC TASKNAME,PGM
           MVC TASKLABL,PGMLABEL
* NOW LETS SEE IF WE EXECUTE IN THIS STEP,OR IN THE NEXT,
*     AND IF A PARM IS USED IN THIS RUN
* NOW BEFORE XCTL TO THE USER PROGRAM,WE MUST DETERMINE WHETHER
*     OR NOT THERE ARE ANY DD-CARDS REFERRING TO THIS PROGRAM
*     OR IF THERE IS A PARM FIELD OR NOT.
* IF THERE ARE NO DD-CARDS,WE MAY XCTL NOW,OTHERWISE WE
*     MUST CHECK THAT THIS IS THE CORRECT OS STEP OR NOT
*          L  R2,TTR$INST      SAVE TTR OF NEXT INSTRUCTION
*                              BECAUSE IF WE DECIDE NOT TO DO
*                              THE USERS PROGRAM HERE WE WILL
*                              HAVE TO RESET THE TTR SO THE
*                              NEXT OS STEP THAT IS EXECUTED
*                              WILL START AT THE CORRECT STEP
*          CLC PGMNODDS,=A(0)    ARE THERE ANY DDCARDS?           75128
*        BNE   E20AREDD        YES
         CALL  UJE50RD        READ NEXT STATEMENT
         LTR   R15,R15        EOF PERHAPS ?
         BZ    E20TPARM
* NO DD'S  AND NO PARM,RETURN A 0,SO WE WILL XCTL TO
*     PROBLEM PROGRAM.
         NOTE  INSTRUCT
         ST    R1,TTR$INST
         MVI   TTR$INST+3,0    SO WE RE-READ THE LAST STATEMENT
E20RETN0 DS    0H
         BLDL  0,RUNBLDL
         B     RUNBLD(R15)
RUNBLD   B     RUNBLD0
         B     RUNBLD4
         B     RUNBLD8
RUNBLD4  DS    0H
*        JOLERR 001,'PROGRAM ''',RUNNAME,''' ABSENT:- TRYING LPALIB'
         MVC   TASKSSI,=X'00000000'         CLEAR THE SSI INFO
         B     E20RETN
RUNBLD8  JOLERR 402,'PERM I/O ERR FINDING ',RUNNAME
E20806   DS    0H
         MVI   ISRUN,C' '
         JOLRETN RC=&RSVDRC
         SPACE 3
RUNBLD0  SR    R8,R8
         IC    R8,RUNC1
         LA    R9,X'1F'
         NR    R8,R9
         ALR   R8,R8
         LA    R9,RUNUSDTA-4
         AR    R9,R8
         MVC   TASKSSI,0(R9)
         AGO   .NTIOT
         B     E20NTIOT     *************************             75002
*  NOW SET PROGRAM NAME UP IN TIOT.
         LA    R1,TASKNAME       LOAD THE ADRESS OF PGM NAME      75002
         ST    R1,INST           STORE IN WORK AREA               75002
         MVI   INST,8       SET LENGTH OF PARM TO 8               75002
         LA    R1,INST      LOAD A(PARM)                          75002
         L     R0,ATIOT    -> TIOT                                75002
         AH    R0,=H'16'    ->PGM NAME SPOT                       75002
         SVC   255          POP PGM NAME IN TIOT                  75002
E20NTIOT DS    0H                                                 75002
.NTIOT   ANOP
E20RETN  JOLRETN RC=0
E20TPARM DS    0H
         NOTE  INSTRUCT      SAVE THIS ADDRESS, TO REPROCESS THE DDS
         ST    R1,TTR$INST
         MVI   TTR$INST+3,0       CONTINUE WITH THIS RECORD IF NOT PARM
         CLC   =C'PARM ',ICOMMAND
         BNE   E20TDD            NOT PARM, TRY DD
         MVI   TTR$INST+3,1       CONTINUE WITH THE NEXT RECORD
* FIX UP USER'S PARM FIELD
         L     R1,ATASKPRM
         L    R15,=A(#TKNSTRG)
         USING  #TKNSTRG,R15
         MVC   0(256,R1),#TKNSTRG
         CLC   =X'00027D7D',0(R1)  FIX FOR BUG IN COMPILER
         BNE   E20T10
         XC    0(6,R1),0(R1)
E20T10   DS    0H
         DROP  R15
         SPACE  3
E20AREDD DS    0H
* THE USER'S PROGRAM HAS DD-CARDS AND WE MUST DILIGENTLY
         AIF   (&X8).X8340
*     CHECK WHETHER OR NOT WE ARE IN THE CORRECT OS JOB-STEP
*     (I.E DO WE HAVE THE DD-CARDS NECESSARY FOR THIS PROGRAM)
           CLC  SCTSNAME(8),PGMSTEP RIGHT OS JOB STEP ?           75311
           BE  E20TPM2         TEST IF THIS HAS A PARM NOW
           BH  E20TOOHI        ERROR,GONE TOO FAR
* RIGHTO,MUST CHANGE OS STEPS OLD BOY.
E20CHNG    ST R2,TTR$INST
           MVI TTR$INST+3,0    RESET 'Z' IN TTR
           B  *+4
           B  *+4
           B  *+4
           JOLRETN RC=4        TELL US TO GO TO ANOTHER OS STEP
E20TPM2  DS    0H
           CALL UJE50RD
           LTR R15,R15
           BNZ E20RETN0
           B   E20TPARM
E20TOOHI CLC   =C'$$',PGMSTEP                                     75311
         B     E20CHNG  **********************LET MAIN FIX IT *** 75311
         BNE   E20CHNG                                            75311
         JOLERR 503,'CANNOT FIND STEP FOR ',PGMESTMT
         AGO   .NX8340
.X8340   ANOP
*   ALLOCATE THEM
         SPACE
E20READD DS    0H
         CALL  UJE50RD
         LTR   R15,R15
         BNZ   E20RETN0
E20TDD   DS    0H           TEST FOR DD
         CLI   DDDD1,C'D'
         BNE   E20NOTDD
         CALL  UJE21ALL     ALLOCATE THE DD
         B     E20READD
E20NOTDD DS    0H
         POINT INSTRUCT,TTR$INST
         B     E20RETN0        TO XCTL
         SPACE 3
.NX8340  ANOP
         DC    80S(*)
         TITLE 'UJE21ALL: HANDLE DATASET ALLOCATION'
         JOLSAVE CSECT=UJE21ALL
         FIX   'IF DATASET IS TO BE RE-WRITTEN, CALL DELETE NEAR HERE'
*            AND THEN ALLOCATE AS A NEW DATASET
         LA    R0,WORK
         LA    R1,L'WORK
         SLR   R15,R15
         MVCL  R0,R14
         CLC   =CL8' ',DDDDNAME      Q... CONCATENATED FILE?
         BE    E21NOTCT              A... NO
         MVC   SAVEDD,DDDDNAME       COPY THE DDNAME
E21NOTCT DS    0H
         CLC   =C'PRGLIB  ',DDDDNAME Q... PRGLIB?
         BE    E21MVDDN              A... YES
         CLC   =C'STEPLIB ',DDDDNAME Q... STEPLIB?
         BNE   E21X8A                A... NO
E21MVDDN MVC   STEPLBDD,DDDDNAME      MOVE IN THE DDNAME
E21X8A   DS    0H
         CLI   DDTYPE,DDSYSIN      Q... SYSIN DATASET?
         BNE   E21NSSIN            A.. NO
         MVC   DDMBR,DDDSNAME+2    ESTABLISH MEMBER NAME
         CLEAR DDDSNAME,DSN
         MVC   DDDSNAME(L'FCTFLN),SYSINDSN   COPY DSN
         MVC   #DSN(28),#SYSINDS
         CLEAR DDVOLUME
         MVC   DDVOLUME(6),SYSINVOL
         MVI   DDUSE,B'00001000'   DISP=(SHR,KEEP)
         MVI   DDTYPE,DDMEMSPC
         MVI   DDUNITYP,X'80'         TELL ALLOC THAT IT IS A DISK.
         B     E21X8A4
E21NSSIN DS    0H
         SPACE 2
*  BEFORE GOING ANY FURTHER, WHY NOT HAVE A LOOK AROUND TO SEE
*   WHAT IS ALREADY AVAILABLE?
* ****** UNLESS THIS IS A CONCATENATED FILE, IN WHICH CASE WE SHALL
*        DO A PROPER ALLOCATION      CVC
         CLC   =CL8' ',DDDDNAME     CONCATENATED ?
         BE    E21NOFCT             YES, GO THROUGH NORMAL ALLOC
         SPACE 2
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E21NOFCT              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY
         SPACE
         USING FCT,R4
E21NXFCT DS    0H
         CLC   FCTFLN,DDDSNAME       Q... IS THIS IT?
         BNE   E21NTDS               A... NO, GO AND TRY THE NEXT
         CLC   =C'$JOL',FCTACSN      Q... NOT IN USE?
         BNE   E21NTDS               A... NO
         SPACE
* NOT IN USE, BUT ONLY USE IT IF:
*     A)   ALLOCATION REQUEST INCLUDES MEMBER AND FCT HAS MEMBER
*  OR
*     B)   NEITHER HAS MEMBER SPECIFIED
         SPACE
         TM    FCTFLG1,FCTF1MEB     Q... MEMBER IN FCT?
         BO    E21MEB1              A... YES, GO AND CHECK DDDET
         CLI   DDMBR,C' '           Q... MEMBER HERE?
         BE    E21FFCT              A... NO, NEITHER HAS
         B     E21NTDS              CONTINUE THE SEARCH
         SPACE
E21MEB1  DS    0H                   MEMBER IN FCT, CHECK DDDET
         CLI   DDMBR,C' '           Q... MEMBER HERE?
         BNE   E21FFCT              A... YES, THEY BOTH HAVE
E21NTDS  DS    0H
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E21NXFCT              GO AND TEST THE NEXT ONE
         B     E21NOFCT              END OF CHAIN, AND NOT FOUND
E21FFCT  DS    0H    FOUND AN FCT TO "FIX"
         $TELL (R4)
         MODESET  KEY=ZERO
         TM    FCTFLG1,FCTF1MEB     Q... MEMBER IN FCT?
         BZ    E21NMEB              A... NO, GO AND FIX THE DDNAME
         L     R15,FCTFFBT          ADDRESS FBT
         MVC   028(8,R15),DDMBR     COPY THE MEMBER NAME
E21NMEB  DS    0H
 FIX 'ONE SHOULD ALSO FIX LRECL,BLKSIZE ETC HERE'
         MVC   FCTACSN,DDDDNAME     CHANGE THE DDNAME
         SPACE 2
*  WELL, THAT SHOULD BE ALL
         SPACE
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY
         MVC   #DSN,=H'26'
         MVC   #VOL,=H'12'
         MVC   VOL(12),DDVOLUME
         JOLERR 005,                                                   .
               'DSID ',DDDSID,                                         .
               ' DDN ',DDDDNAME,' DSN ',#DSN,                          .
               ' VOL ',#VOL,' ALLOC '
         SPACE 3
         B     E21RETN
         SPACE 5
E21NOFCT DS    0H
E21X8A4  DS    0H
         SPACE 2
*  NOW CHECK FOR VOLREF
         SPACE
         CLI   DDVOLUME,C'*'         VOLREF USED?
         BNE   E21X8A5             NO
         BAL   R14,E21VREF         GO AND FIX VOLREF
E21X8A5  DS    0H
         CALL UJE03X8A,(DDOSVB,CALLARE2),VL,MF=(E,CALLAREA)
         ST    R15,TASKRETN
         LTR   R1,R15
         BZ    E21DDOK          ALLOCATED PROPERLY
         CH    R15,=H'172'      FAIL BECAUSE OF NO DEVICE AVAIL?
         BNE   U21CVCAF         NO, GIVE FAILURE MESSAGE
         XC    ALLOCECB,ALLOCECB
   WTOR  'WHEN A TAPE DRIVE IS AVAILABLE, PLEASE REPLY GO',ALLOCREP,   *
               2,ALLOCECB
         WAIT  ECB=ALLOCECB
         B     E21X8A5          TRY AGAIN
U21CVCAF CVD   R15,DBL
         MVC   TASKSSI,=X'40202120'
         ED    TASKSSI,DBL+6
         JOLERR 406,'DSID ',DDDSID,', DDNAME ',                        .
               DDDDNAME,', DS ',#DSN,' FAILED WITH RETURN CODE',       .
               TASKSSI
         CLEAR DPDATA
         LA    R0,DPBLKL
         SLL   R0,16
         ST    R0,DPBLOCK
         LA    R0,DPLINEL
         SLL   R0,16
         ST    R0,DPLINE
         L     R2,CALLARE2     ADDRESS OF AREA TO DUMP
E21LP0   DS    0H
         ST    R2,CALLAREA
         UNPK  DBL(9),CALLAREA(5)
         TR    DBL,HEX
         MVC   DPADDR,DBL+2
         MVC   DPCHARS,0(R2)   COPY DATA IN CHARACTERS
         TR    DPCHARS,TRTAB   REMOVE SOME HARD-TO-PRINT DATA
         LA    R14,DPHEX       ADDRESS FOR HEX DATA
         LA    R1,2
E21LP1   DS    0H
         LA    R0,4            4 SEGMENTS
E21LP2   DS    0H
         UNPK  DBL(9),0(5,R2)  CONVERT SOME TO HEX
         TR    DBL,HEX
         MVC   0(8,R14),DBL    INTO THE PRINT LINE
         LA    R14,9(,R14)     NEXT FOR OUTPUT
         LA    R2,4(,R2)       NEXT FOR INPUT
         BCT   R0,E21LP2
         LA    R14,1(,R14)    AN EXTRA SKIP IN PAGE CENTRE
         BCT   R1,E21LP1
         L     R1,=A(S23DECB)
         WRITE (1),SF,,DPBLOCK,MF=E
         L     R1,=A(S23DECB)
         CHECK (1)
         C     R2,CALLARE2+4   Q... ANY MORE?
         BNH   E21LP0          A... YES
         L     R1,TASKRETN
         CALL  UJS45AER
         TM    E21FLAG,E21CONT
         BO    E21RETN
         JOLERR 500,'RUN TERMINATED DUE TO ALLOCATION ERROR'
         ABEND 2 ,,STEP
E21DDOK  DS    0H
         CLI   DDTYPE,DDSYSOUT    IS IT A SYSOUT FILE
         BE    E21SYSO            YES SO ADJUST MSG
         CLC   =CL6' ',DDVOLUME   IS THERE A VOLSER?
         BE    E21PIV             NO SO PUT IN VOLUME
E21DDOK2 MVC   VOL(12),DDVOLUME
E21DDOK1 EQU   *
         MVC   #DSN,=H'28'
         MVC   #VOL,=H'12'
         JOLERR 003,                                                   .
               'DSID ',DDDSID,                                         .
               ' DDN ',DDDDNAME,' DSN ',#DSN,                          .
               ' VOL ',#VOL,' ALLOC '
         B     E21RETN
E21PIV   EQU   *
         L     R4,ATCB           POINT AT TCB
         L     R4,TCBJSCB-TCB(,R4) POINT AT JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4) POINT AT FCT CHAIN
         USING FCT,R4             MAP FCT
E21PIV1  EQU   *
         CLC   FCTFLN,DDDSNAME    IS IT THIS ONE?
         BE    E21PIV2            DO WHAT IS REQUIRED
         ICM   R4,7,FCTNFCTA      POINT AT NEXT FCT
         BNZ   E21PIV1            LOOK AT NEXT FCT
         B     E21DDOK2           IMPOSSIBLE TO GET HERE..BUT FOR
*                                  SAFETY SAKE
E21PIV2  EQU   *
         L     R4,FCTVCT           POINT AT VCT
         MVC   VOL(6),8(R4)        PLUG IN VOL
         B     E21DDOK1            AND ISSUE MESSAGE
E21SYSO  EQU   *
         MVC   #DSN,=H'1'
         JOLERR 004,                                                   .
               'DSID ',DDDSID,                                         .
               ' DDN ',DDDDNAME,' SYSOUT=',#DSN,' ALLOC '
E21RETN  DS    0H
         TM    DDUNITYP,X'80'
         BZ    E21NPROP       DON'T PROPOGATE VOLUME AS IT MAY
*                             BE A SCRATCH TAPE (IE NO VOLUME YET)
         CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'
E21NPROP MVI   E21FLAG,0
         L     R15,TASKRETN
         B     RETRN
         SPACE 3
*  IT IS NECESSARY TO LOCATE THE FCT FOR THE DATASET WHOSE NAME IS
*    IN DDVOLUME, TO FIND THE CURRENT VOLUMES AND COPY THE LIST TO
*    THE ALLOCATION REQUEST FOR THIS DATASET
E21VREF  DS    0H
         LR    R10,R14              SAVE RETURN ADDRESS
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E21VNFCT              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY
         SPACE
         USING FCT,R4
E21VNXTF DS    0H
         CLC   FCTFLN,DDVOLUME+1   Q... IS THIS IT?
         BE    E21VFFCT            A... YES, GO AND GET THE VOLUME INFO
         SPACE
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E21VNXTF              GO AND TEST THE NEXT ONE
E21VNFCT DS    0H                    END OF CHAIN, AND NOT FOUND
         JOLERR 507,'DSID ',DDDSID,',DS ',#DSN,                        .
               ' IS NOT ALLOCATED,',' VOLREF COULD NOT BE RESOLVED'
E21VFFCT DS    0H
         SPACE 3
* NOW I HAVE FOUND THE FCT, COPY THE VOLUME SERIAL NUMBERS
         SPACE 2
         CLEAR DDVOLUME
         SLR   R8,R8
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT
         BZ    E21VNFCT             EXIT IF THERE ARE NO VOLUMES
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT
         BH    E21VOK               BE IF OK
         JOLERR 512,'DS ',DDDSID,',',#DSN,                             .
               ' IS NOT ALLOCATED,',' REFERS TO TOO MANY VOLUMES'
E21VOK   DS    0H
         L     R6,FCTVCT
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES
E21VNXTV DS    0H
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA
         L     R6,4(,R6)            ADDRESS THE NEXT VCT
         BCT   R8,E21VNXTV          CONTINUE UNTIL ALL AREA DONE
         SPACE 2
*  WELL, THAT SHOULD BE ALL: NOW FREE THE ORIGINAL DATASET
         SPACE
         MVC   SAVEDDET,DDDSNDET
         MVC   DDDDNAME,FCTACSN
         MVI   DDDISP+1,C'L'      LAST USE
         CALL  UJE14FRE           FREE THE FILE, ASSUME IT WORKED
         MVC   DDDSNDET(DDLEN),SAVEDDET RESTORE THE ORIGINAL
         UJE22UPD FCTFLN,DDVOLUME FIX FUTURE VOLUME REFERENCES
         DROP  R4
         BR    R10                  RETURN
         SPACE 5
         DC    20S(*)   FOR PATCHES
TRTAB    DC    256AL1(*-TRTAB) ALL THINGS TO ALL THINGS
         ORG   TRTAB
         DC    64X'40'         FIX THE FIRST ONES
         ORG   TRTAB+C'9'+1
         DC    6C' '           AND THE LAST ONES
         ORG
ALLOCREP DC C'   ' FOR ALLOCATION REPLIES
ALLOCECB DC  F'0'  FOR ALLOCATION REPLIES
         TITLE 'UJE23RET: HANDLE RETURN INSTRUCTION'
           JOLSAVE CSECT=UJE23RET                                 74365
           L   R7,=A(#TKN)
           USING #TKN,R7
         JOLERR 101,'RETURN ',#TKN,' EXECUTED'              FIX-X 76200
           L R14,=A(RETURN)                                       74365
           JOLRETN (15,12),RC=0                                   74365
         DC  10S(*)
           SPACE 3                                                75311
           JOLSAVE CSECT=UJE31OPT                                 75311
           MVI JOLSVC,X'0A'    SVC INSTRUCTION CODE               75311
           MVC JOLSVC+1(1),ITEXT+2 SVC NUMBER                     75311
           JOLRETN  RC=0                                          75311
         DC  10S(*)
           LTORG
         TITLE 'PROPOGATE VOLUMES IN JOL JOBQ'
           JOLSAVE CSECT=UJE30VOL                                 74365
* THIS ROUTINE IS CALLED TO FIND THE VOLUME THAT A DATA SET
*  WAS ALLOCATED ON, AND THEN PROPOGATES THIS INFORMATION
*  DOWN THE JOL QUEUES. IT ALSO FIXES UP VOLREFS WHEN REQD.
*
* IT IS CALLED LINK  :-
*
*        CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'
*
         CLI   DDTYPE,DDPUNCH   Q... SYSIN, SYSOUT OF SOME KIND?
         BNH   E30RETN4       DON'T PROPOGATE SYSOUT VOLS
         CLC   =C'*DUMMY ',DDDSNAME
         BE    E30RETN4       DON'T PROPOGATE DUMMY VOLS
*  IT IS NECESSARY TO LOCATE THE FCT FOR THE DATASET WHOSE NAME IS
*    IN DDDSNDET, TO FIND THE CURRENT VOLUMES AND COPY THE LIST TO
*    THE ALLOCATION REQUEST FOR THIS DATASET
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E30RETN4              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY
         SPACE
         USING FCT,R4
E30TNXTF DS    0H
         CLC   FCTFLN,DDDSNAME     Q... IS THIS IT?
         BE    E30TFFCT            A... YES, GO AND GET THE VOLUME INFO
         SPACE
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E30TNXTF              GO AND TEST THE NEXT ONE
E30TNFCT DS    0H                    END OF CHAIN, AND NOT FOUND
         JOLERR 301,'DSID ',DDDSID,',DS ',#DSN,                        .
               ' IS NOT ALLOCATED,',' VOLUMES FOR DATA SET IN ERROR'
         B     E30RETN4       PRESS ON IN ANY CASE
E30TFFCT DS    0H
         SPACE 3
* NOW I HAVE FOUND THE FCT, COPY THE VOLUME SERIAL NUMBERS
         SPACE 2
         CLEAR DDVOLUME
         SLR   R8,R8
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT
         BZ    E30TNFCT             EXIT IF THERE ARE NO VOLUMES
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT
         BH    E30TOK               BE IF OK
         JOLERR 509,'DS ',DDDSID,',',#DSN,                             .
               ' IS NOT ALLOCATED,',' REFERS TO TOO MANY VOLUMES'
E30TOK   DS    0H
         L     R6,FCTVCT
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES
E30TNXTV DS    0H
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA
         L     R6,4(,R6)            ADDRESS THE NEXT VCT
         BCT   R8,E30TNXTV          CONTINUE UNTIL ALL AREA DONE
         SPACE 2
         UJE22UPD FCTFLN,DDVOLUME FIX FUTURE VOLUME REFERENCES
S30RETN0 DS    0H
E30RETN0 DS    0H
           JOLRETN  RC=0
E30RETN4 DS    0H
           JOLRETN  RC=4
         DC  10S(*)
           LTORG
           TITLE 'UJE50RD:READ A STATEMENT FROM JOL INSTRUCT FILE'
           JOLSAVE CSECT=UJE50RD
* THIS CSECT IS CALLED WHEN A NEW INSTRUCTION HAS TO BE
*    READ FROM THE INSTRUCT FILE.
           MVC #VOL,=H'0'     STOP SPURIOUS 0C4                  75311
           CLC TTR$INST,=A(0)  FIRST TIME IN,I.E. WE HAVEN'T
*                              EVEN REALLY STARTED YET ?
           BNE E50NOTF
           MVC RUNNAME,=CL8'$$INST'
           BLDL INSTRUCT,RUNBLDL
           B   E5002R(R15)
E5002R     B   E50GOTIT
           B   E5002R4
           B   E5002R8
E5002R4    JOLERR 501,'MEMBER $$INST ABSENT'
E5002R8    JOLERR 502,'I/O ERROR READING DIRECTORY'
           DS 0D
E50GOTIT DS    0H
         MVC TTR$INST,RUNTTRK
         MVI TTR$INST+3,0     SET Z=0 FIRST
         FIND  INSTRUCT,TTR$INST,C
         B     E50RD
E50NOTF  DS    0H
*        POINT INSTRUCT,TTR$INST
E50RD    DS    0H
           MVC INSTRUCT+33(3),=AL3(EOF)
           L  R15,=A(#TKNSTRG)
           USING  #TKNSTRG,R15
           CLEAR TKNSTRG
           DROP  R15
           L  R2,=A(INSTRDA)
           USING    INSTRDA,R2
           READ E50DECB,SF,INSTRUCT,(R2)
           CHECK E50DECB
* IF EOF WOULD HAVE GONE ELSE-WHERE
*******************************************************************DASD
*   THIS CALL TO MODULE $$JOLBUG WILL PRINT THE INSTRUCTION        DASD
*   JUST READ TO DDNAME '$JOL$BUG$' IF IT'S PRESENT                DASD
*   -----MAYBE A GOOD TRACE FACILITY----                           DASD
*   YOU MIGHT DO A JOLOPT CARD1='//JOLBUG DD SYSOUT=A'             DASD
*   IN THE COMPILE TO GET THIS DD IN EVERY STEP                    DASD
****************************************************02-23-78*******DASD
      CALL   $$JOLBUG,((2))     CALL PRINT MODULE                  DASD
           DROP  R2
           SPACE 3
           L   R7,=A(#TKN)
           USING #TKN,R7
*          NOTE INSTRUCT
*          ST  R1,TTR$INST
*          MVI TTR$INST+3,1    SET Z TO 1 SO NEXT READ GETS NEW BLK
           MVC INST(IBODY),INSTRDA
           MVC DDDSNDET(DDLEN),INSTRDA
           MVC STMT,ISTMT
           MVC GOTOLAB,=CL8'$$'
           CLI DDDD1,C'E'      EXEC PGM ?
           BNE E50TDD
           MVC ICOMMAND,=CL8'RUN'
           MVC STMT,PGMESTMT
           MVC GOTOLAB,PGMSTEP SHIFT STEPNAME FOR 'REAL' STEPNAME 75311
           JOLRETN
E50TDD    DS    0H
          CLI DDDD1,C'D'      DD-CARD TYPE ENTRY?
          BNE ISALABEL
* NOW FOR DD-CARD TYPE ENTRIES,WE DON'T SPLIT INTO TOKENS.
* SET UP SHORT DSNAME FOR ERROR MESSAGES
          MVC DSNAME,DDDSNAME
          LA  R15,L'DDDSNAME-1
E50TEDSN DS    0H
          LA  R14,DDDSNAME(R15)
          CLI 0(R14),C' '
          BNE E50DSNOK
          BCT R15,E50TEDSN
E50DSNOK DS    0H
          LA  R15,1(R15)
          STH R15,#DSN
       FIX 'JCS DID NOT SEE ANY USE FOR THE FOLLOWING LINE'
*          MVC STMT,DDDDNAME+2
          MVC GOTOLAB(2),=C'$$'
          MVC GOTOLAB+2(6),DDDDNAME+2
          MVC #TKN,=H'8'
           MVC TKN(8),BLANKS
           MVC TKN(1),DDDDNAME+1
           MVC ICOMMAND,TKN
          CLI   DDDDNAME,C'%'
          BE    E50RETN0
          MVI   TKN,C'F'     INDICATE FREE COMMAND
          MVI   ICOMMAND,C'F'
E50RETN0  DS    0H
          JOLRETN
ISALABEL  DS    0H
          CLC INST,=AL2(IBODY+1)
           BH  E50SPLIT
           L  R15,=A(#TKNSTRG)
           USING  #TKNSTRG,R15
           XC #TKNSTRG,#TKNSTRG
           DROP  R15
E50SPLIT DS    0H
* THE DOUBLE QUOTE ROUTINE IN THE COMPILER NOW REMOVES            76200
* ALL QUOTES FROM THE STRING, AND THEREFORE IF                    76200
* SOMEONE HAS QUOTES IN A STRING FOR A PARM, THERE                76200
* WILL NOW ONLY BE ONE. THIS CAUSES ALL SORTS OF                  76200
* PROBLEMS WHEN THE TOKEN SPLITTER GETS IT.                       76200
         CLC   ICOMMAND,=CL8'PARM' PARM?                          76200
         BNE   E50SPL2                                            76200
         JOLRETN RC=0                                             76200
E50SPL2  DS    0H                                                 76200
           CALL UJCTKN,TKNX
*           B *+4                                                  DASD
*           B *+4                                                  DASD
*           LTR R15,R15                                            DASD
*           BZ  GOTINSTR                                           DASD
            B  *+4(R15)                                            DASD
            B  GOTINSTR  SUPER INSTRUCTION IS CLEAN                DASD
            B  E50BINST  STMT > 1000 BYTES   CANN"T HANDLE THIS    DASD
            B  GOTINSTR  TOO MANY TOKENS > 150                     DASD
            B  GOTINSTR  TOKEN > 120 BYTES                         DASD
            B  GOTINSTR  NO ENDING QUOTE                           DASD
E50BINST   JOLERR 503,'ERROR IN INSTRUCTION'                       DASD
GOTINSTR DS    0H
           GETTKN 1
           JOLRETN
EOF        JOLRETN RC=4
         DC    80S(*)
          LTORG
         AIF   (&X8).X8400
           TITLE 'UJE81PDQ:READ PASSED DATA SET QUEUE'
           JOLSAVE CSECT=UJE81PDQ
* THIS CSECT MUST FIND THE PDQ ENTRY THAT REFERS TO THE DSNAME
*    IN THE DSNAME FIELD. A 4 IS RETURNED IF IT CAN'T
*
******
* CHECK IF JCTPDIP = 0 (MAY BE IF RUNNING UNDER
*                       TSO).
******
           MVI ISINPDQ,C' '                                        DASD
         SPACE 1                                                  76200
         CLC   JCTPDIP,=F'0'                                      76200
         BNE   E81GO                                              76200
         JOLRETN RC=4                                             76200
E81GO    DS    0H                                                 76200
           GETJOBQ PDQDECB2,JCTPDIP
           B  E81GOTRD
E81READ1 GETJOBQ PDQDECB2,CALLAREA
E81GOTRD DS   0H
         CLI  VS,C'2'   MVS?
         BNE   E81NMVS1
E81MVDS1 CLC   DDDSNAME,PDIDSN1
         BE    E81PASS1
         CLC   DDDSNAME,PDIDSN2
         BE    E81PASS2
         CLC  DDDSNAME,PDIDSN3
         BE    E81PASS3
* NOT IN PDI, GET NEXT
         CLC  =AL3(0),PDINPDIP  IS THIS THE LAST BLOCK?
         BE   E81RETN4    YES, NOT FOUND THEN
         GETJOBQ  PDQDECB2,PDINPDIP
         B    E81MVDS1
E81NMVS1 DS    0H
         CLC DDDSNAME,PDQDSN1
         BE  E81PASS1
         CLC DDDSNAME,PDQDSN2
         BE  E81PASS2
         CLC DDDSNAME,PDQDSN3
         BE  E81PASS3
* NOT IN THAT BLOCK,GET THE NEXT
         CLC =AL3(0),PDQNPDQ LAST BLOCK IN PDQ ?
         BE  E81RETN4        YES,THERE-FORE COULDN'T FIND DSET
         MVC CALLAREA,PDQNPDQ
         MVI CALLAREA+3,0
*
         B   E81READ1
E81PASS1 MVC PDQDSNNO,=H'0'
         B   E81PDQB
E81PASS2 MVC PDQDSNNO,=H'1'
         B   E81PDQB
E81PASS3 MVC PDQDSNNO,=H'2'
E81PDQB  DS   0H
* THERE USED TO BE A NOTE FOR JOBQ HERE, NOT NEC NOW              75128
         ST R1,APDQDIR       AND SAVE IT
         CLI  VS,C'2'     MVS
         BNE   E81NMVS2
* GET SIOT FOR MVS SYSTEMS
         LH  R1,PDQDSNNO
         MH  R1,=AL2(PDILEN)
         LA  R14,PDISIOT1(R1)   GET SIOT ADDRESS LOCN
         MVC  CALLAREA,0(R14)
         B   E81GETSI         GO GET THE SIOT
E81NMVS2 DS   0H
         MVC CALLAREA,PDQABLK
         MVI CALLAREA+3,0
         GETJOBQ PDQDECB,CALLAREA
* NOW GET THE SIOT AS WELL
         LH  R1,PDQDSNNO     DATA SET NUMBER
         MH  R1,=AL2(PDQBLKLN) LENGTH OF BLOCK
         LA  R1,PDQASIOT(R1)   ABSOLUTE ADDRESS
         MVC CALLAREA(3),0(R1) SIOT TTR
         MVI CALLAREA+3,0
E81GETSI DS    0H
         GETJOBQ SIOTDECB,CALLAREA
         MVI ISINPDQ,C'1'
         JOLRETN
E81RETN4 DS    0H
         JOLRETN RC=4
         DC   80S(*)
.X8400   ANOP
         TITLE 'UJE94CLN:CLEANUP ROUTINE'
         JOLSAVE CSECT=UJE94CLN
         MVC   STMT,=C'99999'
E94#010  DS    0H
         L     R4,ATCB      TCB ADDRESS
         L     R4,TCBJSCB-TCB(,R4)  ADDRESS MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)
         BZ    E94DONE
         USING FCT,R4
         SPACE 2
*  FOUND THE START OF THE FCT CHAIN: NOW SCAN CHAIN FOR A FILE TO FREE
         SPACE 2
E94NXTF  DS    0H
         CLC   =C'$JOL',FCTACSN  Q... ONE I MARKED?
         BNE   E94NXTF1          A... NO
         BAL   R14,E94FREE
         B     E94#010
E94NXTF1 DS    0H
         ICM   R4,7,FCTNFCTA   ADDRESS THE NEXT
         BNZ   E94NXTF
E94DONE  DS    0H
         B     RETN0
         SPACE 4
E94FREE  DS    0H
         ST    R14,CALLAREA+12
         XC    CALLAREA(12),CALLAREA
         MVI   CALLAREA,C'F'   FREE FILE
         MVI   CALLAREA+1,12   TABLE SIZE
         MVC   CALLAREA+4(8),FCTACSN ACCESS NAME
         MVC   STEPLBDD,FCTACSN FOR MESSAGES B LOW
         FREEFL MF=(E,CALLAREA)
         LTR   R1,R15
         BZ    E94FREE5
         CVD   R15,DBL
         CALL  UJS46FER
         MVC   TASKSSI(4),=X'40202120'
         ED    TASKSSI,DBL+6
         JOLERR 102,'DDNAME ',                                         .
               STEPLBDD,' NOT UNALLOCATED DUE TO RETURN CODE',         .
               TASKSSI
         B     E94FREE9
E94FREE5 DS    0H
         JOLERR 001,'DDNAME ',                                         .
               STEPLBDD,' UNALLOCATED'
E94FREE9 DS    0H                  RETURN
         L     R14,CALLAREA+12
         BR    R14
         JOLSAVE CSECT=UJE97SPC
           TM  PRINT+48,X'10'
           BZ  E97RET
           WRITE E97DECB,SF,PRINT,E97SPC
           CHECK E97DECB
E97RET     JOLRETN
E97SPC   DC   AL2(L'E97SPCC+8)
         DC   H'0'
         DC   AL2(L'E97SPCC+4)
         DC   H'0'
E97SPCC  DC   C'                    '
         LTORG
         TITLE 'UJE98INI:INITIALISATION ROUTINES'
         JOLSAVE CSECT=UJE98INI
* THIS CSECT IS CALLED IMMEDIATELY AFTER THE JOL SCHEDULER GETS CONTROL
*    AND IT  OPENS THE FILES ETC
* SECOND DETERMINE WHETHER WE ARE RUNNING UNDER 'HASP' OR 'OS'
*    IF THERE IS A DD-CARD FOR '$$PRINT' THEN THE SYSOUT FILE
*    ASSOCIATED WITH THAT FILE WILL BE USED SIMILIARLY TO THE
*    'HASP' SYSTEM LOG,I.E ALL COMMENTS WILL GO OUT TO IT.
         SPACE 3
* NOTE *** UNDER VS, WE ATTACH RATHER THAN XCTL TO THE USER PROGRAM
*     AS WE SAVE TIME THEN BY NOT CLOSING AND RE-OPENING OUR FILES.
*     SO, LET'S SEE IF THEY ARE OPEN, AS TO OPEN AGAIN WOULD DEFEAT
*     THE WHOLE EXERCISE, WOULDN'T IT?
         SPACE 1
         TM INSTRUCT+48,X'10'                                     74365
         BO  SCHEDGO                                              74365
         SPACE 1
         MVC STMT,=CL4'   0'
&C1      SETC  (1-&X8)'AQMRAW'
&C2      SETC  (1-&X8)'IBMRTN'
&C3      SETC  (1-&X8)'JOBQ'
&C4      SETC  (1-&X8)'JCTTTR'
         CALL  UJE70OPN,(&C1,&C2,INSTRUCT,PRINT,RETN,&C3,         ******
               &C4,VS,ATCB),MF=(E,CALLAREA)                       *****
*** ABOVE OPENS REQUIRED FILES, AND :-                            *****
*    1. SETS 'JCTTTR' TO CORE ADDRESS, OR TTR ON JOBQ.            *****
*    2. LOADS (MAYBE) AN IBM ROUTINE TO ACCESS JOBQ.              *****
*    3. OPENS 'INSTRUCT'                                          *****
*    4. OPENS 'PRINT' IF $$PRNT DD CARD PRESENT                   *****
*    5. OPENS 'JOBQ'  IF $$JOBQ DD CARD PRESENT AND ¬MFT |MVT|MVS *****
*    6. SETS 'VS' TO ' ' | '1' | '2' | 'M'                        *****
*    7. SETS 'ATCB' = A(OUR TCB)                                  *****
           SPACE 3                                                *****
         L     R4,ATCB               ADDRESS MY TCB
         L     R14,TCBJSCB-TCB(,R4)           MY JSCB
         ICM   R14,7,JSCBCSCA-JSCB(R14)       MY CSCB
         MVC   JBNAME,CSCBUJNM-CSCB(R14)      WOT IME CALLED
SCHEDGO  DS    0H
         CALL  UJE97SPC                SPACE UP PRINTING A BIT
         L     R1,ATASKPRM      CLEAR USER'S PARM
         XC    0(2,R1),0(R1)
       SPACE
* NOW CHECK THAT THE INSTRUCT AND RETNCODE FILES ARE OPEN
         SR    R8,R8
         TM    INSTRUCT+48,X'10'
         BO    FILE1OK
         LA    R8,1
         JOLERR 501,'NO DD CARD FOR $$INST'
FILE1OK  DS    0H                                                 75128
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E98NOFCT              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY
         SPACE
         USING FCT,R4
E98NXFCT DS    0H
         CLC   FCTACSN,=CL8'&DDINST' Q... IS THIS MY INSTRUCTION FILE?
         BE    E98FFCT               A... YES, GO AND FIX IT
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E98NXFCT              BR IF THERE IS ONE
E98NOFCT JOLERR 500,'NO FCT FOR THE INSTRUCTION FILE'
E98FFCT  DS    0H    FOUND THE FCT, NOW COPY THE DSNAME
         MVC   SYSINDSN(L'FCTFLN),FCTFLN   COPY THE FILE NAME
         LA    R1,SYSINDSN+L'FCTFLN-1 ADDR LAST BYTE
         CLI   0(R1),C' '           TRUNCATE TRAILING BLANKS
         BNE   *+8
         BCT   R1,*-8
         LA    R0,SYSINDSN
         SR    R1,R0
         STH   R1,#SYSINDS            STORE LENGTH
         L     R15,FCTVCT            ADDRESS VOLUME INFORMATION
         MVC   SYSINVOL,8(R15)       COPY THE VOLUME SERIAL NUMBER
         ZAP   DDCTR,=P'0'           INITIALISE DD COUNTER
         SPACE 2
         FIND  INSTRUCT,MBRRETN,D
         B     E98INITR(R15)
E98INITR B     E98GOTMB
         B     E98FIND4
         B     E98FIND8
MBRRETN  DC    CL8'$$RETN'
         SPACE 3
E98FIND8 JOLERR 504,'I/O ERROR READING DIRECTORY'
         SPACE 3
E98FIND4 DS    0H
* THE $$RETN MEMBER HASN'T BEEN SET UP APPARENTLY
         JOLERR 109,'JOL MONITOR VERSION IS ',                   74365 *
               '4.0-B  '                                         76200
         CALL  UJE97SPC                SPACE UP PRINTING A BIT
*          LA R1,READAREA
*          USING READAREA,R1
*          CLEAR READAREA  ****** FOR TESTS ONLY ?????
         LA    R0,READAREA
         L     R1,=A(L'READAREA)
         SLR   R15,R15        ZEROES TO ALL THE AREA
         MVCL  R0,R14
*          DROP R1
*          XC TTR$RETN(100),TTR$RETN                              75311
           MVI   COND,C' ' CLEAR COND TO BLANKS                    DASD
           MVC   COND+1(L'COND-1),COND                             DASD
           WRITE E98DEC9,SF,RETN,READAREA,'S'
           CHECK E98DEC9
           NOTE RETN
           ST  R1,TTR$RETN
           STOW RETN,STOWBLK,A
           LTR R15,R15
           BZ  E98RDJCT
           JOLERR 503
E98GOTMB DS    0H
* WE HAVE NOW FOUND THE $$RETN MEMBER OF THE DATA SET
           LH R2,INSTRUCT+X'3E'
           MVC INSTRUCT+X'3E',=Y(&RETNSIZ)                         DASD
           READ E98DECBX,SF,INSTRUCT,RETNAREA
           CHECK E98DECBX
           STH R2,INSTRUCT+X'3E'
           NOTE INSTRUCT
           ST  R1,TTR$RETN     FOR REWRITING
* FIND OUT HOW MUCH DATA WE READ (ALSO USED FOR REWRITING)
           L  R1,E98DECBX+16   IOB ADDRESS
           LH R14,INSTRUCT+X'3E'  BLOCKSIZE
           SH R14,14(R1)  MINUS RESIDUAL COUNT
           STH R14,RETNBLKS    LENGTH OF RETN BLOCK
           SPACE 3
           MVC STMT,DBL
         POINT INSTRUCT,TTR$INST
E98RDJCT DS    0H
           AIF   (&X8).X8420
           SPACE 3
* BETTER SET UP THE JOBNAME ETC
           LA  R4,CALLAREA
           EXTRACT (4),'S',FIELDS=(TIOT)
           L   R1,CALLAREA
           ST  R1,ATIOT        SAVE ADDRESS OF TIOT
* NOW READ IN JCT AND SCT
           GETJOBQ JCTDECB,JCTTTR                                 *****
           MVC CALLAREA(3),JCTSSTR  POINT TO CURRENT SCT
E80RDSCT DS    0H
           MVI CALLAREA+3,0
           GETJOBQ SCTDECB,CALLAREA
*****************************************************************
* NOW BECAUSE OS DOES NOT UPDATE THE CURRENT JCT
*     SCT POINTER AFTER A STEP HAS BEEN BYPASSED,I MUST
*     CHECK THAT THE SCT I'VE JUST READ IN IS THE RIGHT ONE
*     FOR THIS OS STEP.
*     IF ITS NOT,I STEP ON TO THE CORRECT ONE.
* ALSO THE CURRENT OS STEP COUNTER MUST BE UPDATED COS I USE
*     IT IN THE SCRATCH ROUTINE
******************************************************************
* WE'LL USE THE TIOT STEP NUMBER,COS THAT MUST BE RIGHT ?????
           SPACE
           ST R1,CALLAREA
           MVC  JCTSSTR(3),CALLAREA
* NOW CHECK THAT THE STEPS ARE RIGHT
           L R1,ATIOT          GET TIOT ADDTRESS
           CLC SCTSNAME,8(R1)   RIGHT STEP ?
           BE E98T1ST          TEST IF 1ST TIME IN THIS OS STEP
* OK THEN,STEP ON TO READ NEXT SCT,AND ADD 1 TO CURRENT
*     JCT STEP COUNTER
           SR R1,R1
           IC R1,JCTSNUMB
           LA R1,1(R1)
           STC R1,JCTSNUMB
           MVC CALLAREA(4),SCTANSCT  NEXT SCT ADDRESS
           B  E80RDSCT
E98T1ST  DS   0H
.X8420     ANOP
           SPACE 6
           CLI TASKIND,C' '    IS THIS THE FIRST TIME I'VE BEEN CALLED
*                              THIS OS STEP ?
           BE  E98RETN0        YES,SO NOW FILES ETC INITIALISED,GO BACK
*                              TO THE MAIN-LINE LIKE A GOOD BOY.
           SPACE 3
* THE SCHEDULER HAS BEEN RE-ATTACHED AFTER AN XCTL TO A PROBLEM
*    PROGRAM. THEREFORE WE MUST DO NICE THINGS LIKE PRINT OUT
*    THE RETURN CODES ETC,
* WE HAD BETTER STORE ITS RETURN CODE IN THE TABLE ANYWAY
           LH R1,NOIDS
           MH R1,=H'18'
           LA R1,IDSTART(R1)
           USING IDOVLY,R1
           MVC IDRETN,TASKRETN
           MVI IDRETN,0        TURN OFF HIGH ORDER BITS FOR COMPARISONS
*                              IN THE 'IF' STATEMENT LATER
******* MORE FOR  MAXCC,LASTCC   SEPT 75
         TM    TASKRETN,TCBFA   DID AN ABEND OCCUR?      CHG26028 76200
         BO    E98LMAX        YES, SO LEAVE LASTCC AND MACHG26028 76200
         MVC  LASTCC,IDRETN   LASTCC DONE
         CLC   MAXCC,LASTCC
         BH    E98LMAX
         MVC   MAXCC,LASTCC   MAXCC DONE
         DROP  R1
E98LMAX  UNPK  CALLAREA(9),TASKSSI(5)
         TR    CALLAREA(8),HEX
         MVC   ENDMSSI,CALLAREA 3(5)
*        OI    ENDMSSI+7,X'F0'
* NOW SEE IF TASK ABENDED OR RETURNED PROPERLY.
         TM    TASKRETN,TCBFA                  ABEND ?
         BZ    NOTABND
         MVI   ERRORIND,1     TURN ON ABEND INDICATOR    CHG26028 76200
* WAS IT A USER ABEND OR A SYSTEM ABEND ?
         L     R1,TASKRETN
         N     R1,=X'00FFF000'
         BZ    USERABND
         UNPK  CALLAREA(9),TASKRETN(5)
         TR    CALLAREA(8),HEX
         MVC   ENDMRETC(4),CALLAREA+1
         MVC   ENDMRETC+5(3),CALLAREA+5
         MVI   ENDMRETC,C'S'
         MVI   ENDMRETC+4,C'-'
           JOLERR 307,'STEP ',TASKLABL,' LM ',TASKNAME,' SSI ',   74365*
               ENDSSI,' SYSTEM ABEND ',ENDRETC                    74365
E98CLRAB CLEAR TASKRETN    CLEAR ABEND                   CHG26028 76200
*        B     E20R16       TAKE BRANCH TO COND CODE TERMINATE   C DASD
         B     E98RETN0                                          A DASD
           SPACE 3
NOTABND    XC TASKRETN(2),TASKRETN
USERABND DS    0H
         L   R0,=X'0000FFFF'  IF NEGATIVE NUMBER LETS SHOW IT      DASD
         N   R0,TASKRETN
         CVD R0,DBL
         OI  DBL+7,X'0F'                                           DASD
         UNPK ENDRETB,DBL                                          DASD
         CLI ENDRETB,C'0'                                          DASD
         BNE ENDMSSOK  ITS A BIG ONE                               DASD
         MVI ENDRETB,C' '  PRINT AS BEFORE (4 BYTE RETN CODE)      DASD
ENDMSSOK DS    0H
         TM  TASKRETN,TCBFA  ABEND ?
         BO  E98TYPER
         JOLERR 105,'STEP ',TASKLABL,' LM ',TASKNAME,' SSI ',     74365*
               ENDSSI,' RETURNED ',ENDRETB                         DASD
         AIF   (&X8).X8440
*                                                                 76200
* TO HANDLE THE STOP WHEN, WE MUST EXAMINE THE JCT JOB TERMINATION76200
* INDICATORS, AND COMPARE THIS RETURN CODE AND IF NECESSARY,      76200
* TERMINATE THE RUN.                                              76200
*                                                                 76200
* WE HAVE RESERVED TO US 1 JOB COND OF 'EQ,4000', AND SO WE CAN   76200
* FLUSH THE JOB BY SETTING 4000 ANY TIME WE WISH.                 76200
*                                                                 76200
*                                                                 76200
         LA    R1,JCTJDPCD                                        76200
         LA    R15,JCTJDPCD+4+28-1 END LOOP INDIC                 76200
         LA    R14,4               LENGTH OF TABLE                76200
E98DEPL  CLI   2(R1),0       ANY COND (END LOOP)            76200
         BE    E98RETN0            END -> RETURN                  76200
         IC    R6,2(R1)            GET DEPENDENCY CODE AND        76200
*                                  GET REDY FOR EXECUTE           76200
         CLC   0(2,R1),TASKRETN+2 COMPARE                        76200
         EX    R6,E98GO40          BRANCH IF TRUE                 76200
         BXLE  R1,R14,E98DEPL      LOOP THEN ...                  76200
.X8440   ANOP
         B     E98RETN0                                           76200
         AIF   (&X8).X8460
E98GO40  BC    0,E98R16       EXECUTED  *****                     76200
E98R16   DS    0H
E20R16   DS    0H
* DUE TO USING MVS MACRO, MUST MOVE JOBNAME BEFORE 'JOLERRINR'
            MVC  TASKLABL,JCTJNAME
           JOLERR 408,'JOB ',TASKLABL,                                 *
               ' TERMINATED DUE TO CONDITION CODES'
           B   E98RET4K
.X8460   ANOP
         FIX   '"STOP WHEN ANY" NEEDS TO BE HANDLED: I SUGGEST PASSING .
               THE INFO FROM THE COMPILER AS FIRST INSTRUCTION'
E98TYPER   JOLERR 306,'STEP ',TASKLABL,' LM ',TASKNAME,' SSI ',   74365*
               ENDSSI,' USER ABEND ',ENDRETB                       DASD
         B     E98CLRAB                                  CHG26028 76200
E98RET4K  DS    0H
           XC TASKRETN(2),TASKRETN
* THE NEXT MVC WILL STOP MVS FROM RUNNING AFTER A ABEND            DASD
* THIS PROBLEM IS BEING WORKED ON AS OF 4/1/77                     DASD
* SORRY ABOUT THE "IF ERROR LOGIC"                                 DASD
*          MVC TASKRETN(4),=F'&RSVDRC'                             DASD
* THIS PROBLEM IS NOW FIXED IN THE MONTOR AS OF 7/10/77            DASD
           MVI TASKIND,C'1'
           JOLRETN RC=&RSVDRC
E98RETN0 DS    0H
         CALL  UJE97SPC                SPACE UP PRINTING A BIT
           MVI TASKIND,C'1'
           JOLRETN
STOWBLK    DC  CL8'$$RETN'
STOWTTR    DC  XL3'00'
STOWC      DC  X'00'
           DS CL50
ENDSSI     DS 0CL8
ENDMSSI    DS  CL8
ENDRETB    DS 0CL5            FOR MINUS RETURN CODES               DASD
ENDRETC    DS 0CL8
ENDMRETC   DS CL8
           DS H
           DC   80S(*)
           LTORG
           TITLE 'UJS23ER:WTP,WTO ERROR MESSAGES'
UJS23ER    CSECT
           USING *,R15
           STM R14,R12,12(R13)
           LA  R0,SAVEAREA
           ST  R0,8(R13)
           ST  R13,SAVEAREA+4
           BAL R13,STARTERR
SAVEAREA   DS  18F
STARTERR   DS    0H
           DROP R15
           USING SAVEAREA,R13
* R14 IS THE RETURN ADDRESS BUT IT ALSO POINTS TO A LIST OF INSTRUCTION
*    S WHICH ARE TO BE EXECUTED
* THEY CAN BE :-
*    MVC   CONSTANT
*    LA    VARYING STRING
           CLEAR S23MSSG       CLEAR MESSAGE AREA
* NEW, END DEC 1974. IF AN ERROR MESSAGE IS BEING ISSUED, THEN OFFSET
*    THE MESSAGE AND PUT '***' IN IT.
           LA  R1,S23MSSG                                         74365
         CLC   =C'DISPLAY ',ICOMMAND                     CHG30062 76200
         BE    S23OFF10                                  CHG30062 76200
         CLC   =C'TYPE ',ICOMMAND                        CHG30062 76200
         BE    S23OFF10                                  CHG30062 76200
         CLC   =C'RETURN ',ICOMMAND                      CHG30062 76200
         BE    S23OFF10       PUT 10 BLANKS IN START     CHG30062 76200
         B     S23TSEV                                   CHG30062 76200
S23OFF10 MVC   0(10,R1),BLANKS OFFSET MESSAGE BY 10      CHG30062 76200
         LA    R1,10(R1)      SKIP BLANKS                CHG30062 76200
         B     S23START       GO FORM UP MESSAGE         CHG30062 76200
S23TSEV  CLI   S23SEV,2                                  CHG30062 76200
         BNL   S23REALE       REAL ERROR, PUT JOB NAME   CHG30062 76200
         MVC   0(5,R1),BLANKS                            CHG30062 76200
         LA    R1,5(R1)                                  CHG30062 76200
         B     S23START                                  CHG30062 76200
S23REALE MVC   0(4,R1),=C'***('  PUT '***('              CHG30062 76200
&C       SETC  (&X8)'JBNAME'.(1-&X8)'JCTNAME'
         MVC   4(8,R1),&C        + JOBNAME               CHG30062 76200
         MVI   12(R1),C')'       + ')'                   CHG30062 76200
         LA    R1,13(R1)         SKIP ABOVE              CHG30062 76200
S23START   MVC 0(3,R1),=C'JOL' SHIFT IN 'JOL'                     74365
           LA  R1,3(R1)        SKIP OVER IT SO WE WON'T OVER-WRITE IT
S23LUP1  DS    0H
           CLI 0(R14),X'D2'    MOVE ?
           BE  S23MUV1
           CLI 0(R14),X'41'    LA ?
           BE  S23LA1
           B   S23END1         SHOULD BE '00'
           SPACE
S23MUV1    EX  R0,0(R14)        EXECUTE THE MOVE
           SR  R0,R0
           IC  R0,1(R14)       LENGTH MOVED
           AR  R1,R0           ADD TO OUTPUT POSN
           LA  R1,1(R1)        COS ASSMBLR REMOVED 1
           LA  R14,6(R14)      SKIP MVC
           B   S23LUP1
           SPACE
S23LA1   DS    0H
           EX  0,0(R14)        EXECUTE THE LA R15,VARYING STRING
           ST  R14,0(R13)      SAVE REGISTER 14 IN SAVE AREA
           LH  R14,0(R15)      LOAD LENGTH OF THE STRING
           LTR  R14,R14        SEE IF STRING LENGTH = 0
           BZ  RESET14         NO DATA TO MOVE
           BCTR R14,0
           EX  R14,ERRMUV
           LA  R1,1(R14,R1)    STEP 1 SO NEXT MOVE GOES ONTO RIGHT
*                              SPOT IN BUFFER
RESET14  DS    0H
           L   R14,0(R13)      RELOAD R14
           LA  R14,4(R14)      STEP OVER THE LA
           B   S23LUP1
* OOPS   WTO   'JOLE00-99 CANNOT ALLOCATE ERROR AREA'
*        ABEND 16,DUMP,STEP
ERRMUV   MVC   0(*-*,R1),2(R15) **** EXECUTED
         SPACE
S23END1  DS    0H
         LA    R14,2(R14)      BRANCH AROUND '0' AT END OF LIST
         L     R15,4(R13)       LOAD OLD SAVE ADDRESS
         ST    R14,12(R15)     RESET OLD RETURN ADDRESS
         MVC   0(3,R1),=C' AT'  SHIFT IN 'AT'
         MVC   4(4,R1),S23STMT                                    75003
         OC    S23STMT,S23STMT
         BNZ   S23SETL
         MVC   4(4,R1),STMT                                       75003
*        OC    4(4,R1),=C'0000' JCS NOTICED BINARY ZEROES IN THERE
S23SETL  LA    R14,S23MSSG-12 THE -8 IS FOR THE 'AT STMT'         75128
S23TEST0 CLI   4(R1),C'0'     LEADING ZERO?                       75003
         BNH   S23SR          -> NO                               75003
         MVC   4(4,R1),5(R1)  DROP ZERO                           75003
         BCT   R1,S23TEST0                                        75003
S23SR    DS    0H                                                 75003
         SR    R1,R14
         XC    #S23LNE2,#S23LNE2   CLEAR LENGTH                   76200
         CH    R1,#S23MAX          CHECK FOR A BIG MESSAGE        76200
         BNH   S23SHORT            ITS OK, KEEP GOING             76200
* NOW WE HAVE A MESSAGE THATS GREATER THAN 96 BYTES AND IF        76200
* WE DONT MAKE TWO LINES OUT OF IT, THE OS WRITER OR HASP...ECT   76200
* WILL CHOP IT OFF                                                76200
* SO WE ARE NOW GOING TO TAKE A LOOK AT THE MESSAGE FORM +96 BACK
* AND WHEN WE FIND A COMMA OR A BLANK THAT WILL END LINE 1 AND
* START LINE 2
         STH   R1,#S23LNE2         SAVE OLD LENGTH FOR LATER      76200
         LA    R15,S23MSSG         POINT TO THE START OF THE MSG  76200
         AH    R15,#S23MAX         GET TO +96                     76200
         LA    R1,30               STOP LOOKING AFTER 30 BYTES    76200
S23LOOK  DS    0H                                                 76200
         CLI   0(R15),C' '         IS IT A BLANK                  76200
         BE    S23ENDLK                                           76200
         CLI   0(R15),C','         HOW ABOUT A COMMA              76200
         BE    S23ENDLK                                           76200
         BCTR  R15,0               BACKUP,1 BYTE                  76200
         BCT   R1,S23LOOK          RETURN                         76200
S23ENDLK DS    0H                                                 76200
         LR    R1,R15              R1 = NEW END FOR LINE 1        76200
         LA    R14,#S23LREC   POINT TO START OF MESSAGE           76200
         SR    R1,R14              CALC NEW LENGTH FOR LINE 1     76200
         AH    R14,#S23LNE2        POINT R14 TO END OF MESSAGE    76200
         SR    R14,R15             CALC LENGTH FOR LINE 2         76200
         LA    R14,19(R14) LEAVE SOME BLANKS ON CONT LINE         76200
         STH   R14,#S23LNE2        SAVE IT FOR LATER              76200
         CLEAR S23LNE2                                            76200
         MVC   S23LNE2+15(L'S23LNE2-16),1(R15)      SAVE LINE 2   76200
S23SHORT DS    0H                                                 76200
         XC    #S23BLKS(8),#S23BLKS CLEAR VB DESCRIPTOR ETC       76200
           STH R1,#S23LREC
           LA  R1,4(R1)
           STH R1,#S23BLKS
           XC S23STMT,S23STMT
* GREAT,NOW WHERE ARE WE GOING TO PUT THIS FANTASTIC PIECE OF
*    INFORMATION ?
           TM  PRINT+48,X'10'
           BZ  S23WTO
           WRITE S23DECB,SF,PRINT,#S23BLKS
           CHECK S23DECB
S23WTO   DS    0H
* NOW IF THE SEVERITY IS >=12 THE MESSAGE IS TYPED ON THE CONSOLE,
*    OTHERWISE A WTO WITH ROUTCDE=11 IS QUITE SATISFACTORY,UNLESS
*    WE HAVE A PRINT DD CARD,IF WHICH CASE WE CAN RETURN NOW
           CLI S23SEV,3
           BL  S23TPRNT
* HERE A REAL WTO IS REQUIRED,SO SET UP ROUTE-CODES 2 & 11
           MVC #S23MSSG,=XL2'8000'
           LH  R15,#S23LREC
           LA  R15,#S23LREC(R15)
           MVC 0(4,R15),=X'04004020' DESC 6 RTE 11,2              75311
           CLI  VS,C'2'    MVS ?                                   DASD
           BNE  S23TNMVS   NOPE                                    DASD
           MVC 0(4,R15),=X'04004004' DESC 6 RTE 2,14 JESMSG        DASD
S23TNMVS DS    0H                                                  DASD
         WTO   MF=(E,#S23LREC)
           B  S23GOBAK
           SPACE 3
S23TPRNT DS    0H                                                 75311
         TM    PRINT+48,X'10' DID WE PUT MESSAGE ON PRINTER FIX-X 76200
         BO    S23GOBAK       YES, DON'T FILL WTP ON JCL LOGFIX-X 76200
* SET UP A WTO WITH ROUTCDE=11
           MVC #S23MSSG,=XL2'8000'
           LH  R15,#S23LREC
           LA  R15,#S23LREC(R15)
           MVC 0(4,R15),=X'00000020' ROUTCODE   11                75128
           CLI  VS,C'2'   MVS ??                                   DASD
           BNE  S23NMVS   NOPE                                     DASD
           MVC 0(4,R15),=X'00000004' ROUTCODE 14 FOR JESMSG        DASD
S23NMVS  DS    0H                                                  DASD
*          LA  R1,#S23LREC
         WTO   MF=(E,#S23LREC)
S23GOBAK DS    0H
         CLC   #S23LNE2,=X'0000'   DO WE HAVE A SECOND LINE       76200
         BE    S23GOBK2            NOPE                           76200
         LH    R1,#S23LNE2         LOAD LENGTH OF LINE2           76200
         XC    #S23LNE2,#S23LNE2   CLEAR                          76200
         MVC   S23MSSG,S23LNE2     OVERLAY OLD WITH NEW           76200
        CLI  S23LNE2,C' '  CHECK FOR BLANK SECOND LINE             DASD
        BNE  S23SHORT                                              DASD
        LR   R15,R1        LOAD LENGTH OF MESSAGE                  DASD
        BCTR R15,0         SUBTRACT 1 FOR EXECUTE INST             DASD
        EX   R15,S23CLCBL                                          DASD
        BE   S23GOBK2      ITS BLANK  LETS NOT PRINT IT            DASD
         B     S23SHORT            RETURN AND WRITE LINE2         76200
S23CLCBL CLC  S23LNE2+1(*-*),S23LNE2                              DASD
S23GOBK2 DS    0H                                                 76200
         CLI S23SEV,5           JOL TERMINAL ERROR ?
         BNE  S23LMRET
         AIF   (&X8).X8480
         JOLCLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ),MF=(E,CALLAREA)
         AGO   .NX8480
.X8480   ANOP
         JOLCLOSE (INSTRUCT,,PRINT,,RETN),MF=(E,CALLAREA)
.NX8480  ANOP
         ABEND 1,DUMP STEP
S23LMRET DS    0H
         JOLRETN
         LTORG
         DC   80S(*)
         AIF   (&X8).X8500
         TITLE 'UJEISPDQ:KEEP EXTRA PDQ ISAM ENTRYS'               DASD
* THIS LITTLE CSECT WILL KEEP THE 2ND AND 3RD ENTRIES       *      DASD
* WHICH ARE IN THE PDQ FROM A ISAM DATASET                  *      DASD
*                                                           *      DASD
* NOW ALL A J.O.L. PROGRAMMER HAS TO DO IS SAY              *      DASD
* CATLG ON ANY 1 OF THE 3 DCLS WHICH DEFINE                 *      DASD
* INDEX, PRIME OR OVFLOW                                    *      DASD
*                                                           *      DASD
* AND THE KEEP MODULE WILL CALL THIS GUY AND                *      DASD
* HE WILL SEARCH THE PDQ FOR MORE ENTRIES AND               *      DASD
* HANDLE THEM THE SAME WAY                                  *      DASD
*                                                           *      DASD
* ALSO THE JFCB VOL COUNT WILL BE UPDATED TO A MAX OF 3     *      DASD
* SO WHEN THE CATALOGUE MODULE GETS CONTROL THE VOL COUNT   *      DASD
* AND VOLUMES ARE IN GOOD SHAPE                             *      DASD
*                                                           *      DASD
*                                                           *      DASD
* SO CLEM IF YOUR READING THESE COMMENTS ALL I DID          *      DASD
* WAS COPY YOUR WORK IN THE UJE81PDQ MODULE                 *      DASD
* AND ADDED A FEW THINGS HERE AND THERE                     *      DASD
*                                                           *      DASD
* J.O.L. IS NOW BETTER THAN JCL WHEN IT COMES TO ISAM       *      DASD
*                                                           *      DASD
         JOLSAVE CSECT=UJEISPDQ                                    DASD
* THIS CSECT MUST FIND THE PDQ ENTRY THAT REFERS TO THE DSNAME     DASD
*    IN THE DSNAME FIELD. A 4 IS RETURNED IF IT CAN'T              DASD
*                                                                  DASD
******                                                             DASD
* CHECK IF JCTPDIP = 0 (MAY BE IF RUNNING UNDER                    DASD
*                       TSO).                                      DASD
******                                                             DASD
         SPACE 1                                                   DASD
         CLC   JCTPDIP,=F'0'                                       DASD
         BE    EISRTN                                              DASD
         MVI   EISDSN,0      SET DSN SERCH ARG TO ZERO             DASD
         MVI   ISINPDQ,2     SET SERCH NO. TO 2                    DASD
         CLI   VS,C'2'       MVS                                   DASD
         BNE   EISGO         NO START LOOKING FOR SECOND CONCAT    DASD
         MVI   ISINPDQ,1     SET SERCH NO. TO 1                    DASD
*REMEMBER THAT THE KEEP GOT RID OF THE 1ST ENTRY ALREADY--MVS ONLY-DASD
EISGO    DS    0H                                                  DASD
         GETJOBQ PDQDECB2,JCTPDIP                                  DASD
         B     EISGOTRD                                            DASD
EISREAD1 GETJOBQ PDQDECB2,CALLAREA                                 DASD
EISGOTRD DS    0H                                                  DASD
         CLI   VS,C'2'   MVS?                                      DASD
         BNE   EISNMVS1                                            DASD
EISMVDS1 LA    R14,*+4       POINT TO MVS CLC AREA                 DASD
         CLC   DDDSNAME,PDIDSN1                                    DASD
         BE    EISPASS1                                            DASD
         CLC   DDDSNAME,PDIDSN2                                    DASD
         BE    EISPASS2                                            DASD
         CLC   DDDSNAME,PDIDSN3                                    DASD
         BE    EISPASS3                                            DASD
* NOT IN PDI, GET NEXT                                             DASD
         CLC   =AL3(0),PDINPDIP  IS THIS THE LAST BLOCK?           DASD
         BE    EISRTN    YES, NOT FOUND THEN                       DASD
         GETJOBQ  PDQDECB2,PDINPDIP                                DASD
         B     EISMVDS1                                            DASD
EISNMVS1 DS    0H                                                  DASD
         LA     R14,*+4         POINT TO NEXT CLC                  DASD
         CLC   DDDSNAME,PDQDSN1                                    DASD
         BE    EISPASS1                                            DASD
         CLC   DDDSNAME,PDQDSN2                                    DASD
         BE    EISPASS2                                            DASD
         CLC   DDDSNAME,PDQDSN3                                    DASD
         BE    EISPASS3                                            DASD
* NOT IN THAT BLOCK,GET THE NEXT                                   DASD
         CLC   =AL3(0),PDQNPDQ LAST BLOCK IN PDQ ?                 DASD
         BE    EISRTN        YES,THERE-FORE COULDN'T FIND DSET     DASD
         MVC   CALLAREA,PDQNPDQ                                    DASD
         MVI   CALLAREA+3,0                                        DASD
*                                                                  DASD
         B     EISREAD1                                            DASD
EISPASS1 MVC   PDQDSNNO,=H'0'                                      DASD
         B     EISPDQB                                             DASD
EISPASS2 MVC   PDQDSNNO,=H'1'                                      DASD
         B     EISPDQB                                             DASD
EISPASS3 MVC   PDQDSNNO,=H'2'                                      DASD
EISPDQB  DS    0H                                                  DASD
* THERE USED TO BE A NOTE FOR JOBQ HERE, NOT NEC NOW               DASD
         ST    R1,APDQDIR       AND SAVE IT                        DASD
         ST    R14,EISR14       SAVE RETURN POINTER                DASD
         SR    R1,R1            CLEAN UP R1                        DASD
         IC    R1,EISDSN        LOAD SEARCH ARG                    DASD
         LA    R1,1(R1)         UP IT BY 1                         DASD
         STC   R1,EISDSN        PUT THE BUGGER BACK                DASD
         CLC   EISDSN,ISINPDQ   DO WE HAVE A HIT                   DASD
         BE    EISGOOD          ...YEP                             DASD
EISTRYA  DS    0H                                                  DASD
         L     R14,EISR14       RELOAD R14 WITH GOOOOD STUFF       DASD
* NOW RETURN TO THE NEXT COMPARE INSTRUCTION  HOPEFULLY            DASD
         CLC   PDQDSNNO,=H'0'                                      DASD
         BE    10(R14)                                             DASD
         CLC   PDQDSNNO,=H'1'                                      DASD
         BE    20(R14)                                             DASD
*        CLC   PDQDSNNO,=H'2'                                      DASD
         B     30(R14)                                             DASD
EISGOOD  DS    0H                                                  DASD
         CLI   VS,C'2'     MVS                                     DASD
         BNE   EISNMVS2                                            DASD
* GET SIOT FOR MVS SYSTEMS                                         DASD
         LH    R1,PDQDSNNO                                         DASD
         MH    R1,=AL2(PDILEN)                                     DASD
         LA    R14,PDISIOT1(R1)   GET SIOT ADDRESS LOCN            DASD
         MVC   CALLAREA,0(R14)                                     DASD
         B     EISGETSI         GO GET THE SIOT                    DASD
EISNMVS2 DS    0H                                                  DASD
         MVC   CALLAREA,PDQABLK                                    DASD
         MVI   CALLAREA+3,0                                        DASD
         GETJOBQ PDQDECB,CALLAREA                                  DASD
* NOW GET THE SIOT AS WELL                                         DASD
         LH    R1,PDQDSNNO     DATA SET NUMBER                     DASD
         MH    R1,=AL2(PDQBLKLN) LENGTH OF BLOCK                   DASD
         LA    R1,PDQASIOT(R1)   ABSOLUTE ADDRESS                  DASD
         MVC   CALLAREA(3),0(R1) SIOT TTR                          DASD
         MVI   CALLAREA+3,0                                        DASD
EISGETSI DS    0H                                                  DASD
         GETJOBQ SIOTDECB,CALLAREA                                 DASD
EISINPDQ DS    0H                                                  DASD
* NOW JUST BECAUSE THE NAME APPEARS IN THE PDQ DOESN'T MEAN FOR    DASD
*    1 SECOND THAT IT HASN'T :-                                    DASD
*          1.  BEEN SCRATCHED                                      DASD
*          2.  BEEN ALREADY KEPT                                   DASD
         LH    R1,PDQDSNNO     1ST,2ND OR 3RD NAME IN PDQ ?        DASD
         CLI   VS,C'2'    IS IT AN MVS SYSTEM?                     DASD
         BNE   EISNMV3S  NO                                        DASD
* OK, MVS HAS DIFFERENT TYPE OF PASSED DATA SET Q                  DASD
         MH    R1,=AL2(PDILEN)                                     DASD
         LA    R14,PDITERM1(R1)                                    DASD
         B     EISNMVS3                                            DASD
EISNMV3S MH    R1,=AL2(PDQBLKLN)                                   DASD
         LA    R14,PDQTERM(R1)                                     DASD
EISNMVS3 DS    0H                                                  DASD
         TM    0(R14),X'C0'    OLD,DELETE ?                        DASD
         B     *+8             ****************                    DASD
         BO    EISAGN                                              DASD
         SPACE 3                                                   DASD
*** LAST BYTE OF JFCB TTR =0 IN SIOT                               DASD
         GETJOBQ JFCBDECB,SCTPJFCB  GET THE JFCB                   DASD
         CLI   JFCBVOLS,X'FF'  UNOPENED SCRATCH VOLUME ?           DASD
         BNE   EISNOTFF        GO WRITE BACK JFCB,SIOT             DASD
*          JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,     DASD
*              ''' NOT KEPT:UNOPENED SCRATCH VOLUME'               DASD
         B     EISAGN                                              DASD
EISNOTFF DS    0H                                                  DASD
         NI    JFCBIND2,B'01111111' TELL OS AN OLD DATA SET        DASD
         OI    JFCBIND2,B'01000000'                                DASD
         PUTJOBQ JFCBDECB                                          DASD
         MVC   CALLAREA,SIOT                                       DASD
         MVI   CALLAREA+3,0                                        DASD
         GETJOBQ SIOTDECB,CALLAREA                                 DASD
         CLI   DDDISP+1,C'L'  LAST USE OF DATA SET ?               DASD
*                             IF WE CAN LET OS UNLOAD ?            DASD
         BNE   EISNLAST       NOT LAST USE                         DASD
* MARK SIOT AND LET IT THINK WE HAVE FINISHED WITH                 DASD
*  THE DATASET (WHICH WE HAVE, OF COURSE).                         DASD
         NI    SCTSDISP,X'FF'-SIOTRETN-S3400DSP-PRIVATE            DASD
         OI    SCTSDISP,8     TURN KEEP ON                         DASD
         OI    SCTSBYT2,SCTRECVD MARK RECIEVED                     DASD
         B     EISMAKOL       MAKE IT OLD, RE-WRITE SIOT           DASD
EISNLAST DS    0H                                                  DASD
         OI    SCTSDISP,B'00001000'   SIOT = KEEP                  DASD
EISMAKOL OI    SCTSBYT4,1     MARK OLD                             DASD
         PUTJOBQ SIOTDECB                                          DASD
         SPACE 3                                                   DASD
* NOW PUT THE VOLSERS INTO DDVOLUME    NO DUPS OFCOURCE            DASD
         SR    R14,R14        CLEAR REG14                          DASD
         IC    R14,JFCBNVOL   INSERT JFCB VOLUME COUNT             DASD
         LA    R1,JFCBVOLS    POINT TO JFCB VOLSERS                DASD
EISLOADV LA    R15,DDVOLUME   POINT TO JOL VOLSER AREA             DASD
         CLC   0(6,R15),0(R1) EQUAL VOLUMES ?                      DASD
         BE    EISNMOVE       YEP DONT BOTHER TO ADD IT            DASD
EISLUP   CLC   0(6,R15),BLANKS BUCKET EMPTY FOR NEW GUY ?          DASD
         BE    EISMOVE        YEP GO DO IT                         DASD
         LA    R15,6(R15)     BUMP TO NEXT ENTRY                   DASD
         C     R15,=A(DDVOLUME+30) HOPE WE DONT HAVE TO MANY       DASD
         BNH   EISLUP         NOPE                                 DASD
         B     EISCVOL        ERROR HERE BETTER TELL SOMEONE       DASD
EISMOVE  MVC   0(6,R15),0(R1) INSERT NEW VOLSER                    DASD
EISNMOVE LA    R1,6(R1)       UP TO NEXT JFCB VOLSER               DASD
         BCT   R14,EISLOADV   RETURN TO LOOK                       DASD
EISCVOL  LA    R15,DDVOLUME   POINT TO JOL VOLSER AREA AGAIN       DASD
         LA    R14,5          STOP AFTER FIVE                      DASD
         SR    R1,R1          CLEAR COUNTER                        DASD
EISJFVOL CLC   0(6,R15),BLANKS END OF VOLSER LIST ?                DASD
         BE    EISTJFCB       YES SIR                              DASD
         LA    R1,1(R1)       UP COUNTER                           DASD
         LA    R15,6(R15)     UP POINTER                           DASD
         BCT   R14,EISJFVOL    RETURN                              DASD
EISTJFCB STC   R1,JFCBNVOL    STORE NEW VOLCOUNT IN JFCB VOL COUNT DASD
EISDVOL  DS    0H                                                  DASD
         BAL   R14,E00FXVOL    SET UP VOLUME(S) IN #VOL            DASD
* NOW TO MARK THE PDQ                                              DASD
* TEST IF MVS, DIFFERENT...                                        DASD
         CLI   VS,C'2'   MVS?                                      DASD
         BNE   EISNMVS4  NOPE ->                                   DASD
* MVS SIOT CONTAINS THE UCB POINTER, MVT THE PDG DOES              DASD
         LH    R14,SCTUTYPE                                        DASD
         B     EISTUNIT                                            DASD
EISNMVS4 DS    0H                                                  DASD
         MVC   CALLAREA,PDQABLK                                    DASD
         MVI   CALLAREA+3,0                                        DASD
         GETJOBQ PDQDECB,CALLAREA                                  DASD
         LH    R1,PDQDSNNO                                         DASD
         MH    R1,=AL2(PDQBLKLN)                                   DASD
         L     R14,PDQUCBS(R1) GET UCB POINTER FOR DEVICE TYPE     DASD
         MVC   SCTUTYPE,16(R14) MOVE IN UCB DEVICE TYPE            DASD
EISTUNIT DS    0H                                                  DASD
EISDA    NI    SCTUTYPE+1,X'FF'-UCBRR TURN OFF 'SHARE'             DASD
EISNOTDU DS    0H                                                  DASD
         SPACE 2                                                   DASD
         CLI   VS,C'2'  MVS AGAIN?                                 DASD
         BNE   EISNMVS5                                            DASD
         LH    R1,PDQDSNNO                                         DASD
         MH    R1,=AL2(PDILEN)                                     DASD
         LA    R14,PDITERM1(R1)                                    DASD
         B     EISMARK9                                            DASD
EISNMVS5 DS    0H                                                  DASD
         LA    R14,PDQTERM(R1)                                     DASD
EISMARK9 DS    0H                                                  DASD
         NI    0(R14),X'0F'     TURN OFF TOP 4 BITS                DASD
         CLI   DDDISP+1,C'L'   LAST USE,IE OLD,KEEP ?              DASD
         BNE   EISPASS                                             DASD
         OI    0(R14),B'01000000' OLD,KEEP                         DASD
         NI    0(R14),B'11000000'  INDICATE RECIEVED               DASD
         B     EISMARKD                                            DASD
EISPASS  OI    0(R14),B'11100000' OLD,PASS                         DASD
EISMARKD DS    0H                                                  DASD
         CLI   VS,C'2'    MVS AGAIN?????                           DASD
         BNE   EISNMVS6                                            DASD
         SH    R14,=H'44'         BACKUP TO DSNAME                 DASD
         MVI   0(R14),C' '        WIPE OUT THE NAME IN PDQ         DASD
         PUTJOBQ  PDQDECB2                                         DASD
         B     EISRETN0                                            DASD
EISNMVS6 DS    0H                                                  DASD
         PUTJOBQ PDQDECB                                           DASD
         SPACE 3                                                   DASD
EISRETN0 DS    0H                                                  DASD
         CLI   ICOMMAND,C'K'   IS THIS A KEEP INSTRUCTION?         DASD
         BNE   EISAGN       NO,SO NO MESSAGE,JUST RETURN           DASD
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            * :
               ''' KEPT ON VOL(S) ',#VOL                           DASD
EISAGN   CLI   VS,C'2'        MVS                                  DASD
         BE    EISAGNVS       YEP                                  DASD
         CLI   ISINPDQ,3        ARE WE ALL DONE HERE               DASD
         BE    EISRTN           .....YOU BETCHYA                   DASD
         MVI   ISINPDQ,3        SET SERCH TO DSN # 3               DASD
         B     EISTRYA        GO BACK TO GET EM                    DASD
EISAGNVS CLI   ISINPDQ,2        ARE WE ALL DONE HERE               DASD
         BE    EISRTN           .....YOU BETCHYA                   DASD
         MVI   ISINPDQ,2        SET SERCH TO DSN # 2               DASD
         B     EISTRYA        GO BACK TO GET EM                    DASD
EISRTN   MVI   ISINPDQ,C'1'     SET THIS GUY BACK TO A ONE         DASD
         JOLRETN RC=0                                              DASD
EISR14   DS    F                                                   DASD
EISDSN   DS    1C                                                  DASD
         LTORG                                                     DASD
.X8500   ANOP
         AIF   (&X8).X8520
     TITLE 'UJEDEVNM:SEARCH DEVNAMET'                              DASD
          JOLSAVE CSECT=UJEDEVNM                                   DASD
*******************************************************************DASD
*  SEARCH THE SYSTEMS DEVICE NAME TABLE TO OBTAIN THE             *DASD
*  THE DEVICE TYPE NEEDED FOR A CAMLST FOR A SCRATCH              *DASD
*  OR  KEEP                                                       *DASD
*                                                                 *DASD
*  SEARCH ARGUMENT = DDUNIT IN INSTRUCT FILE                      *DASD
*  DEVNAMET FORMAT                                                *DASD
*  EACH ENTRY IS 12 BYTES                                         *DASD
*  BYTES 1-8 = UNIT NAME  ECT '3330-1' OR 'TAPE'                  *DASD
*  BYTES 9-12 = CODE    X'3070200D'                               *DASD
*                                                                 *DASD
*******************************************************************DASD
          LOAD EP=DEVNAMET   LOAD THE KNOW IT ALL                  DASD
          LTR  R1,R0         GET ADDRESS OF HIM                    DASD
          BZ   EDVDEAD       SORRY                                 DASD
          L    R15,0(R1)     LOAD NUMBER OF ENTRIES IN TABLE       DASD
          MH   R15,=H'12'    MULT BY TABLE ENTRRY SIZE             DASD
          LA   R1,4(R1)      ADD 4 TO START ADDRESS OF TABLE       DASD
          AR   R15,R1        CALC ENDD OF TABLE                    DASD
          LA   R14,12        INCREMENT                             DASD
          CLC  DDUNIT,0(R1)  HOPE ITS HERE                         DASD
          BE   EDVALIVE      GO DO THE SCRATCH NOW                 DASD
          BXLE R1,R14,*-10   ROUND ROBIN                           DASD
EDVDEAD   JOLRETN RC=4                                             DASD
EDVALIVE DS    0H                                                  DASD
          MVC  SCTUTYPE,8(R1) MOVE IN THE DEVICE TYPE              DASD
          JOLRETN RC=0                                             DASD
.X8520   ANOP
         TITLE 'UJS45AER  ISSUE GET-FILE ERROR MESSAGE'
         JOLSAVE CSECT=UJS45AER
         SPACE 3
         CH    R1,=H'184'
         BH    X8GETINV
         B     X8GETERR(R1)
X8GETERR B     X8GET0        0
         B     X8GET4        4
         B     X8GET8        8
         B     X8GET12      12
         B     X8GET16      16
         B     X8GET20      20
         B     X8GET24      24
         B     X8GET28      28
         B     X8GETINV     32
         B     X8GETINV     36
         B     X8GETINV     40
         B     X8GETINV     44
         B     X8GETINV     48
         B     X8GETINV     52
         B     X8GETINV     56
         B     X8GET60      60
         B     X8GET64      64
         B     X8GETINV     68
         B     X8GET72      72
         B     X8GET76      76
         B     X8GET80      80
         B     X8GET84      84
         B     X8GET88      88
         B     X8GET92      92
         B     X8GETINV     96
         B     X8GET100    100
         B     X8GET104    104
         B     X8GET108    108
         B     X8GETINV    112
         B     X8GETINV    116
         B     X8GET120    120
         B     X8GETINV    124
         B     X8GET128    128
         B     X8GET132    132
         B     X8GET136    136
         B     X8GET140    140
         B     X8GET144    144
         B     X8GET148    148
         B     X8GET152    152
         B     X8GET156    156
         B     X8GET160    160
         B     X8GET164    164
         B     X8GET168    168
         B     X8GET172    172
         B     X8GET176    176
         B     X8GET180    180
         B     X8GETINV    184
X8GET0   JOLERR 000,'DATA SET ',#DSN,' ALLOCATED ON *******'
         B     X8GETRET
X8GET4   JOLERR 504,'DATA SET ',#DSN,' HAS INVALID PARAMETERS'
         B     X8GETRET
X8GET8   JOLERR 508,'DATA SET ',#DSN,' HAS INVALID PARAMETERS'
         B     X8GETRET
X8GET12  JOLERR  312,'DATA SET ',#DSN,' IS A FILE OTHER THAN A DUMMY FI*
               LE FOR ACCESS NAME ',DDDDNAME
         B     X8GETRET
X8GET16  JOLERR  216,'DATA SET ',#DSN,' HAD RXV,DIAG OR NSL SPECIFIED A*
               ND NO MKEY WAS SPECIFIED'
         B     X8GETRET
X8GET20  JOLERR  320,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- OPERATOR*
                WOULD NOT MOUNT THE VOLUME'
         B     X8GETRET
X8GET24  JOLERR 524,'INSUFFICENT WORK AREA FOR GETFL MACRO'
         B     X8GETRET
X8GET28  JOLERR 328,'FILE NOT CONCATENATED BECAUSE:-'
         JOLERR 329,'A) AN ATTEMPT WAS MADE TO CONCAT TO AN OPEN FILE'
         JOLERR 330,'B) INVALID ACNAME WAS SPECIFIED'
         JOLERR 331,'C) SOUT,ISF,CONT,DB,DC,DT,DD,DZ OR SAME WAS SPECIF*
               IED'
         B     X8GETRET
X8GET60  JOLERR  360,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- ERROR IN*
                THE CATALOGUE'
         B     X8GETRET
X8GET64  JOLERR  364,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- CATALOGU*
               E LOCKED'
         B     X8GETRET
X8GET72  JOLERR  372,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- DATA SET*
                WAS NOT IN CATALOGUE - SEARCH FAILED'
         B     X8GETRET
X8GET76  JOLERR  376,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- FILE NAM*
               E AGREES WITH THE GROUP NAME OF ALREADY CATALOGUED GENER*
               ATION DATA SET (DURING CATALOGUING)'
         B     X8GETRET
X8GET80  JOLERR  380,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- FILE NAM*
               E AGREES WITH THE GROUP NAME OF ALREADY CATALOGUED GENER*
               ATION DATA SET (DURING REFERENCE TO THE CATALOGUE)'
         B     X8GETRET
X8GET84  JOLERR  384,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- FILE NAM*
               E IS ALREADY CATALOGUED (GDG ONLY)'
         B     X8GETRET
X8GET88  JOLERR  388,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- FILE NAM*
               E IS ALREADY CATALOGUED'
         B     X8GETRET
X8GET92  JOLERR  392,'DATA SET ',#DSN,' WAS NOT ALLOCATED  --- A HARWAR*
               E ERROR OCCURRED WHEN READING THE CATALOGUE'
         B     X8GETRET
X8GET100 JOLERR  3100,'DATA SET ',#DSN,' WAS NOT ALLOCATED  SYNTAX ERRO*
               R IN DATA SET NAME'
         B     X8GETRET
X8GET104 JOLERR  3104,'DATA SET ',#DSN,' WAS NOT ALLOCATED  CATALOGUE H*
               AS NO SPACE'
         B     X8GETRET
X8GET108 JOLERR  3108,'DATA SET ',#DSN,' WAS NOT ALLOCATED - PLSQA FULL*
                '
         B     X8GETRET
X8GET120 JOLERR  3120,'DATA SET ',#DSN,' WAS NOT ALLOCATED  - SYSTEM HA*
               S NO CATALOGUE'
         B     X8GETRET
X8GET128 JOLERR 3128,'DATA SET ',#DSN,' WAS NOT ALLOCATED  BECAUSE:-'
         JOLERR 3129,'A) THE VOLUME WAS NOT MOUNTED'
         JOLERR 3130,'B) THE SAME VOLUME IS REQUIRED TWICE IN THE SAME *
               JOB'
         JOLERR 3131,'C) THE VOLUME IS BEING USED BY ANOTHER JOB'
         JOLERR 3132,'D) A PARAMETER CONTAINS AN ERROR'
         B     X8GETRET
X8GET132 JOLERR  3133,'DATA SET ',#DSN,' WAS NOT ALLOCATED - DATA SET I*
               S LOCKED'
         B     X8GETRET
X8GET136 JOLERR  3136,'DATA SET ',#DSN,' WAS NOT ALLOCATED - UNIT IS OF*
               F LINE'
         B     X8GETRET
X8GET140 JOLERR  3140,'DATA SET ',#DSN,' WAS NOT ALLOCATED ',          *
               'DATA SET IS READ ONLY, AND CANNOT BE WRITTEN INTO'
         B     X8GETRET
X8GET144 JOLERR  3144,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'IT WAS REQUESTED AS NEW, BUT ALREADY EXISTS'
         B     X8GETRET
X8GET148 JOLERR  3148,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'VTOC IS FULL'
         B     X8GETRET
X8GET152 JOLERR  3152,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'NO SPACE ON VOLUME ',DDVOLUME
         B     X8GETRET
X8GET156 JOLERR  3156,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'DATA SET IS NOT ON VOLUME'
         B     X8GETRET
X8GET160 JOLERR  3160,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'INCORRECT PASSWORD'
         B     X8GETRET
X8GET164 JOLERR  3164,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'A HARDWARE ERROR ERROR OCCURRED'
         B     X8GETRET
X8GET168 JOLERR  3168,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'THE FILE IS ALREADY LOCKED'
         B     X8GETRET
X8GET172 JOLERR  3172,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'SHORTAGE OF IO DEVICES'
         B     X8GETRET
X8GET176  JOLERR 3176,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'NO SPACE LEFT ON WORK VOLUMES'
         B     X8GETRET
X8GET180  JOLERR 3180,'DATA SET ',#DSN,' WAS NOT ALLOCATED - ',        *
               'A CANCEL COMMAND WAS ISSUED WHILE WAITING FOR A MOUNT'
         B     X8GETRET
X8GETINV  JOLERR 5999,'UNRECOGNISED RETURN CODE FROM GETFL '
X8GETRET B    RETN0
         TITLE 'ISSUE FREE-FILE ERROR MESSAGE'
         JOLSAVE CSECT=UJS46FER
    SPACE 3
         CH    R1,=H'188'
         BH    X8FREINV
         B     X8FREERR(R1)
X8FREERR B     X8FRE0        0
         B     X8FRE4        4
         B     X8FRE8        8
         B     X8FRE12      12
         B     X8FRE16      16
         B     X8FRE20      20
         B     X8FREINV     24
         B     X8FREINV     28
         B     X8FREINV     32
         B     X8FREINV     36
         B     X8FREINV     40
         B     X8FREINV     44
         B     X8FREINV     48
         B     X8FREINV     52
         B     X8FREINV     56
         B     X8FRE60      60
         B     X8FRE64      64
         B     X8FRE68      68
         B     X8FRE72      72
         B     X8FRE76      76
         B     X8FREINV     80
         B     X8FRE84      84
         B     X8FRE88      88
         B     X8FRE92      92
         B     X8FREINV     96
         B     X8FREINV    100
         B     X8FRE104    104
         B     X8FREINV    108
         B     X8FRE112    112
         B     X8FREINV    116
         B     X8FRE120    120
         B     X8FREINV    124
         B     X8FREINV    128
         B     X8FREINV    132
         B     X8FREINV    136
         B     X8FREINV    140
         B     X8FREINV    144
         B     X8FRE148    148
         B     X8FRE152    152
         B     X8FRE156    156
         B     X8FRE160    160
         B     X8FREINV    164
         B     X8FREINV    168
         B     X8FREINV    172
         B     X8FREINV    176
         B     X8FRE180    180
         B     X8FRE184    184
X8FRE0   JOLERR 000,'DATA SET ',#DSN,' FREED'
         B     X8FRERET
X8FRE4   JOLERR 504,'DATA SET ',#DSN,' HAS INVALID PARAMETERS'
         B     X8FRERET
X8FRE8   JOLERR 508,'DATA SET ',#DSN,' HAS INVALID PARAMETERS'
         B     X8FRERET
X8FRE12  JOLERR  312,'DATA SET ',#DSN,' IS A DUMMY FILE... CANNOT BE FR*
                EED'
         B     X8FRERET
X8FRE16  JOLERR  216,'DATA SET ',#DSN,' IS A SYSTEM FILE AND CANNOT BE *
               FREED WITHOUT SPECIAL PRIVILEGES'
         B     X8FRERET
X8FRE20  JOLERR 420,'DATA SET ',#DSN,' IS NOT FREED: JOB STACK IS FULL'
         B     X8FRERET
X8FRE60  JOLERR  360,'DATA SET ',#DSN,' WAS NOT CATALOGUED - NULLIFIED *
               BECAUSE OF ABEND ??????'
         B     X8FRERET
X8FRE64  JOLERR  364,'DATA SET ',#DSN,' WAS NOT CATALOGUED --- CATALOGU*
               E LOCKED'
         B     X8FRERET
X8FRE68  JOLERR  368,'DATA SET ',#DSN,' WAS NOT UNCATLOGUED -- FILE NAM*
               E AGREES WITH THE GROUP NAME OF ALREADY CATALOGUED GENER*
               ATION DATA SET'
         B     X8FRERET
X8FRE72  JOLERR  372,'DATA SET ',#DSN,' WAS NOT FREED --- DATA SET WAS *
                NOT IN CATALOGUE'
         B     X8FRERET
X8FRE76  JOLERR  376,'DATA SET ',#DSN,' WAS NOT CATALOGUED --- FILE NAM*
               E AGREES WITH THE GROUP NAME OF ALREADY CATALOGUED GENER*
               ATION DATA SET (DURING CATALOGUING)'
         B     X8FRERET
X8FRE84  JOLERR  384,'DATA SET ',#DSN,' WAS NOT CATALOGUED --- FILE NAM*
               E AGREES WITH THE GROUP NAME OF ALREADY CATALOGUED GENER*
               ATION DATA SET'
         B     X8FRERET
X8FRE88  JOLERR  388,'DATA SET ',#DSN,' WAS NOT CATALOGUED --- FILE NAM*
               E IS ALREADY CATALOGUED'
         B     X8FRERET
X8FRE92  JOLERR  392,'DATA SET ',#DSN,' WAS NOT FREED  --- A HARWARE ER*
               ROR OCCURRED WHEN USING THE CATALOGUE'
         B     X8FRERET
X8FRE104 JOLERR  3104,'DATA SET ',#DSN,' WAS NOT FREED CATALOGUE HAS NO*
                SPACE'
         B     X8FRERET
X8FRE112 JOLERR  3112,'DATA SET ',#DSN,' IS CURRENTLY BEING CATALOGUED *
                (GENERATION DATA SET)'
         B     X8FRERET
X8FRE120 JOLERR  3120,'DATA SET ',#DSN,' WAS NOT FREED - SYSTEM HAS NO *
               CATALOG'
         B     X8FRERET
X8FRE148 JOLERR 4148,'DATA SET ',#DSN,' CANNOT BE DELETED BECAUSE ',   *
               'IT IS BEING USED BY ANOTHER JOB'
         B     X8FRERET
X8FRE152 JOLERR  3152,'DATA SET ',#DSN,' WAS NOT DELETED ASS IT IS ON A*
                READ ONLY VOLUME'
         B     X8FRERET
X8FRE156 JOLERR  3156,'DATA SET ',#DSN,' WAS NOT FREED - A HARDWARE ERR*
               OR OCCURRED ON THE VTOC'
         B     X8FRERET
X8FRE160 JOLERR  3160,'ACNAME ',DDDDNAME,' WAS NOT FREED',             *
               ' - COULD NOT BE LOCATED'
         B     X8FRERET
X8FRE180 JOLERR  3180,'ACNAME ',DDDDNAME,' WAS NOT FREED',             *
               ' - SAME FILE SPECIFIED'
         B     X8FRERET
X8FRE184 JOLERR  3184,'ACNAME ',DDDDNAME,' WAS NOT FREED',             *
               ' OPEN COUNTER IS NOT ZERO'
         B     X8FRERET
X8FRERET B     RETN0
X8FREINV JOLERR 5999,'FREE-FILE HAS GIVEN AN UNRECOGNISED RETURN CODE'
       TITLE 'UJELOCAT:LOCATE CATALOGUED DATASETS'                 DASD
         JOLSAVE CSECT=UJELOCAT                                    DASD
*        AIF   (&X8).X8540
         L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD
         USING VOLINFO,R15                                         DASD
         ST    R15,ELOLOCAT+12         POINT TO LOCATE AREA        DASD
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD
         MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD
         LOCATE ELOLOCAT                                           DASD
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD
         BNZ   ELORETN4                NOPE                        DASD
         JOLRETN RC=0  WE FOUND OUR STIFF LETS LEAVE               DASD
ELORETN4 DS    0H                                                  DASD
         MVC  DSNAME,0(R6)            MOVE BACK ORGINAL DATA SET NADASD
         B    RETN4                   TELL THE CALLER WE FAILED    DASD
ELOLOCAT CAMLST NAME,DSNAME,,0                                     DASD
.X8540   ANOP
*        B    RETN4
         DC C'COMPILE DATE=&SYSDATE.,TIME=&SYSTIME.'               DASD
         LTORG                                                     DASD
         DS    0D
         PRINT GEN,NODATA
         AIF  (NOT &X8).NOX8MAC
         TITLE 'FIXED LOW CORE'
         XAMFLC  DSECT=YES
PSA      EQU   FLC
PSATOLD  EQU   FLCTOLD            FOR MVS,F4 COMPATIBILITY
         TITLE 'COMMUNICATIONS VECTOR TABLE'
         XAMCVT  DSECT=YES
         TITLE 'TASK CONTROL BLOCK    '
         XAMTCB  DSECT=YES
TCBFLGS1 EQU   TCBFLAG1       EQUIVALENT FIELDS ON F4,X8
         TITLE 'REQUEST BLOCK         '
         XAMRB   DSECT=YES
         TITLE 'FILE CONTROL TABLE    '
         XDDFCT
         TITLE 'JOB-STEP CONTROL BLOCK'
         XDDJSCB
JSCBLEN  EQU   *-JSCB         MY NAME FOR ITS LENGTH
JSCBDISP EQU   0              MVS,F4 NAME FOR DISPLACEMENT TO START
JSCBOPTS EQU   JSCBSTS
         TITLE 'COMMAND SCHEDULER CONTROL BLOCK'
         XDDCSCB
.NOX8MAC ANOP
           END
