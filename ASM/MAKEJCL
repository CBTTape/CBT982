*
* THE JCL PRODUCED WILL:-
*  1. ATTEMPT TO DELETE ANY JOL DATA SETS
*  2. PRODUCE SEVERAL INSTREAM PROCEDURES
*  3. PRODUCE JCL TO COPY DOWN THE NEW DATA SETS
*  4. PERFORM ANY LINK EDITS THAT MAY BE REQUIRED
*  5. IF VS, PRINT DATA SETS THAT NEED ALTERATION FOR AUTHORISATION
*  6. COPY SOME PROCEDURES TO A PROCEDURE LIBRARY.
*
           MACRO
           JOLINST &JOBCARD='//TJOLINST JOB (FCO1ZXJV3,9,2),C.CLARKE,RE*
               GION=120K,CLASS=C',                                     *
               &SYSTEM=VS1,&WORKDEV=3330,&WORKVOL=,&TAPEDEV=2400-3,    *
               &ENDVOL=,&ENDDEV=3330,&BLKSIZE=,                        *
               &ENDLIB=SYS1.LINKLIB,&SCRATCH=YES,&PROCLIB=SYS1.PROCLIB,*
               &SPOOL=,&MACBLK=3440,                                   *
               &JOL=NO,&MEMBER=JOLGEN,&JOLTAPE=JOL3P1,&TAPEVER=,       *
               &JOLVER=JOL31,&JOLVER2=3.1,&JOLHERE=YES,&JOLVER3=31
        GBLC &TAPEJOL
           LCLA &ERR           SET ON IF ERROR DETECTED
           LCLC &LINKNME,&ZAPNAME
         LCLC  &AUTH,&JOLPROC,&LINKNAM
         LCLC  &J1,&J2,&J3,&J4
         AIF ('&TAPEVER' EQ '').NOTAPV
&TAPEJOL  SETC '&TAPEVER'
.NOTAPV   ANOP
.* PERFORM VALIDATION
           AIF ('&WORKVOL' NE '').WORKOK
           MNOTE 16,'NO WORK VOLUME SUPPLIED :- CODE ''WORKVOL=VOLUME''*
               '
&ERR       SETA 1
.WORKOK    ANOP
           AIF ('&ENDVOL' NE '').END1OK
           MNOTE 16,'NO FINAL VOLUME SPECIFIED FOR JOL PERMANENT DATA S*
               ETS :- CODE ''ENDVOL=VOLUME'''
&ERR       SETA 1
.END1OK    ANOP
           AIF ('&BLKSIZE' NE '').LINK1OK
           MNOTE 'NO LINK BLKSIZE SPECIFIED, DEFAULT WILL BE THAT OF YO*
               UR ''SYS1.LINKLIB'''
.LINK1OK   ANOP
&LINKNME   SETC 'HEWL'         SET FOR VS INITIALLY
&ZAPNAME   SETC 'HMASPZAP'     SET FOR VS INITIALLY
&AUTH      SETC '1'        SET FOR VS INITIALLY
&JOLPROC   SETC 'V1'
         AIF ('&SYSTEM' NE 'VS2').NNMVS
&JOLPROC   SETC 'V2'
.NNMVS     ANOP
           AIF ('&SYSTEM' EQ 'VM' OR '&SYSTEM' EQ 'VS1' OR '&SYSTEM'   *
               EQ 'VS2').VSSYS
&LINKNME  SETC 'IEWL'
&ZAPNAME   SETC 'IMASPZAP'
&AUTH      SETC ''
&JOLPROC   SETC 'OS'
           AIF ('&SYSTEM' EQ 'MFT' OR '&SYSTEM' EQ 'MVT').SYSOK
&ERR       SETA 1
           MNOTE 16,'SYSTEM INCORRECTLY SPECIFIED: &SYSTEM'
.SYSOK     ANOP
.VSSYS     ANOP
           AIF (&ERR EQ 0).GO
           MNOTE 16,'ERRORS DETECTED - NO INSTALLATION JCL PRODUCED'
           MEXIT
.GO        ANOP
           MNOTE 'INSTALLATION JCL IS FOR A &SYSTEM TYPE OPERATING SYST*
               EM'
           MNOTE 'THE FINAL VOLUME FOR THE PERMANENT DATA SET IS &ENDVO*
               L; THIS IS A &ENDDEV DEVICE'
.* NOW PRODUCE THE JOBCARD, WITH A COND CODE
  PUNCH &JOBCARD
  PUNCH '//* JOL INSTALLATION JCL FOR VERSION &JOLVER2'
           SEP
        PUNCH  '//*    INSTALLATION PROCEDURES'
    SEP
  PUNCH '//* INSTALLATION PROCEDURES'
  PUNCH '//*'
  PUNCH '//JOLASM PROC '
  PUNCH '//ASM    EXEC PGM=ASMBLR'
  PUNCH '//SYSPRINT DD SYSOUT=A,DCB=BLKSIZE=1210'
  PUNCH '//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,5))'
  PUNCH '//SYSUT2   DD UNIT=SYSDA,SPACE=(CYL,(5,5))'
  PUNCH '//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(5,5))'
  PUNCH '//SYSLIB    DD DSN=SYS1.MACLIB,DISP=SHR'
  PUNCH '//SYSPUNCH  DD DSN=&&OBJ,DISP=(MOD,PASS),'
  PUNCH '// UNIT=SYSDA,SPACE=(CYL,(5,5)),'
  PUNCH '// DCB=BLKSIZE=800'
  PUNCH '// PEND'
  PUNCH '//*'
  PUNCH '//****'
  PUNCH '//*'
  PUNCH '//JOLLKED PROC'
  PUNCH '//LKED   EXEC PGM=&LINKNME'
  PUNCH '//SYSPRINT   DD SYSOUT=A'
  PUNCH '//SYSUT1     DD UNIT=SYSDA,SPACE=(CYL,(5,5))'
  PUNCH '//OLD        DD DSN=&JOLVER..LOADTEMP,DISP=SHR'
  PUNCH '//SYSLIB     DD DSN=&JOLVER..LOADTEMP,DISP=SHR'
  PUNCH '//SYSLIN     DD DSN=&&OBJ,DISP=(OLD,DELETE)'
  PUNCH '//           DD DDNAME=SYSIN'
  PUNCH '// PEND'
           AIF ('&SCRATCH' NE 'YES').NOSCRA
    SEP
        PUNCH '//*     SCRATCH OLD &JOLVER DATA SETS'
   SEP
  PUNCH '//DELETE EXEC PGM=IEFBR14'
  PUNCH '//D DD DISP=(MOD,DELETE),SPACE=(TRK,1),UNIT=SYSDA,'
  PUNCH '//         DSN=&JOLVER..LOAD'
  PUNCH '//D DD DISP=(MOD,DELETE),SPACE=(TRK,1),UNIT=SYSDA,'
  PUNCH '//         DSN=&JOLVER..LOADTEMP'
  PUNCH '//D DD DISP=(MOD,DELETE),SPACE=(TRK,1),UNIT=SYSDA,'
  PUNCH '//         DSN=&JOLVER..SOURCE'
  PUNCH '//D DD DISP=(MOD,DELETE),SPACE=(TRK,1),UNIT=SYSDA,'
  PUNCH '//         DSN=&JOLVER..MACLIB'
  PUNCH '//D DD DISP=(MOD,DELETE),SPACE=(TRK,1),UNIT=SYSDA,'
  PUNCH '//         DSN=&JOLVER..CMDLIB'
  PUNCH '//D DD DISP=(MOD,DELETE),SPACE=(TRK,1),UNIT=SYSDA,'
  PUNCH '//         DSN=&JOLVER..INCLUDE'
  PUNCH '//D DD DISP=(MOD,DELETE),SPACE=(TRK,1),UNIT=SYSDA,'
  PUNCH '//         DSN=&JOLVER..PROCLIB'
  PUNCH '//D DD DISP=(MOD,DELETE),SPACE=(TRK,1),UNIT=SYSDA,'
  PUNCH '//         DSN=&JOLVER..LKED'
.NOSCRA   ANOP
          SEP
        PUNCH '//*    MOVE DATA SETS TO DISK'
        SEP
  PUNCH '//MOVE EXEC PGM=IEHMOVE'
  PUNCH '//SYSPRINT   DD SYSOUT=A'
  PUNCH '//SYSUT1     DD VOL=REF=SYS1.LINKLIB,DISP=OLD'
  PUNCH '//TAPE       DD DISP=(OLD,PASS),'
  PUNCH '//           VOL=SER=&JOLTAPE,UNIT=&TAPEDEV'
  PUNCH '//DISK1      DD DISP=OLD,VOL=SER=&WORKVOL,UNIT=&WORKDEV'
  PUNCH '//DISK2      DD DISP=OLD,VOL=SER=&ENDVOL,UNIT=&ENDDEV'
  PUNCH '//SYSIN  DD  *'
 MCOPY &JOLVER,&WORKDEV,&WORKVOL,&TAPEDEV,&JOLTAPE,2,LOAD,RENAME=TEMP
 MCOPY &JOLVER,&ENDDEV,&ENDVOL,&TAPEDEV,&JOLTAPE,3,INCLUDE
 MCOPY &JOLVER,&ENDDEV,&ENDVOL,&TAPEDEV,&JOLTAPE,4,CMDLIB
 MCOPY &JOLVER,&WORKDEV,&WORKVOL,&TAPEDEV,&JOLTAPE,5,LKED
 MCOPY &JOLVER,&WORKDEV,&WORKVOL,&TAPEDEV,&JOLTAPE,6,PROCLIB
 MCOPY &JOLVER,&WORKDEV,&WORKVOL,&TAPEDEV,&JOLTAPE,7,MACLIB
 MCOPY &JOLVER,&WORKDEV,&WORKVOL,&TAPEDEV,&JOLTAPE,8,SOURCE
     SEP
   PUNCH '//*     CATALOG NEW DISK DATA SETS'
    SEP
  PUNCH '//CATLG    EXEC PGM=IEFBR14'
 PUNCH '//D DD DISP=(OLD,CATLG),VOL=REF=*.MOVE.DISK1,DSN=&JOLVER..LOADT*
               EMP'
 PUNCH '//D DD DISP=(OLD,CATLG),VOL=REF=*.MOVE.DISK1,DSN=&JOLVER..LKED'
 PUNCH '//D DD DISP=(OLD,CATLG),VOL=REF=*.MOVE.DISK2,DSN=&JOLVER..INCLU*
               DE'
 PUNCH '//D DD DISP=(OLD,CATLG),VOL=REF=*.MOVE.DISK2,DSN=&JOLVER..CMDLI*
               B'
 PUNCH '//D DD DISP=(OLD,CATLG),VOL=REF=*.MOVE.DISK1,DSN=&JOLVER..MACLI*
               B'
 PUNCH '//D DD DISP=(OLD,CATLG),VOL=REF=*.MOVE.DISK1,DSN=&JOLVER..SOURC*
               E'
 PUNCH '//D DD DISP=(OLD,CATLG),VOL=REF=*.MOVE.DISK1,DSN=&JOLVER..PROCL*
               IB'
     SEP
   PUNCH '//*     ASSEMBLE INSTALLATION DETAILS'
     SEP
  PUNCH '//JOLGEN  EXEC JOLASM'
  PUNCH '//SYSIN   DD   DSN=&JOLVER..SOURCE(JOLSYSG),DISP=SHR'
  PUNCH '//        DD   DSN=&JOLVER..INSTAL(&MEMBER),DISP=SHR'
  PUNCH '//LINK    EXEC JOLLKED,PARM=''OL,LIST,MAP'''
  PUNCH '//SYSLMOD DD   DSN=&JOLVER..LOADTEMP(UJGENDET),DISP=SHR'
     SEP
   PUNCH   '//*     NOW COPY SELECTED MEMBERS TO ''&PROCLIB'''
     SEP
  PUNCH '//COPY     EXEC PGM=IEBCOPY'
  PUNCH '//SYSPRINT DD SYSOUT=A'
  PUNCH '//IN       DD DSN=&JOLVER..PROCLIB,DISP=SHR'
  PUNCH '//OUT      DD DSN=&PROCLIB,DISP=SHR'
  PUNCH '//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,5)'
  PUNCH '//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,5)'
  PUNCH ' COPY INDD=IN,OUTDD=OUT'
         AIF ('&SPOOL' EQ 'ASP').ASP
         AIF ('&SPOOL' EQ 'HASP').HASP
         AIF ('&SPOOL' EQ '').THERE
.ASP     ANOP
&JOLPROC SETC 'AS'            ASP SET UP
         AGO .THERE
.HASP    ANOP
&JOLPROC SETC  'HS'
.THERE ANOP
.* IF JOL ALREADY HERE, WE DON'T WANT TO UPSET THE OLD MEMBERS
     AIF ('&JOLHERE' EQ 'YES').ISHERE
&J1  SETC  'JOL'
&J2  SETC  'JOLC'
&J3  SETC  'JOLCGO'
&J4  SETC  'JOLRDR'
     AGO   .COPCRDS
.ISHERE   ANOP
&J1  SETC  'NJOL'
&J2  SETC  'NJOLC'
&J3  SETC  'NJOLCGO'
&J4  SETC  'NJOLRDR'
.COPCRDS   ANOP
  PUNCH ' SELECT MEMBER=((&JOLPROC.JOL,&J1,R))'
  PUNCH ' SELECT MEMBER=((&JOLPROC.JOLC,&J2,R))'
  PUNCH ' SELECT MEMBER=((&JOLPROC.JOLCGO,&J3,R))'
     AIF ('&SYSTEM' EQ 'MVS' OR '&SYSTEM' EQ 'VS2').NORDR
     AIF ('&SPOOL' EQ 'ASP' OR '&SPOOL' EQ 'HASP').NORDR
  PUNCH ' SELECT MEMBER=((&JOLPROC.RDR,&J4,R))'
     SEP
  PUNCH '//*         NOW BUILD THE GDG FOR JOL&JOLVER3..OP'
     SEP
  PUNCH '//BLDG EXEC PGM=IEHPROGM'
  PUNCH '//SYSPRINT DD SYSOUT=A'
  PUNCH '//RESCAT DD DISP=OLD,VOL=REF=SYS1.LINKLIB'
  PUNCH ' BLDG INDEX=JOL&JOLVER3..OP,ENTRIES=99,DELETE'

.NORDR     ANOP
     SEP
   PUNCH  '//*         NOW LINK TO &ENDLIB'
     SEP
  PUNCH '//LINK2  EXEC JOLLKED,PARM=''LIST,MAP,XREF,RENT'''
  PUNCH '//SYSLIN   DD  *'
  PUNCH ' INCLUDE SYSLIB($JOLMN&JOLVER3)'
     AUTH &AUTH      OUTPUT AUTH CARD IF NECESSARY
  PUNCH ' NAME $JOLMN&JOLVER3.(R)'
  PUNCH ' INCLUDE SYSLIB($JOLIN&JOLVER3.)'
     AUTH &AUTH      OUTPUT AUTH CARD IF NECESSARY
  PUNCH ' NAME $JOLIN&JOLVER3.(R)'
  PUNCH ' INCLUDE SYSLIB($JOLCP&JOLVER3.) JOL COMPILER'
     AUTH  &AUTH
  PUNCH ' NAME $JOLCP&JOLVER3.(R)'
  PUNCH ' INCLUDE SYSLIB(UJE60CAT)'
  PUNCH ' NAME UJE60CAT(R)'
  PUNCH ' INCLUDE SYSLIB($JOLSH&JOLVER3.)'
  PUNCH ' NAME $JOLSH&JOLVER3.(R)'
  PUNCH '//SYSLMOD  DD DSN=&ENDLIB,DISP=SHR'
     SEP
   PUNCH '//*         NOW RELINK &JOLVER..LOADTEMP TO FINAL VOLUME'
     SEP
  PUNCH '//LINK4  EXEC JOLLKED,PARM=''LIST,MAP,RENT,LET'''
  PUNCH '//SYSLIN DD DSN=&JOLVER..LKED(RELINK),DISP=SHR'
  PUNCH '//SYSLMOD DD DSN=&JOLVER..LOAD,'
  PUNCH '// SPACE=(CYL,(1,1,20)),'
  PUNCH '// DISP=(,CATLG),'
  PUNCH '// VOL=SER=&ENDVOL,UNIT=&ENDDEV,'
           AIF ('&BLKSIZE' NE '').LINKBLK
  PUNCH '// DCB=(SYS1.LINKLIB)'
           AGO .ENDL4
.LINKBLK   PUNCH '// DCB=(RECFM=U,BLKSIZE=&BLKSIZE)'
.ENDL4     ANOP
         SEP
       PUNCH '//*    ASSEMBLE USER EXIT AND VALIDATE ROUTINES'
         SEP
  PUNCH '//ASMVAL EXEC JOLASM'
         AIF ('MACBLK' GT '3440').MACBG1
  PUNCH '//SYSLIB DD DSN=&JOLVER..MACLIB,DISP=SHR'
  PUNCH '//       DD DSN=SYS1.MACLIB,DISP=SHR'
  AGO .GENIN1
.MACBG1 ANOP
  PUNCH '//SYSLIB DD'
  PUNCH '//       DD DSN=&JOLVER..MACLIB,DISP=SHR'
.GENIN1   ANOP
  PUNCH '//SYSIN  DD DSN=&JOLVER..SOURCE(UJUVALID),DISP=SHR'
  PUNCH '//ASMEXIT EXEC JOLASM'
         AIF ('MACBLK' GT '3440').MACBG2
  PUNCH '//SYSLIB DD DSN=&JOLVER..MACLIB,DISP=SHR'
  PUNCH '//       DD DSN=SYS1.MACLIB,DISP=SHR'
  AGO .GENIN2
.MACBG2 ANOP
  PUNCH '//SYSLIB DD '
  PUNCH '//       DD DSN=&JOLVER..MACLIB,DISP=SHR'
.GENIN2 ANOP
  PUNCH '//SYSIN  DD DSN=&JOLVER..SOURCE(UJUEXIT),DISP=SHR'
         AIF ('&SYSTEM' EQ 'VS1' OR '&SYSTEM' EQ 'MVS'                 *
               OR '&SYSTEM' EQ 'VS2').AUTH2
         MEXIT
.AUTH2   ANOP
         AIF ('&SYSTEM' NE 'VS1').SHRTAUT
  PUNCH '//AUTHZAP  EXEC PGM=&ZAPNAME'
  PUNCH '//SYSPRINT DD SYSOUT=A'
  PUNCH '//SYSLIB   DD DSN=SYS1.LINKLIB,DISP=SHR'
  PUNCH '//SYSIN    DD *'
  PUNCH ' DUMPT IEF161SD IEFSDPPT'
  PUNCH ' DUMPT IEFSD161 IEFSDPPT'
  PUNCH '/*'
.SHRTAUT  ANOP
  PUNCH '//PRINTAUT EXEC PGM=IEBGENER'
  PUNCH '//SYSPRINT DD SYSOUT=A'
  PUNCH '//SYSUT2   DD SYSOUT=A,DCB=(RECFM=FB,LRECL=80,'
  PUNCH '//            BLKSIZE=800)'
  PUNCH '//SYSIN    DD DUMMY'
  PUNCH '//SYSUT1   DD DSN=SYS1.PARMLIB(IEAAPF00),DISP=SHR'
           SEP
           MEND
           MACRO
           MCOPY &VER,&WKUN,&WKVOL,&TPUN,&TAPESER,&LABEL,&DSN,&RENAME=
         GBLC &TAPEJOL
         AIF ('&TAPEJOL' NE '').TESTIN    ***TESTINSTALLATION ****
           PUNCH ' COPY PDS=&VER..&DSN,TO=&WKUN=&WKVOL,                *
                           XXXXXXXXXX'
         AIF ('&RENAME' NE '').REN
           PUNCH '               FROM=&TPUN=(&TAPESER,&LABEL)'
         MEXIT
.REN     ANOP
           PUNCH '               FROM=&TPUN=(&TAPESER,&LABEL),         *
                               XXXXXXXXXXXX'
           PUNCH '               RENAME=&VER..&DSN&RENAME'
         MEXIT
.TESTIN     ANOP
           PUNCH ' COPY PDS=&VER..&DSN,TO=&WKUN=&WKVOL,                *
                           XXXXXXXXXX'
           PUNCH '               FROM=&TPUN=(&TAPESER,&LABEL),         *
                               XXXXXXXXXXXX'
           PUNCH '               RENAME=&TAPEJOL..&DSN&RENAME'
         MEND
         MACRO
         AUTH &A
         AIF ('&A' NE '1').NAUTH
 PUNCH ' SETCODE AC(1) SET AUTH FOR MVS OR VS1'
.NAUTH ANOP
         MEND
           MACRO
           SEP
   PUNCH '//*'
   PUNCH '//*'
   PUNCH '//*'
           MEND
         COPY INSTAL
         END
