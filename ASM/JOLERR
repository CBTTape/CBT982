         MACRO
&NAME    JOLERR &STMT=STMT
.* THIS MACRO WILL PUT INTO A LOCATION A STRING OF CHARACTERS
.* THE STRING MAY BE IN A BUFFER OR JOL MAY ITSELF CONTROL
.* THE WHERE-ABOUTS OF THE ERROR MESSAGE.
.*
.* SYSLIST(1) IS TAKEN TO BE THE ERROR SEVERITY AND ALSO THE
.* ERROR NUMBER.
         LCLA  &LITPOSN,&LITLEN,&LEN,&NUMCNT
         LCLC  &CSECT,&ERRNO
         LCLC  &JOLERR,&CHAR1
         LCLC  &CSECTNO                                           74303
         LCLC  &MODNAME
         LCLA  &LENGTH,&THIS,&NOVAR,&POSN,&L,&K,&STMTLEN
         AIF  (T'&NAME EQ 'O').NONAME
&NAME    DS   0H
.NONAME  ANOP
&STMTLEN SETA  4
&CSECT   SETC  '&SYSECT'(3,1)
&CSECTNO SETC  '&SYSECT'(4,2)
&ERRNO   SETC  '&SYSLIST(1)'(2,2)
&CHAR1   SETC  '&SYSLIST(1)'(1,1)
&MODNAME SETC  'UJS23EP'.'&CHAR1'
         SPACE 2
***********************************************************************
&THIS    SETA  2
&NUMCNT  SETA  1
.NUMLUP  ANOP
         AIF   (&THIS GT N'&SYSLIST).REALST   REAL START
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '#').IGNR
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '''').IGNR
         AIF   (T'&SYSLIST(&THIS) EQ 'C').IGNR
&LEN     SETA  L'&SYSLIST(&THIS)
         AIF   (T'&SYSLIST(&THIS) EQ 'H').HALF
         AIF   (T'&SYSLIST(&THIS) EQ 'F').FULL
         AIF   (T'&SYSLIST(&THIS) EQ 'X').BIT
         AIF   (T'&SYSLIST(&THIS) EQ 'R').XPLACO  EXPLICT LENGTH A
         AIF   (T'&SYSLIST(&THIS) EQ 'G').XPLFCO   OR F CONSTANTS
         MNOTE 12,'UNKNOWN DATA TYPE FOR &SYSLIST(&THIS)'
.HALF    LH    1,&SYSLIST(&THIS)
         AGO   .CONV         CONVERT TO CHAR
.FULL    L     1,&SYSLIST(&THIS)  LOAD THE NUMBER IN R1
         AGO .CONV             CONVERT TO CHAR
.BIT     ANOP
.XPLACO  ANOP
.XPLFCO  ANOP
.* HERE WE HAVE AN EXPLICTLY DECLARED ITEM,THEREFORE IT MAY NOT
.*   BE ALIGNED. DEPENDING ON THE LENGTH,WE SHALL DO DIFFERENT
.*   THINGS
         AIF   (&LEN EQ 1).IC
         AIF   (&LEN EQ 2).ICBY2
         AIF   (&LEN EQ 3).MVC3
         AIF   (&LEN EQ 4).MVC4
         MNOTE 12,'LENGTH FOR BINARY NUMBER NOT SUPPORTED.L=&LEN'
         MEXIT
.IC      ANOP
         SR    R1,R1         CLEAR REGISTER 1
         IC    R1,&SYSLIST(&THIS) LOAD 1 BYTE NUMBER
         AGO   .CONV         CONVERT TO CHARACTER
.ICBY2   ANOP
         MVC   CALLAREA+8(2),&SYSLIST(&THIS) SHIFT
         LH    R1,CALLAREA+8 LOAD NUMBER
.MVC3    MVI   CALLAREA+8,0  ZERO FIRST BYTE
         MVC   CALLAREA+9(3),&SYSLIST(&THIS) SHIFT
         L     R1,CALLAREA+8 LOAD NUMBER
         AGO   .CONV         CONVERT TO CHARACTER
.MVC4    ANOP
         MVC   CALLAREA+8(4),&SYSLIST(&THIS) SHIFT
         L     R1,CALLAREA+8 LOAD NUMBER
         AGO   .CONV         CONVERT TO CHARACTER
.CONV    ANOP
         CVD   R1,DBL        CONVERT TO PACKED
         UNPK  ERRNUM&NUMCNT,DBL
         OI    ERRNUM&NUMCNT+4,C'0' FIX UP LAST CHARACTER
&NUMCNT  SETA  &NUMCNT+1
.IGNR    ANOP
&THIS    SETA  &THIS+1
         AGO   .NUMLUP
.REALST  ANOP
         AIF   (T'&MODNAME EQ  'U').BALR
         BAL   14,&MODNAME      BRANCH AND LINK TO ERROR ROUTINE
         AGO  .NOBALR
.BALR    ANOP
         L    15,=V(UJSERR)
         BALR 14,15
.NOBALR  ANOP
&JOLERR  SETC  'ER&CSECT&CSECTNO&ERRNO'   SET  UP NAME FOR X REF 74303
&JOLERR  DC    C'&CSECT',AL1(&CSECTNO,&CHAR1,&ERRNO),S(&STMT)
E&SYSNDX EQU   &JOLERR
&THIS    SETA  2
&NUMCNT  SETA  1
.LUP4    ANOP
         AIF   (&THIS GT N'&SYSLIST).END
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '#').VAR2
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '''').LIT2
         AIF   (T'&SYSLIST(&THIS) EQ 'H').NUMC
         AIF   (T'&SYSLIST(&THIS) EQ 'F').NUMC
         AIF   (T'&SYSLIST(&THIS) EQ 'X').NUMC
         AIF   (T'&SYSLIST(&THIS) EQ 'R').NUMC    EXPLICT LENGTH A
         AIF   (T'&SYSLIST(&THIS) EQ 'G').NUMC     OR F CONSTANTS
.* HERE IT SHOULD BE A CHAR VARIABLE
         AGO   .CHAR9
.NUMC    ANOP
         MVC   0(5,1),ERRNUM&NUMCNT SHIFT CONVERTED NUMBER
&NUMCNT  SETA  &NUMCNT+1
         AGO   .ADD3
.CHAR9   ANOP
&L       SETA L'&SYSLIST(&THIS)
         MVC   0(&L,1),&SYSLIST(&THIS) FIXED CHAR STRING
         AGO   .ADD3
.LIT2    ANOP
.* NOW LOOK FOR DOUBLE QUOTES IN STRING TO CALCULATE THE CORRECT
.*   LENGTH
&LITPOSN SETA   2             START AFTER 1ST QUOTE
&LITLEN  SETA   K'&SYSLIST(&THIS)
&LITLEN  SETA   &LITLEN-2
.TQUOTE2 AIF    ('&SYSLIST(&THIS)'(&LITPOSN,2) NE '''''').NOTDBL2
&LITPOSN SETA   &LITPOSN+1
&LITLEN  SETA   &LITLEN-1
.NOTDBL2 ANOP
&LITPOSN SETA   &LITPOSN+1
         AIF    (&LITPOSN LT K'&SYSLIST(&THIS)).TQUOTE2
&K       SETA   &LITLEN
         MVC    0(&K,1),=C&SYSLIST(&THIS) MOVE LITERAL STRING
&POSN    SETA   &POSN+&K
         AGO    .ADD3
.VAR2    ANOP
         LA     1,&SYSLIST(&THIS) LOAD ADDRESS OF THE VARYING STRING
.ADD3    ANOP
&THIS    SETA   &THIS+1
         AGO    .LUP4
.END     DC     H'0'                            END LIST
***********************************************************************
         SPACE  2
         MEND
