         JOLSAVE CSECT=UJP25ED
       USING TKNX,R3
* THIS ROUTINE, WHICH FORMS PART OF THE JOL COMPILER, IS CALLED WHEN AN
*  'EDIT' INSTRUCTION HAS BEEN FOUND IN THE INPUT STREAM.
* THE FORMAT OF THE EDIT IS:-
*
*          EDIT  INPUT-STRING  <OUTPUT> <FORMAT-LIST>
*  WHERE <OUTPUT> MAY BE:-
*              NAME |(NAME-LIST)
*  AND   <FORMAT-LIST> MAY BE:-
*          FORMAT-ITEM   (FORMAT-ITEM,...)
*
*  EG     EDIT   STRING   OUTPUT  A(5);
*     OR  EDIT   STRING  ( LOCN1  LOCN2) A(5);
*     OR  EDIT   STRING  ( LOCN1  LOCN2) (A(5),X(1),A(2));
*     OR  EDIT   STRING  ( LOCN1  LOCN2)A(5),X(1),A(2);
*
* THE EDIT INSTRUCTION IS TERMINATED WHEN:-
*   1. THE INPUT STRING IS EXHAUSTED
*   2. THE OUTPUT NAME LIST IS EXHAUSTED
*
* IF THERE ARE FEWER FORMAT ITEMS THAN DATA ITEMS,THEY ARE SIMPLY
*  RE-USED, AS IN PL/1.
*
* AS USUAL IN JOL, R2-> JOLCOM, R3-> TKNX, R11 IS THE BASE REGISTER
* THIS THEN GIVES US REGISTERS 0,1,4-10,12,14 AND 15 TO PLAY WITH.
* BASICALLY, WE NEED SEVERAL LOOPS
*   1. START AND END OF NAME LIST
*   2. START AND END OF FORMAT LIST
*   3. START AND END OF INPUT STRING
*
* THE FOLLOWING MUST BE DONE:-
*  1. VALIDATE THE EDIT
*  2. FIND THE INPUT STRING'S VALUE
*  3. SET UP REGISTERS FOR THE LOOPS
*  4. PERFORM THE EDIT
*
* NOTE ********
*  NORMALLY ONE WOULD USE 'UJS20REP' TO REPLACE THE SYMBOLIC NAME
*  BY THE VALUE CURRENTLY ASSIGNED TO THE NAME.
* HOWEVER,UJS20REP ALWAYS PLACES THE STRING IN #WORK, AND IT JUST
*  HAPPENS THAT THE SYMBOLIC ASSIGNMENT ROUTINE ALSO USES THAT,
*  SO, BECAUSE OUR CASE HERE IS SO SIMPLE (IF WE ONLY HAVE TO
*  FIND THE VALUE OF ONE SYMBOLIC NAME), WE SHALL SEARCH THE
*  TABLE OURSELVES.
* IT IS UNFORTUNATE,BECAUSE THAT MEANS THAT THERE ARE NOW 3 RTNS
*  (AS AT 8 APRIL,75) WHICH SEARCH THAT TABLE.
* AH WELL, BEGGERS CAN'T BE CHOOSERS, I SUPPOSE.....
*
*
* WELL,WE'D BETTER GET ON WITH THE JOB, I GUESS
*
* FIRST,WE'LL FOOL THE ASSIGNMENT ROUTINE INTO THINKING WE ARE A
*  MACRO, BECAUSE WHEN WE PERFORM A 'PSEUDO' ASSIGN TO STORE
*  THE EDITED INFORMATION, IT WON'T DO NEARLY AS MUCH WORK (IE
*  LET'S SAVE CPU TIME).
         SPACE
         MVC ICOMMAND,=CL8'MACRO'
         SPACE
* NOW,LETS FIND THE AREA WHERE THE VALUE OF THE SYMBOLIC IS
         SPACE
         GETTKN 2            GET 2ND TOKEN, S/B INPUT STRING NAME
         SPACE
         CLI #TKN,L'SYMNAME   LENGTH OF NAME  TOO LONG ?
         BL  P25OK2          NOPE,ALL WELL AGAIN.
         JOLERR 401,'SYMBOLIC NAME ''',#TKN,''' TOO LONG'
         JOLRETN RC=16       RETURN AGAIN OLD FRUIT
         SPACE
P25OK2   EQU *
* OK,SEARCH THE TABLE FOR THE NAME THEN
         L  R15,ASYMTBL      LOAD START ADDRESS OF THE SYM TABLE
         LH R1,NOSYMS        R1=CURRENT NUMBER OF SYMBOLIC NAMES
         MH R1,=AL2(SYMADDR+4-SYMNAME) LENGTH OF TABLE ENTRIES
         AR R1,R15           R15=HIGH ADDRESS OF TABLE,R1= LOW
         LH R14,=AL2(SYMADDR+4-SYMNAME)
         LNR R14,R14
         USING SYMOVLY,R1
P25NMLUP CLC SYMNAME,TKN
         BE  P25GOTNM
         BXH R1,R14,P25NMLUP
         JOLERR 402,'INPUT STRING NAME %',#TKN,' CANNOT BE FOUND OR NO *
               NAME GIVEN AS INPUT '                              75128
         JOLRETN RC=16
         SPACE 1
P25GOTNM L  R15,SYMADDR      GET ADDRESS OF STRING
         MVC DBL(2),0(R15)   SHIFT LENGTH TO DBL (MAY NOT BE ON HALF
*                            WORD BOUNDARY)
         LA R9,2(R15)        SET R9-> 1ST BYTE IN STRING
* NOTE *** ALL SYMBOLIC DATA STORED IN TABLE WITH 1ST 2 BYTES
*  INDICATING THE LENGTH ******
         LR R10,R9           NOW SET UP STOP ADDRESS (A(LAST CHAR))
         AH R10,DBL          DBL=LENGTH
           CLI 0(R9),C''''     DOES STRING START WITH A QUOTE ?   75311
           BNE P25NQUOT                                           75311
           LA  R9,1(R9)        YES,SKIP IT                        75311
           BCTR R10,0          AND SKIP LAST AS WELL              75311
           B   *+4                                                75311
P25NQUOT   EQU  *                                                 75311
         DROP R1
         SPACE 3
           SPACE
* WELL I SUPPOSE WE CAN NOW GET DOWN TO SOME SERIOUS BUSINESS
* WHAT WE WANT TO DO IS SET SOME REGISTERS UP AS FOLLOWS:-
*
*     R4 = START TOKEN NUMBER OF THE OUTPUT STRINGS
*     R5 = STOP  TOKEN NUMBER OF THE OUTPUT STRINGS
*     R6 = FIRST FORMAT LIST
*     R7 = FIRST FORMAT LIST INITIALLY,AND IF THE FORMAT LIST IS
*          SHORTER THAN THE OUTPUT LIST, WE CAN SIMPLY RELOAD
*          R7 WITH R6 TO RE-INITIALISE THE FORMAT LIST CHAIN
*     R8 = LAST TOKEN FORMAT ITEM
*     R9 = A(INPUT CHAR ADDRESS) THIS IS BUMPED UP AS WE GO
*     R10= A(LAST CHAR IN INPUT SYMBOLIC)
* NOTE, WE COULD PROBABLY DO SOME FURTHER EDITING ON THE FORMAT
*  ITEMS BEFORE WE REALLY BEGIN (IE BUILD UP SOME SORT OF TABLE
*  BUT WE'LL LEAVE IT THIS WAY FOR NOW. IT WOULD ONLY BE MUCH
*  MORE EFFICENT IF THERE WERE MANY -REPEAT MANY-OUTPUT NAMES
*  AND ONLY 1 OR LESS FORMAT ITEMS).
            SPACE 2
* WHILE WE ARE FINDING THE START AND END TOKEN NUMBERS OF THE
*  OUTPUT STRINGS, WE SHALL CLEAR THE OUTPUT STRINGS TO A
*  NULL VALUE. THAT MEANS THAT IF, FOR EXAMPLE, %X CONTAINS
*  '1' NOW, AND WE ARE ASKED TO EDIT TO %X, WE WANT TO
*  CLEAR IT, EVEN IF WE DON'T PUT ANYTHING THERE (EG, INPUT
*  STRING TOO SHORT).
         CLEAR #WORK         CLEAR (NULLIFY) THE STRING THAT THE ASSIG-
*                            NMENT ROUTINE WILL STORE.
         SR  R12,R12        SET TO ZERO INITIALLY
         LA  R4,3            SET R6=1ST PART OF NAME LIST
         GETTKN (R4)         GET TOKEN AFTER SEND STRING
         CLI TKN,C'('        START OF LIST ?
         BNE P25GOTN1        NO,SHOULD BE A NAME (CHECK IN A MO)
         LR  R4,R1           DID U REMEMBER THAT AFTER A 'GETTKN' THAT
*                            R1 ALWAYS CONTAINS 1 HIGHER THAN IT DID
*                            BEFORE?
         LR  R12,R1          SET NON-ZERO(R12 TELLS US IF BRACKETS)
*                            BET U FORGOT.
         GETTKN (R4)         GET THE TOKEN AFTER THE '('
P25GOTN1 CLI TKN,C' '        IS NAME BLANK (IE NO NAMES GIVEN?)
         BNE P25NBLK1
         JOLERR 403,'NO NAME LIST IN EDIT'
         JOLRETN RC=16
P25NBLK1 EQU *
         LR R5,R1            R5 IS OUR END NAME LIST CONTROLLER
*                            SO SET IT NOW TO ONE HIGHER THAN THE
*                            NAME WE ARE CURRENTLY EXAMINING.
         CLI TKNTYPE,2       <IDENTIFIER> ?
         BE  P25NMOK1
P25ERNM1 JOLERR 404,'INVALID SYMBOL ''',#TKN,''' IN NAME LIST'
         JOLRETN RC=16
P25NMOK1 EQU  *
* NOW ASSIGN THE NULL STRING TO THE NAME
         MVC SYMBOLIC,TKN       SHIFT NAME TO 'SYMBOLIC' AND DROP '%'
        $CALL UJP85ASN       'UJP85ASN' WILL NULLIFY (OR COPY WHATEVER
*                            WAS IN '#WORK' IN FACT.
*****                        IF THE NAME WAS NOT PREVIOUSLY DECLARED,
*****                        IT WOULD ALSO DECLARE IT.
*
* GOOD,NOW WE'D BETTER LOOK AT THE NEXT ITEMS.
         GETTKN (R5)         GET NEXT TOKEN
         CLI TKN,C')'        END LIST ?
         BE  P25ENDL1        YES
         CLI TKN,C','        ',' AFTER NAME ?
         BNE P25CHKL1        NO->CHECK IF '(%NM1 %NM2)' TYPE CODING
         GETTKN (R1)         GET NEXT ITEM AFTER THE COMMA
         CLI TKN,C')'        ',)' IS REALLY INVALID, BUT WE'LL LET IT
*                            GO THROUGH,AND ASSUME END OF LIST.
         BE  P25ENDL1
* OK,HERE IT SHOULD BE A NAME,OR ITS AN ERROR.
         B   P25NBLK1        GO BACK AND CHECK,AFTER R5 SET TO R1
         SPACE 1
P25CHKL1 LTR R12,R12         '(' CODED ?
         BNZ P25NBLK1        YEP -> GO CHECK THIS FURTHER
         LR    R6,R5          SET R6 TO POINT TO START OF
*                             FORMAT LIST
         B     P25CHKB1       CHECK IF '(' NOW
         SPACE 3
* HERE IS THE END OF THE NAME LIST, AND ALL THE NAMES HAVE
* BEEN INITED TO ''.
P25ENDL1 EQU *
         SPACE 3
* WELL, NOW I GUESS WE'D BETTER MOVE ON TO THE FORMAT LIST.
*
* NOW, TO SAVE A LITTLE CPU TIME, WE'LL EDIT (VALIDATE) THE OLD
*  FORMAT LIST WHILE WE ARE ACTUALLY EXECUTING IT.
* THIS MEANS THAT IF WE FIND AN ERROR, WE WILL PROBABLY HAVE
*  EXECUTED HALF OF THE EDIT INSTRUCTION, WHICH IS VERY
*  UNFORTUNATE, BUT TOUGH... CPU TIME'S IMPORTANT YOU KNOW
*
*
*        R1 POINTS TO THE TOKEN AFTER THE NAME LIST
* SO IF WE DO A GETTKN,WE SHOULD HAVE A '(' | AN 'A' | 'X'
         SR R12,R12          INDIC TO SAY FIRST CHAR OF FORMAT
*                            WAS A '(' (R12=1 IF IT WAS, ELSE
*                            R12=0).
         LR R6,R1            SET R6 TO FIRST FORMAT ITEM
* NOTE *** WE MAY HAVE TO RESET THIS LATER ON, BECAUSE
*  WE REALLY AREN'T INTESTED IN BRACKETS SURROUNDING THE
*  FORMAT LIST, APART FROM DETECTING THAT THEY ARE
*  THERE.
         SPACE 3
         GETTKN (R1)         GET THE FIRST FORMAT ITEM
P25CHKB1 EQU   *
         CLI TKN,C'('        (<FORMAT LIST>) ?
         BNE  P25LRR7        NO-> LOAD R7 WITH R6,TEST VALID ITEM
         LR   R6,R1          RESET R6 TO SKIP '('
P25LRR7  EQU *
         LR  R7,R6           SAVE STARTING POINT OF FORMAT LIST.
*
         EJECT
* NOW WE HAVE R6 AND R7 POINTING TO THE START OF THE FORMAT LIST
*  EG IF  (A(7)) OR A(7) THEN TKN CONTAINS THE 'A'.
*
* BASICLY, THE NEXT LINES OF CODE ARE GOING TO DO THIS:-
*        REACHED END OF NAMES ? YES -> RETURN
*        GET A NAME
*        MOVE IT TO 'DBL'
*        GET A FORMAT ITEM, IF END, RECYCLE FORMAT ITEMS
*        IS IT AN 'X' TYPE-> GO TO RESET INPUT ADDRESS ROUTINE
*        ENOUGH INPUT STILL IN STRING FOR THIS FORMAT ITEM ? NO, REDUCE
*        MOVE INPUT STRING TO #WORK
*       $CALL ASSIGNMENT ROUTINE TO STORE IT
*        RESET NEXT INPUT STRING ADDRESS
*        IF STILL MORE INPUT, BACK TO GET NEXT NAME, ELSE RETURN
* SO....
         SPACE
P25TEND  CR R4,R5            ANY NAMES LEFT IN OUTPUT LIST ?
         BL P25MAINL         YES
         JOLRETN RC=0            NO,RETURN,ALL ENDED
         SPACE
P25MAINL GETTKN (R4)         GET THE NAME FIELD
         LR  R4,R1           SET R4 TO LOOK AT NEXT ITEM
         CLI TKN,C','        IS THE THING WE JUST GO A FIELD SEPERATOR?
         BE  P25MAINL        YES, SKIP IT
         SPACE
         MVC SYMBOLIC,TKN         SHIFT NAME TO DBL FOR ASSIGN RTN.
         SPACE
P25SKPF1 GETTKN (R7)         GET THE FORMAT ITEM.
         LR  R7,R1           SET R7 TO LOOK AT THE NEXT ITEM.
         CLI TKN,C','        FIELD SEPERATOR ?
         BE  P25SKPF1        YES, SKIP IT
         CLI TKN,C')'        END OF FORMAT LIST ?
         BNE P25FMT1         NO, S/B AN 'A' | 'X'
P25EF9   LR  R7,R6           REACHED END OF FORMAT LIST THEN,RESET TO
*                            THE FIRST ONE AGAIN, AND ROUND WE GO
         B   P25SKPF1
         SPACE
P25FMT1  CLC =C'A ',TKN      IS IT AN 'A' FORMAT ITEM ?
         BE  P25A
         CLC =C'X ',TKN      IS IT AN 'X' SPECIFICATION ?
         BE  P25X
         CLI  TKN,C' '       END
         BE   P25EF9
         JOLERR 405,'FORMAT ITEM ''',#TKN,''' INVALID'
         JOLRETN RC=16
P25A     EQU *
* NOTE ** SORRY-THIS NEXT HUNK OF CODE WILL BE DUPLICATED,
*  BUT I'VE RUN OUT OF REGISTERS TO LOAD AN INDICATOR TO
*  SAY WHETHER A THING IS 'A'|'X' THOUGH
         GETTKN (R1)         GET NEXT,S/B '('
         CLI  TKN,C'('
         BE  P25AOK1
P25FBAD1 JOLERR 406,'FORMAT LIST INVALID AT ''',#TKN,''''
         JOLRETN RC=16
P25AOK1  GETTKN (R1)         GET THE NUMBER
         LR R7,R1            SAVE POINTER TO FOLLOWING BRACKET
*                            COS NEXT INSTRUCT DESTROYS R1.
         TNUM #TKN           TEST IF ITS NUMERIC
         LTR  R15,R15        WAS IT ?
         BZ  P25AOK2        YES
P25FBAD2 JOLERR 407,'EXPECTED A NUMBER IN FORMAT:-''',#TKN,''' INVALID'
         JOLRETN RC=16
P25AOK2   LR   R15,R1      SET R15=TNUM RETURN
         LR  R14,R10         R14=A(LAST BYTE INPUT STRING)
         SR  R14,R9          R9=A(CURRENT CHARACTER),WHICH NOW LEAVES
*                            R14=AMOUNT LEFT
         CR  R14,R15         IS THE FORMAT ITEM > AMOUNT LEFT ?
         BH  P25AOK3         NOPE
         LR  R15,R14         SET R15= AMOUNT LEFT
P25AOK3  CH  R15,=H'120'     TOO BIG AN ITEM ?
         BL  P25AOK4         NO, SO EXECUTE THE MOVE
P25FBAD3 JOLERR 408,'FORMAT LENGTH OF ',#TKN,' TOO BIG'
         JOLRETN RC=16
P25AOK4  EX R15,P25EXMVC     SHIFT THE DATA (YES, I KNOW | CHAR TOO
*                            MANY WILL BE MOVED, BUT IT'S QUICKER
*                            THAN SUBTRACTING ONE, AND ANYWAY, IT
*                            JUST DOESN'T MATTER - ASSN RTN WILL
         STH R15,#WORK       ONLY MOVE THE RIGHT AMOUNT).
        $CALL UJP85ASN       STORE AWAY NOW IN THE SYMBOLIC TABLE.
         AR R9,R1           BUMP UP INPUT ADDRESS
         CR R9,R10           REACHED END OF INPUT STRING?
         BL P25MORE1         STILL MORE TO GO
         JOLRETN
P25MORE1 GETTKN (R7)         GET THE TOKEN AFTER THE <NUMBER>
         CLI TKN,C')'        IS THERE A ')' AFTER THE NUMBER
         BNE P25TEND        NOPE, ANYONE VERY UPSET ?
         LR  R7,R1           YES,SKIP IT
         B   P25TEND        AND -> BACK TO MAIN LOOP
         B   P25RESET        GO AND RESET THE INPUT STRINGS,AND
*                            CHECK FOR THE ')' AFTER THE FORMAT
*                            NUMBER.
         SPACE 2
* HERE IS THE BIT OF DUPLICATED CODE I PROMISED YOU.
         SPACE
P25X     GETTKN (R1)         NEXT TKN S/B '('
         CLI TKN,C'('
         BNE P25FBAD1
         GETTKN (R1)         GET <NUMBER>
         LR  R7,R1           SAVE NEXT TOKEN NUMBER
         TNUM #TKN           CONVERT TO NUMERIC
         LTR R15,R15         IS IT NUMERIC ?
         BNZ P25FBAD2        -> NO ,ERROR
         CH  R1,=H'250'     > 250
         BH  P25FBAD3        -> YES,ERROR
         SPACE 2
P25RESET EQU *
         AR R9,R1           BUMP UP INPUT ADDRESS
         CR R9,R10           REACHED END OF INPUT STRING?
         BL P25MORE          STILL MORE TO GO
         JOLRETN
P25MORE  GETTKN (R7)         GET THE TOKEN AFTER THE <NUMBER>
         CLI TKN,C')'        IS THERE A ')' AFTER THE NUMBER
         BNE P25SKPF1        NOPE, ANYONE VERY UPSET ?
         LR  R7,R1           YES,SKIP IT
         B   P25SKPF1        AND -> BACK TO MAIN LOOP
         SPACE 3
P25EXMVC MVC WORK(*-*),0(R9) SHIFT DATA FROM INPUT STRING
         LTORG
P25ZAPS  DC    S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
         DC  S(*,*,*,*)
