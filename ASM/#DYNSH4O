$DYNSH4A TITLE 'JOL DYNAMIC TRANSIENT SCHEDULER/INSTRUCTION HANDLER'
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1971,1972,1973,1974,1975,1976
* JOL COPYRIGHT CLARKE COMPUTER SOFTWARE 1980,1981,1982.
* JOL COPYRIGHT CCS-JOL PTY LTD 1985, 1986, 1987, 1988
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-E001.
         SPACE 3
*                   J             000000            L
*                   J            0      0           L
*                   J           0        0          L
*                   J          0          0         L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*        J          J         0            0        L
*         J        J           0          0         L
*          J      J             0        0          L
*           J    J               0      0           L
*            JJJJ                 000000            LLLLLLLLLLL
           SPACE 3
* LAST SOURCE UPDATE MAR 1982 BY J SUMMERFIELD
*                                   OF KURRAWANG COMPUTER PROGRAMMING
*   CHANGES:-
*     1. OSIV/X8 SUPPORT
* LAST SOURCE UPDATE 26/8/1981   BY CVC.
*   CHANGES:-
*     1. FIX 800 BPI TAPE PROBLEM
*     2. ALLOW JOL TO USE PROGRAMS IN LPALIB
* FOLLOWING FIXES CODED, SEPT 7,1976
*
*CHG26028      PROVIDE SUPPORT FOR 'IF ERROR'
*CHG30002      AS ABOVE
*CHG30062      HIGHLIGHT ERROR MESSAGES ETC MORE
*JOL30112      PROVIDE SUPPORT FOR DELETE GDGALL
*JOL30114      ALLOW UP TO 5 LEVELS OF MACROS
*JOL30115      CLOSE FILES BEFORE ABENDING
*JOL30116      FIX DELETE TEMPORARY DATA-SETS
* ALSO UPDATE CAMLIST,SCRATCH ETC MACROS FOR VS RETURN CODES
********************************************************************
*
*            JOL EXECUTE 'INITIATOR/SCHEDULER'
*
*
*
*
*
*
* NOTE: MANY MACRO NAMES ARE THE SAME AS THOSE USED IN THE JOL
*     COMPILER,BUT THEIR GENERATED CODE DIFFERS VERY SLIGHTLY
*     FROM THE OTHER MODULES,EVEN THOUGH THE FUNCTION IS THE SAME
********************************************************************
           SPACE 1
***********************************************************************
*
*
* DUE TO THE FAILURE OF IBM JOBQ MANAGEMENT ROUTINES (EITHER TO MY
*    UNDERSTANGING OR IBM'S DOCUMENTATION) SOME 'EMERGENCY' TYPE
*    CODE ALTERATION IS GOING ON TO GET JOL TO FUNCTION UNDER
*    VS1. NOTE THAT MVS USES THE STANDARD IBM CODE.
*
* CODE MARCH 7,1976: ALL MARKED '*****' IN COLS 67-71
*    SEE ALSO  'UJEJOB' CSECT FOR CHANGES
*
***********************************************************************
         SPACE 3
         MACRO
         EYEBALL &A
         DC    0D'0',4CL8'&A'
         MEND
         SPACE 6
         MACRO
&L       CONCAT  &A
         AIF   (T'&A EQ 'O').L                                   88036
         AIF   ('&A'(1,1) EQ '''').QM                            88036
         FIX   'REVIEW THIS CONCAT MACRO FOR &A'                 88036
         AGO   .L                                                88036
.QM      FIX   'REVIEW THIS CONCAT MACRO FOR '&A''               88036
.L       AIF   (T'&L EQ 'O').END
&L       DS    0H                                                88036
.END     MEND
         SPACE 6
         MACRO
&NAME    JOLERR1 &STMT=STMT
.* THIS MACRO WILL PUT INTO A LOCATION A STRING OF CHARACTERS
.* THE STRING MAY BE IN A BUFFER OR JOL MAY ITSELF CONTROL
.*   THE WHERE-ABOUTS OF THE ERROR MESSAGE.
.*
.* SYSLIST(1) IS TAKEN TO BE THE ERROR SEVERITY AND ALSO THE
.*   ERROR NUMBER.
           LCLA &LITPOSN,&LITLEN
           LCLC &CSECT,&ERRNO
           LCLC &JOLERR,&CHAR1
           LCLA &LENGTH,&THIS,&NOVAR,&POSN,&L,&K,&STMTLEN
&STMTLEN   SETA 4
&CSECT     SETC '&SYSECT'(3,3)
&ERRNO     SETC '&SYSLIST(1)'(2,K'&SYSLIST(1)-1)
&CHAR1   SETC '&SYSLIST(1)'(1,1)
         AIF   ('&STMT' EQ 'STMT').ORDSTMT
         MVC   S23STMT,&STMT MOVE NON-STANDARD STATEMENT NUMBER IN
.ORDSTMT ANOP
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*
&NAME    BAL   14,UJS23EP&CHAR1 LINK TO APPROPRIATE ERROR POINT
&JOLERR  SETC '&CSECT-&ERRNO'
ER&CSECT&ERRNO MVC 0(8,1),=CL8'&JOLERR' ERROR CODE IN CROSS-REF LIST
E&SYSNDX EQU     ER&CSECT&ERRNO
&THIS    SETA  2
.LUP4    ANOP
         AIF   (&THIS GT N'&SYSLIST).END
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '#').VAR2
         AIF   ('&SYSLIST(&THIS)'(1,1) EQ '''').LIT2
.* HERE IT SHOULD BE A CHAR VARIABLE
&L         SETA L'&SYSLIST(&THIS)
           MVC 0(&L,1),&SYSLIST(&THIS)         FIXED CHAR STRING
         AGO   .ADD3
.LIT2      ANOP
.* NOW LOOK FOR DOUBLE QUOTES IN STRING TO CALCULATE THE CORRECT
.*   LENGTH
&LITPOSN   SETA 2                              START AFTER 1ST QOTE
&LITLEN    SETA K'&SYSLIST(&THIS)
&LITLEN  SETA &LITLEN-2
.TQUOTE2 AIF   ('&SYSLIST(&THIS)'(&LITPOSN,2) NE '''''').NOTDBL2
&LITPOSN SETA &LITPOSN+1
&LITLEN  SETA &LITLEN-1
.NOTDBL2 ANOP
&LITPOSN SETA &LITPOSN+1
         AIF   (&LITPOSN LT K'&SYSLIST(&THIS)).TQUOTE2
&K       SETA &LITLEN
         MVC   0(&K,1),=C&SYSLIST(&THIS)       MOVE LITERAL STRING
&POSN    SETA  &POSN+&K
         AGO   .ADD3
.VAR2      ANOP
           LA 15,&SYSLIST(&THIS)           LOAD ADDRESS VARYING STRING
.ADD3      ANOP
&THIS      SETA &THIS+1
         AGO   .LUP4
.END       DC  H'0'                            END LIST
*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-*
           MEND
           SPACE 3
         MACRO
&NAME    JOLRETN &RC=0
&NAME    L     R13,4(R13)      RESET SAVE ADDRESS
         AIF   ('&SYSLIST(1)' EQ '').R1412
         RETURN &SYSLIST(1),T,RC=&RC
         MEXIT
.R1412   RETURN (14,12),T,RC=&RC
         MEND
         SPACE 3
         MACRO
&NAME    JOLSAVE &AREA=,&CSECT=,&BASE=R11
         GBLA &REGEQU
.* SEE IF EQUATES SET UP FOR THIS RUN YET OR NOT
         AIF   (&REGEQU NE 0).NOEQU
&CSECT   CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU  15
&REGEQU  SETA 1
         AGO   .NOCSECT
.NOEQU   ANOP
         AIF   ('&CSECT' EQ '').NOCSECT
         LTORG
         DS    0D
&CSECT   CSECT
.NOCSECT ANOP
&NAME    SAVE (14,12),,&CSECT.-&SYSDATE.:&SYSTIME
         AIF   (N'&BASE EQ 1).ONEBASE
         USING &CSECT,&BASE(1),&BASE(2)
         LR    &BASE(1),R15
         LA    &BASE(2),2048(R15)
         LA    &BASE(2),2048(&BASE(2))
         AGO   .HOUSE
.ONEBASE ANOP
         USING &CSECT,&BASE
         LR    &BASE,R15
.HOUSE   AIF   ('&AREA' EQ '').GENAREA
         MNOTE 12,'AREA NOW UNSUPPORTED'
         AGO   .HOUSE2
.GENAREA CNOP 0,4
         BAL   R15,*+76         BRANCH AROUND SAVE AREA
         DC    18F'-1'
.HOUSE2  ST    R15,8(,R13)
         ST    R13,4(,R15)
         LA    R13,0(,R15)     IT MAY BE NECESSARY TO CLEAR HIGH-BYTE
         MEND
         EJECT
* THESE NEXT TWO MACROS ARE USED FOR READING AND WRITING JOBQ.
*    IF THE SYSTEM IS VS,THE VS JOBQ ROUTINES ARE CALLED,OTHERWISE
*    A STRAIGHT READ OR WRITE OPERATION IS PERFORMED.
         MACRO
&NAME    GETJOBQ &DECB,&TTR
         GBLC  &JOLOS
         AIF   ('&JOLOS' NE 'X8').OK
         MNOTE 12,'GETJOBQ IS NOT SUPPORTED ON OSIV/X8'
         MEXIT
.OK      ANOP
&NAME    LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS
         L   R1,&TTR         LOAD ADDRESS OF AREA WITH TTR FOR POINT
         BAL R14,GETJOBQ     BRANCH AND LINK TO POINT,READ,CHECK RTN
         MEND
         SPACE
         MACRO
&NAME    PUTJOBQ &DECB,&TTR
         GBLC  &JOLOS
         AIF   ('&JOLOS' NE 'X8').OK
         MNOTE 12,'PUTJOBQ IS NOT SUPPORTED ON OSIV/X8'
         MEXIT
.OK      ANOP
&NAME    LA  R0,&DECB        LOAD 0 WITH DECB ADDRESS
         AIF   ('&TTR' EQ '').NOTTR
         L   R1,&TTR         LOAD R1 WITH TTR REQUIRED
         AGO   .BAL
.NOTTR     SR  R1,R1           NO TTR,CLEAR REGISTER 1
.BAL       BAL R14,PUTJOBQ     BRANCH AND LINK TO POINT,WRITE CHECK RTN
           MEND
         SPACE 3
         MACRO
&L       UJE22UPD &P1,&P2,&DDN
.* P1 IS ADDRESS OF DSNAME
.* P2 IS ADDRESS OF VOLUME SERIAL NUMBER(S)
&L       DS    0H                                                88036
         AGO   .END                                              88036
         LA    R0,E22PARM     SET UP PARAMETER LIST
         ST    R0,CALLAREA
         MVC   E22DSN,&P1     COPY DSNAME
         MVC   E22VOL,&P2      AND VOLUME INFO
         FIX   'I AM NOT VERY  SURE WHAT THIS DDNAME IS FOR'     88036
         AIF   (T'&DDN NE 'O').DDN                               88036
         MVI   E22DDN,C'?'                                       88036
         MNOTE 4,'WARNING: MISSING DDNAME'                       88036
         AGO   .DDDUN                                            88036
.DDN     MVC   E22DDN,&DDN     AND DDNAME INFO
.DDDUN   ANOP                                                    88036
         LA    R1,CALLAREA    ADDRESS PARAMETER AREA
         OI    0(R1),X'80'    THE FINAL TOUCH
         CALL  UJE22UPD       CALL MR FIXIT
.END     MEND
         TITLE 'JOL SCHEDULER MAIN-LINE'
         PUNCH '  PAGE UJE00MN '
         GBLA  &RSVDRC,&RETNSIZ
*        GBLC  &JOLOS
*        GBLC  &TYPE
         COPY  JOLGLOBL                                          88036
*        LCLB  &X8
         LCLC  &C,&C1,&C2,&C3,&C4,&C5,&C6,&DDPRT,&DDINST
&TYPE    SETC  'SCHED'
         $UJEPARM
&RETNSIZ SETA  2560          SIZE OF RETURN-CODE AREA
&X8      SETB  ('&JOLOS' EQ 'X8')
&RSVDRC  SETA  4000*(1-&X8)+50*&X8
&DDPRT   SETC  (&X8)'JOLPRINT'.(1-&X8)'$$PRNT'
&DDINST  SETC  (&X8)'JOLINST'.(1-&X8)'$$INST'
         PRINT ON,DATA
***********************************************************************
*                                                                     *
* CODE FOR IF ERROR IS INCORPORATED IN THIS DESCRIPTION OF THE MAIN-  *
*  LINE ROUTINE                                                       *
*                                                                     *
*        CALL  UJE98INI;      /* IF ANY ERRORS (NO DD'S FOR SCHEDUER, *
*                                  ETC),                              *
*                             OR IF PROBLEM PROGRAM RETURNED A VALUE  *
*                             THAT CAUSES JOB TO BE FLUSHED,          *
*                             A NON-ZERO RETURN CODE IS GIVEN, AND    *
*                             THE JOB WILL BE FLUSHED.                *
*                        NOTE:- ABENDS DO NOT CAUSE AN ERROR HERE.    *
*                             */                                      *
*        IF R15,=0 THEN                                               *
*        DO;                                                          *
*           SET GOBACK /* TO OS */ ON;                                *
*           RETURN 4000;                                              *
*        END;                                                         *
*                                                                     *
*        CALL  UJE50RD;       /* READ A STMT FROM 'INSRUCT' FILE */   *
*        IF R15>=0 GO TO EOF; /* GO TO END OF JOB */                  *
*                                                                     *
*        SET  R4=COND(LEVEL*8 + NEST);                                *
*                                                                     *
*        IS INSTRUCT='IF' ?                                           *
*        YES, DO;                                                     *
*                                                                     *
*              SET 0(R4)='T';                                         *
* E00CLIF:     CALL IF;                                               *
*              IF TRUE        /* CHECKS FOR ABEND, AND IF 'ERROR' */  *
* NEW          THEN DO;                                               *
* NEW               CALL UJE50RD;                                     *
* NEW               IF R15>=0,                                        *
* NEW               GO TO EOF;                                        *
* NEW               IF 'IF' GO TO E00CLIF; /* TEST NEXT IF IN CHAIN*/ *
* NEW               ELSE GO TO E00EXECI;(EXECUTE INSTRUCTION) ;       *
*              END;                                                   *
* SKIP:        ELSE SKIP TILL MATCHING END ETC;                       *
*                                                                     *
*        END;                                                         *
*                                                                     *
* NEW    IF ABEND OCCURED                                             *
* NEW      AND CURRENT LEVEL,NEST                                     *
* NEW      <=  ERROR LEVEL,NEST (LEVEL,NEST ABEND OCCURED AT)         *
* NEW      THEN DO;           /* IE, SKIP INSTRUCTION BECAUSE ABEND*/ *
* NEW          CLEAR INERROR  /* CLEAR ERROR LOOP INDICATOR*/         *
* NEW          GO TO SKIP;    /* ALLOWS FOR IF ERROR, DO; */          *
* NEW      END;               /* ETC */                               *
*    /* NO ABEND */                                                   *
* EXECUTE-INSTRUCTION:        /* BRANCHED TO BY 'IF TRUE'             *
*                             ROUTINE ABOVE, THEREBY SKIPPING         *
* NEW                         THE 'IF ABEND AND LEVELS' ABOVE.        *
* NEW                                                                 *
* NEW                         HENCE, IF ERROR WILL FUNCTION */        *
*                                                                     *
*                                                                     *
*        IF A 'DO'                                                    *
*        THEN DO;                                                     *
*              NEST=NEST+1; GO TO READ;                               *
*        END;                                                         *
*                                                                     *
*        IF AN 'END'                                                  *
*        THEN  DO;                                                    *
*              NEST=NEST-1;                                           *
*              IF NEST=0                                              *
*              THEN LEVEL=LEVEL-1;                                    *
*              GO TO READ;                                            *
*        END;                                                         *
*        IS IT AN 'ELSE' ?                                            *
*        YES, DO;                                                     *
*              IS 0(R4)='T'                                           *
*              YES, ELSE MUST BE FALSE, GO TO SKIPLOOP;               *
*              NO,GO TO READ;                                         *
*        END;                                                         *
*                                                                     *
*  /* OTHER */                                                        *
*                                                                     *
*        BRANCH TO PROCESSING ROUTINE                                 *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE
         JOLSAVE CSECT=UJE00MN,BASE=R12
         EXTRN UJTNUM,UJEJOBQ      HELPS THE LINKAGE EDITOR FIND THINGS
         ENTRY UJESCHED
UJESCHED EQU   UJE00MN
         L     R3,0(R1)                 ADDRESS OUR PARAMETER AREA
         USING PARMAREA,R3
         L     R5,=A(TABLES)
         USING TABLES,R5
E00VSSTR DS    0H                                                 74365
         CALL  UJE98INI                 CALL INITIALISE ROUTINES
         LTR   R15,R15                  INIT FAIL OR USER ABEND ?
         BZ    E00FIRST
BADRETN  DS    0H
         CALL  UJE94CLN                CLEAN UP OUTSTANDING ALLOCATIONS
         MVI   GOBACK,C'1'
         BAL   R11,UJEFILES            GO CLOSE ALL FILES
         JOLRETN RC=&RSVDRC            CANCEL JOB NOW
E00FIRST DS    0H
E00READ  DS    0H
E00MAINL DS    0H                      THIS IS THE MAIN-LINE.
         CALL  UJE50RD                 READ NEXT STATEMENT
         LTR   R15,R15                 READ OK (EOF MAYBEE)
         BNZ   E00EOF                  EOF,RETURN AFTER SETTING END JOB
*                                      INDICATORS.
         LH    R4,LEVEL                LEVEL INDICATOR
         SLL   R4,3                    *8 (WE ALLOW 8 NESTS PER LEVEL)
         LH    R0,NEST
         AR    R4,R0
         LA    R4,COND(R4)             THERE,NOW WE CAN LOOK AT 'CONDS'
         CLI   LABEL,C' '
         BNE   E00LABOK
         MVC   LABEL(2),=C'$$'
         MVC   LABEL+2(4),STMT
E00LABOK DS    0H
         CLC   =C'IF ',ICOMMAND  IF?
         BNE   E00TDO                  NO,GO TEST FOR A DO
* OK,CALL THE IF PROCESSOR AND TEST FOR TRUE OR FALSE
         MVI   0(R4),C'T'              SET COND INITIALLY 'TRUE'
         CALL  UJE04IF
         LTR   R15,R15                 IF 0,IT WAS A TRUE 'IF'
         BNZ   E00IFRD0       FALSE, SKIP INSTRUCTION(S) CHG26028 76200
* IF IS TRUE HERE                                        CHG26028 76200
         CALL  UJE50RD        READ NEXT INSTRUCTION      CHG26028 76200
         LTR   R15,R15        GET IT ?                   CHG26028 76200
         BNZ   E00EOF         NO, GO TO EOF ROUTINE      CHG26028 76200
         B     E00EXECI       YES, GO AND PERFORM IT     CHG26028 76200
           SPACE 3
* NOW THE 'IF' IS FALSE
E00IFRD0   MVI 0(R4),C'F'      SET COND TO 'FALSE'
E00IFRD1   CALL UJE50RD        READ THE NEXT INSTRUCTION
           LTR R15,R15
           BNZ E00EOF
           SPACE
E00SKIP  DS    0H                                        CHG26028 76200
         CLC   =C'IF ',ICOMMAND  IF THEN... IF THEN SITUATION?
         BE    E00IFRD1        YES,SO SKIP THIS ONE NOW
         CLC   =C'MACRO ',ICOMMAND   IS IT A MACRO HEADER ?
         BE E00IFLUP           START SKIPPING UNTIL MATCHING 'END'
         CLC   =C'DO ',ICOMMAND IS IT A 'DO;
           BE E00IFLUP         START SKIPPING UNTIL MATCHING 'END'
* HERE IT IS AN ORDINARY INSTRUCTION,AND WE HAVE 'SKIPPED ' IF
*     WE GO AND READ A NEW ONE NOW
           B  E00READ
           SPACE 3
E00IFLUP DS    0H
* NOW WE HAVE FOUND A MACRO OR A DO
         LA R4,1               SET NUMBER OF OUTSTANDING ENDS TO 1
E00IFRD  DS      0H
         CALL UJE50RD          GET THE NEXT INSTRUCTION
         LTR   R15,R15
           BNZ E00EOF          END OF INPUT FILE
           CLC =C'END ',ICOMMAND
           BNE E00TIFMC        GO TEST IF INNER MACRO OR DO
           SH R4,=H'1'         -1 FROM END COUNTER
           BZ  E00READ         GOOD OH,REACHED END OF FALSE LOOP
           B  E00IFRD
           SPACE 3
E00TIFMC DS    0H
         CLC   =C'MACRO ',ICOMMAND
         BE    E00ADD1
         CLC   =C'DO ',ICOMMAND
         BNE   E00IFRD
E00ADD1  LA R4,1(R4)           UP THE NUMBER OF OUTSTANDING 'ENDS'
           B  E00IFRD          AND READ A NEW INSTRUCTION
*  END IF PROCESSING
           SPACE 3
E00TDO   DS    0H
E00TERR  CLI   ERRORIND,0     HAS AN ABEND OCCURED ?     CHG26028 76200
         BE    E00TDO2        NO, NOT YET                CHG26028 76200
* AN ABEND HAS BEEN DETECTED SOMEWHERE.                  CHG26028 76200
*******************************************************************DASD
*  IF ERROR SWITCH SETTINGS USING FIELD "INERRORL"                *DASD
*                                                                 *DASD
*  BYTES 0-3 ON = IF ERROR LOGIC IN PROCRESS                      *DASD
*           OFF = NO IF ERROR LOGIC REACHED AS YET OR             *DASD
*                 CURRENTLY RUNNING IF ERROR AT ABEND LEVEL       *DASD
*  BYTES 4-7 ON = IF ERROR LOGIC REACHED AND ABEND OCCURED        *DASD
*           OFF = NO ABEND OCCURED WITHIN IF ERROR LOGIC          *DASD
*******************************************************************DASD
         TM     INERRORL,X'0F' IF ERROR ON WITH AND ABEND ?        DASD
         BZ     E00SKIP      NOPE   LETS SKIP ANY RUNNING AFTER ABEDASD
         CLC   LEVEL(L'LEVEL+L'NEST),ERRLEVEL            CHG26028 76200
         BH    E00TDO2        OK, IF ERROR THEN DO LOOP  CHG26028 76200
         MVI   INERRORL,X'0F' TURN OFF 'IN ERROR LOOP'   CHG26028  DASD
         B     E00SKIP        SKIP INSTRUCTION(S)        CHG26028 76200
E00TDO2  DS    0H                                        CHG26028 76200
E00EXECI DS    0H                                        CHG26028 76200
         SPACE 2                                         CHG26028 76200
           CLC =C'DO ',ICOMMAND IS IT A 'DO'
           BNE E00TMAC         NO,TEST IF 'MACRO'
           LH  R1,NEST         ADD
           LA  R1,1(R1)            1 TO
           CH  R1,=H'8'                NEST
           BH  E00DOERR            IF NOT
           STH R1,NEST         T00 BIG
           B   E00READ         AND READ A NEW RECORD
E00DOERR   JOLERR 505,'TOO MANY DOS'   (THIS ABENDS,U0001)
           SPACE 3
E00TMAC    CLC =C'MACRO ',ICOMMAND
           BNE E00TEND
           LH  R1,LEVEL
           LA  R1,1(R1)
         CH    R1,=H'7'                                  JOL30114 76200
           BL  E00MACOK
           JOLERR 508,'TOO MANY LEVELS'  (ABENDS TOO)
E00MACOK   STH R1,LEVEL
           LA R1,SAVENEST(R1)
           MVC 0(1,R1),NEST+1 SAVE THE NEST SO WE CAN RESET AT MACRO
*                              END SO AS NOT TO LOSE OURSELVES
           XC  NEST,NEST
           B   SETMACRO        TRUE 'LOOP',SET UP MACRO START
           SPACE 3
E00TEND    CLC =C'END ',ICOMMAND WELL,PERHAPS IT IS AN 'END'
           BNE E00TELSE        NOPE,GO TEST IF IT IS AN'ELSE' THEN
           SPACE
           LH  R1,NEST         NOW REDUCE 'NEST'
           SH  R1,=H'1'
           BM  E00ENDMC        IF <0 IF IS A 'MACRO' END
           STH R1,NEST
           B   E00READ        *********************** MARCH 12 76
           BCTR R4,0           -1 FROM R4                         75311
           MVI 0(R4),C' '      CLEAR COND                         75311
           B   E00READ
           SPACE 3
E00ENDMC DS    0H
* NOW THE'MACRO END' REQUIRES SPECIAL ATTENTION BECAUSE WE MUST
*     STORE THE HIGHEST RETURN CODE FROM THE PROGRAMS EXECUTED
*     BY THE MACROS.
           LH R1,LEVEL
           LA R15,SAVENEST(R1)
           SH R1,=H'1'
           BNM E00MACEN
           JOLERR 506,'TOO MANY ENDS'  (ABENDS)
           SPACE 3
E00MACEN  DS    0H
           STH R1,LEVEL
           MVC NEST+1(1),0(R15)
           SPACE 3
** STORE THE HIGHEST RETURN CODE FROM THE MACRO
           LA R7,IDSTART
           LH R1,NOIDS
           MH R1,=H'18'
           LR R15,R7
           AR R7,R1
           LH R14,=H'-18'
           LR R1,R7
           USING IDOVLY,R1
           MVC DBL,IDRETN
           L R7,DBL
**** CHECK FOR A DEAD MACRO HEADER WITH A -1 RETURN CODE AND BYPASSDASD
           CLC  DBL(4),=F'-1'                                      DASD
           BNE E00LUP10
           SR R7,R7
E00LUP10   CLC IDNAME,=CL8'MACRO'
           BE  E00GMAC
           MVC DBL,IDRETN
**** CHECK FOR A DEAD MACRO HEADER WITH A -1 RETURN CODE AND BYPASSDASD
           CLC  DBL(4),=F'-1'                                      DASD
           BE   E00BXH1                                            DASD
           C R7,DBL
           BH  E00BXH1                                             DASD
*          BL  E00BXH1                                             DASD
           L   R7,DBL
E00BXH1    BXH R1,R14,E00LUP10
         JOLERR 507,'NO MACRO START'
E00GMAC  ST    R7,CALLAREA
         MVC   IDRETN,CALLAREA
         MVC   IDNAME,=CL8' '  TO GET RIGHT EFFECT FOR NESTED MACROS
         B     E00READ
         SPACE 3
E00TELSE DS    0H
* NOW THE 'ELSE' MUST BE TESTED
           CLC =C'ELSE ',ICOMMAND
           BNE E00TFALS                NOT ELSE,TEST IF FALSE 'LOOP'
           CLI 0(R4),C' '              WAS AN 'IF' JUST PROCESSED ?
           BNE E00ELSOK
           JOLERR 402,'ELSE IGNORED'
           SPACE 3
E00ELSOK DS    0H
           CLI 0(R4),C'F'              LAST FALSE?
           BNE E00TLTRU
           MVC 0(2,R4),=C'  '          TURN OFF COND CODE ALTOGETHER
           B  E00READ
E00TLTRU   B  E00IFRD1                 GO JOIN 'IF' FALSE PROCESSOR
           SPACE 3
E00TFALS DS    0H
E00ORD   DS    0H
           CLEAR ISRUN
           L   R1,=A(JE00TBL1) LOAD ADDRESS OF TABLE WITH THE
*                              INSTRUCTION NAMES AND THE ADDRESSES
*                              OF THE ROUTINES TO HANDLE THEM.
           LM  R7,R9,0(R1)     LOAD BXLE ADDRESS CONSTANTS FOR
*                              THE ABOVE TABLE.
E00FINDR DS    0H
           CLC ICOMMAND,0(R7)   COMPARE INSTRUCTION TO THAT IN TABLE
           BE  E00GOTRT        GOT THE ROUTINE TO HANDLE IT.
           BXLE  R7,R8,E00FINDR
E00ERROR DS    0H
           JOLERR 503,'INVALID INSTRUCTION ''',ICOMMAND,               *
               ''' IN SCHED'
           SPACE 3
E00GOTRT   L   R15,8(R7)       LOAD ROUTINE ADDRESS
           BALR R14,R15
           CLI ISRUN,C'1'      WAS A RUN JUST PROCESSED ?
           BE  E00FNDRN        YES,TWAS A RUN
           LTR R15,R15         DID PROCESSOR HANDLE NORMAL INSTRUCTION
*                              (EG TYPE,DELETE ETC??)
           BZ  E00MAINL        YES,SO TRY NEXT INSTRUCTION.
* HERE AN INSTRUCTION WAS EXECUTED,BUT RETURNED A NON-ZERO
*     CODE.
           CH  R15,=H'4'       RETURN TO OS AFTER SKIPPING TO
*                              THE RIGHT JOB STEP ?
           BE E00STPON         STEP ON TO A NEW OS STEP.
           CH R15,=H'&RSVDRC'  STOP ETC EXECUTED ?
           BE BADRETN
E00CLRC    MVC 0(2,R4),=CL2' '
           B  E00MAINL
           B  *+4
           B  *+4
           B  *+4
           B  *+4
*     SET THE INDICATOR WHICH TELLS OUR CALLER (THE MONITOR)
*     TO  RETURN TO OS SO IT CAN SKIP STEPS (OR CANCEL THE JOB)
           SPACE 3
RETURN   DS    0H                                                 74365
E00EOF   DS    0H
* WE HAVE READ AN EOF ON THE INSTRUCTION FILE,SO WE WANT TO
*     GET TO THE END OF THE JOB
*
* IF AN ABEND HAS OCCURED, WE SHOULD SET A RETURN OF
*  4000 SO THAT THE JOB WILL TERMINATE WITH AN ERROR CONDITION.
         SPACE 1                                         CHG26028 76200
         CLI   ERRORIND,0     DID AN ERROR OCCUR ?       CHG26028 76200
         BE    E00EOF2        NO, SO TERMINATE NICELY    CHG26028 76200
*                             (IF SLOWLY...)             CHG26028 76200
         MVC   LASTCC+2(2),=H'&RSVDRC' FLUSH THE JOB     CHG26028 76200
         B     RETNNOW        CLOSE FILES, RETURN.       CHG26028 76200
E00EOF2  LA    R11,1            SET EOF INDICATOR ON
         B     RETNNOW
         SPACE 3
E00STPON DS    0H
         SR    R11,R11         SET EOF INDICATOR OFF
         SPACE 3
E00GOTRS DS    0H
E00TEST  DS    0H
         POINT RETN,TTR$RETN
         WRITE E00RET2,SF,RETN,READAREA,'S'
         CHECK E00RET2
         SPACE 3
RETNNOW  DS    0H
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS
         MVI GOBACK,C'1'
         BAL     R11,UJEFILES   GO CLOSE ALL FILES                 DASD
         L     R15,LASTCC                                         82200
         JOLRETN RC=(15)
E00FNDRN DS    0H
         LTR R15,R15           DO WE HAVE TO SKIP TO A NEW
         BNZ E00STPON          OS STEP FOR THIS RUN ?
         SPACE 3
SETMACRO DS    0H
* RUN IT NOW
         LH    R1,NOIDS
         LA    R1,1(R1)
         CH    R1,MAXIDS
         BL    MUVNAME
*        LH    R1,MAXIDS
*        CVD   R1,DBL
*        UNPK  DDPRIM,DBL
*        OI    DDPRIM+L'DDPRIM-1,X'F0'
****************************************************************** DASD
* NOW BEFORE ABENDING WE WILL TAKE A LOOK AT THE RETN TABLE FOR A* DASD
* USED MACRO HEADER AND OVERLAY IT MAKING ROOM FOR 1 NEW GUY     * DASD
****************************************************************** DASD
         LH    R15,NOIDS      LOOK THIS MANY TIMES                 DASD
         LA    R1,18                                               DASD
         LA    R1,IDSTART(R1) START LOOKING HERE                   DASD
         USING IDOVLY,R1                                           DASD
SLIDELOP CLC   IDNAME,=CL8'MACRO' IS THIS GUY USED ?               DASD
         BNE   SLIDEUP        YEA MOVE IT UP                       DASD
         LA    R1,18(R1)      UP TO NEXT GUY                       DASD
         BCT   R15,SLIDELOP                                        DASD
* WELL GUY WHAT NOW ???????                                        DASD
         JOLERR 501,'MAX ',MAXIDS,' STEPS EXCEEDED'
SLIDEUP  MVC   0(18,R1),18(R1) SLIDE THE REST UP 1                 DASD
         LA    R1,18(R1)      INCR TO NEXT SLOT                    DASD
         BCT   R15,SLIDEUP    LETS DO EM ALL                       DASD
         LH    R1,NOIDS       NOW LOAD NO OF IDS AGAIN             DASD
MUVNAME  STH   R1,NOIDS
         MH    R1,=H'18'
         LA    R1,IDSTART(R1)
         USING IDOVLY,R1
         MVC   IDSTMT,STMT
         OC    IDSTMT,=C'0000'
         MVC   IDNAME,TASKLABL
         MVC   IDNEST,NEST
         MVC   IDLEVEL,LEVEL
         MVC   IDRETN,=F'-1'
         CLC   =CL8'MACRO',ICOMMAND
         BNE   NOTMACH
         MVC   IDNAME,=CL8'MACRO'
         B     E00MAINL
NOTMACH  DS    0H
         AIF   (&X8).X8050
* WE MUST NOW WRITE THE PROGRAM NAME IN THE PGM FIELD OF THE SCT
*    SO THAT SMF WILL BE OK
*CVC       GETJOBQ SCTDECB,JCTSSTR GET SCT,AFTER POINT
*CVC       CLC =C'$JOLMN',SCTPGMNM    FIRST PROGRAM GETS SMF RECORD 3.1
*CVC       BNE E00SMF1
*CVC       MVC SCTPGMNM,RUNNAME
E00SMF1  DS    0H
*CVC       PUTJOBQ SCTDECB     RE-WRITE SCT
* OK LET'S XCTL
         AGO   .NX8050
.X8050   ANOP
         FIX   'FIDDLE SMF RECORDS HERE'
.NX8050  ANOP
         POINT    RETN,TTR$RETN
         WRITE DECBRET1,SF,RETN,READAREA,'S'
         CHECK    DECBRET1
         AGO   .VS050
         SPACE 1                                                  74365
         CLI   VS,C' '         ARE WE RUNNING UNDER VS ?          74365
* IF WE ARE,WE WILL ATTACH NOW RATHER THAN XCTLING AND CLOSING    74365
*          AS THIS IS FASTER AND VS CAN ROLL US OUT QUICKLIY      74365
           BNE E00ISVS         IS VS,DO THINGS DIFFERENTLY        74365
           CLI IBMRTN,C' '     ARE WE USING AN IBM ROUTINE TO     *****
*                              ACCESS JOBQ ?                      *****
           BE  E00NDEL2                                           *****
           DELETE EPLOC=IBMRTN YES, DELETE IT                     *****
E00NDEL2 DS    0H                                                 *****
*          CLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ)                    *DASD
           BAL   R11,UJEFILES   GO CLOSE ALL FILES                 DASD
           MVC DBL(4),STMT    SAVE STATEMENT NUMBER WHILE         75128
*                              PROBLEM PROGRAM IS EXECUTING
           L   R1,ATASKPRM                     LOAD ADDR OF PARAMETER
           ST R1,CALLAREA
           MVI CALLAREA,X'80'
           L   R13,4(R13)                      RESET SAVE ADDR
           L   R14,12(R13)                     RESET RETURN ADDR
           XCTL (2,12),DE=RUNNAME,DCB=0,MF=(E,CALLAREA)
.VS050     SPACE 3                                                75311
***********************************************************************
*
*        M V S  / F 4 ATTACH OR RETURN TO MONITOR
*
***********************************************************************
E00ISVS    MVC DBL,STMT        SHIFT STATEMENT NUMBER             75311
* 3.0 - MVS CODE                                                  75311
*
* IF A JOBLIB WAS ALLOCATED, WE MUST RETURN TO THE MONITOR,       87150
* AND LET HIM OPEN IT, OTHERWISE WE WILL ATTACH THE PROBLEM       87150
* PROGRAM HERE.                                                   87150
*
* LATER, WHEN THIS CODE IS RE-ENTRANT, IT WILL BE MORE            75311
* EFFICENT TO ATTACH IT HERE, BUT VS1 IS A BIT OF A PROBLEM       75311
* BECAUSE IT DOESN'T HAVE 16MEGABYTES TO PLAY WITH.               75311
         BAL   R11,UJEFILES     GO CLOSE ALL FILES                 DASD
         CLI   JOBLBDD,X'00'   JOBLIB ALLOCATED IN THIS STEP?     87150
*FIX     BE    E00ATTAC        NO, SO ATTACH FROM HERE.           87150
         JOLRETN RC=0          UJEMON WILL LOOK AT 'VS' TOO.      75311
E00ATTAC MVC   CALLAREA(4),ATASKPRM                               87150
         MVI   CALLAREA,X'80'                                     87150
         XC    TASK2ECB,TASK2ECB                                  87150
         LA    R1,CALLAREA                                        87150
         ATTACH DE=RUNNAME,ECB=TASK2ECB            74365          87150
         LR    R11,R1          SAVE TCB ADDRESS                   87150
         WAIT  1,ECB=TASK2ECB                                     87150
         MVC   TASKRETN(1),X'1D'(R11) SHIFT IN ABEND CODE         87150
         MVC   TASKRETN+1(3),TASK2ECB+1 AND RETURN CODE           87150
         ST    R11,CALLAREA                                       87150
         DETACH CALLAREA                                          87150
         B     E00VSSTR        BACK TO MAINLINE                   87150
         SPACE
*************************************************************      DASD
*  CLOSE ANY OPEN FILES BEFORE RETURNING TO THE MONITOR     *      DASD
*        MVS  WILL ABEND-C03                                *      DASD
*************************************************************      DASD
         FIX 'CLOSE TOGETHER'
UJEFILES DS    0H                                                  DASD
*        FIX 'DON''T CLOSE'
*        BR    R11   **** DON'T CLOSE FOR DYNAMIC SCHEDULER
         ST    R11,CALLAREA+4
         LA    R10,INSTRUCT                                        DASD
         BAL   R11,UJEFCLSE                                        DASD
         LA    R10,PRINT                                           DASD
         BAL   R11,UJEFCLSE                                        DASD
         LA    R10,RETN                                            DASD
         BAL   R11,UJEFCLSE                                        DASD
         AIF   (&X8).X8060
         LA    R10,JOBQ                                            DASD
         BAL   R11,UJEFCLSE                                        DASD
.X8060   ANOP                                                    88036
         L     R11,CALLAREA+4
         BR    R11                                                 DASD
UJEFCLSE DS    0H                                                  DASD
         TM    48(R10),X'10'  IS FILE OPEN ??                      DASD
         BZ    0(R11)         NOPE  RETURN                         DASD
         JOLCLOSE ((R10)),MF=(E,CALLAREA) CLOSE THIS GUY           DASD
         BR    R11            RETURN                               DASD
         LTORG
         SPACE
ISRUN    DC    C' '
RETNBLKS DS    H
GOTOLAB  DS    CL8
         SPACE 3
LABEL    DS    CL8
COMMAND  DS    CL8
CURRTIME DS    CL8
ZERO     DC    F'0'
GETATKN  LA    R1,TKNX
         L     R15,=V(UJCGETKN)
         BR    R15                                                75128
         SPACE 3
E00FXVOL DS    0H          CLEAR TO BLANKS                         DASD
         MVC   VOL,BLANKS                                          DASD
         LA R1,VOL-1                                              74365
         LA R15,DDVOLUME                                          74365
E00SHFTC MVI 0(R1),C','       SHIFT IN COMMA TO SEPARATE VOLS    74365
         MVC 1(6,R1),0(R15)    SHIFT IN A VOLUME                  74365
         LA    R1,6(R1)        STEP OVER ',VOLUME'                 DASD
         LA R15,6(R15)         STEP OVER VOLUME                   74365
         CLI 0(R1),C' '        DROP EXTRA BLANKS (IF L'VOL<6)     74365
         BNE *+8               NOT BLANK                          74365
         BCT R1,*-8            IS BLANK,DROP R1 BY 1              74365
         LA    R1,1(R1)        SKIP TO NEXT POSITION              75311
         CLI 0(R15),C' '       LAST VOL ?                         74365
         BE    E00SETVL        YEP, OUT WE GO (NEARLY)            74365
         C     R15,=A(DDVOLUME+30)     END LIST                   74365
         BNH   E00SHFTC
E00SETVL S     R1,=A(VOL-1)                                       75003
         STH   R1,#VOL
         BR    R14                                                74365
         AGO   .NOEPS
UJS23EP5 LA    R1,5
         B     UJS23SET
UJS23EP4 LA    R1,4
         B     UJS23SET
UJS23EP3 LA    R1,3
         B     UJS23SET
UJS23EP2 LA    R1,2
         B     UJS23SET
UJS23EP1 LA    R1,1
         B     UJS23SET
UJS23EP0 SR    R1,R1
UJS23SET DS    0H
         L     R15,=V(UJS23ER)
         BR    R15
.NOEPS   ANOP
* WILL EVENTUALLY RETURN TO R14 ADDRESS
#S23MAX  DC    H'92'               MAX WTO OR LREC SIZE           76200
#S23LNE2 DS    H                   LINE 2 LENGTH                  76200
S23LNE2  DS    CL100               LINE 2 WORK AREA               76200
S23STMT  DC    XL4'00000000'
#S23BLKS DS    H
         DS    H
#S23LREC DS    H
#S23MSSG DS    H
S23MSSG  DS    CL150                                              74365
         DS    F                                                  75003
#VOL     DC    H'0'                                               75311
VOL      DC    CL120' '        SPACE FOR 20 VOLUMES               87150
TASK2ECB DC    F'0'                                               74365
         DS    F               SPARE
RUNBLDL  DS    0D
         DC    H'1'
         DC    H'68'
RUNNAME  DS    CL8
RUNTTRK  DS    CL4
RUNZ1    DS    CL1
RUNC1    DS    CL1
RUNUSDTA DS    CL68
UJ00ANS  DS    3F
UJE00DDM DC    CL8'$$PRNT'
         ENTRY RETN,INSTRUCT,PRINT    ******FOR LINK MAP ******   75128
RETN     DCB   DDNAME=&DDINST,DSORG=PO,MACRF=W,                  80290 *
               DEVD=DA,RECFM=FB,LRECL=80,                              *
               BLKSIZE=&RETNSIZ                                    DASD
INSTRUCT DCB DDNAME=&DDINST,DSORG=PO,MACRF=(R,W),DEVD=DA
PRINT    DCB DDNAME=&DDPRT,DSORG=PS,DEVD=DA,RECFM=VB,LRECL=132,        *
               BLKSIZE=136,MACRF=W
JOLCOIN    DCB DDNAME=JOLCOIN,DSORG=PS,MACRF=PM,                80290  *
               DEVD=DA,RECFM=FB,LRECL=80,                              *
               BLKSIZE=800
         AIF   (&X8).X8120
JOBQ       DCB DDNAME=$$JOBQ,DSORG=PS,MACRF=(WP,RP),DEVD=DA       *****
           ENTRY JOBQ                                             *****
.X8120   ANOP
TEMPDCB  DCB   DDNAME=&DDINST,DSORG=PO,MACRF=R,          JOL30116 76200*
               DEVD=DA,EXLST=TEMPEXIT                    JOL30116 76200
TEMPEXIT DC    A(JFCBDSNM+X'87000000')                   JOL30116 76200
           PRINT GEN
ERRNUM1  DS    CL5
ERRNUM2  DS    CL5
ERRNUM3  DS    CL5
ERRNUM4  DS    CL5
ERRNUM5  DS    CL5
ATCB       DS  A               ADDRESS OF TCB
         AIF   (&X8).X8140                                       88036
ATIOT      DS  A
AQMRAW     DC  A(0)            ADDRESS OF JOB Q ACCESS RTN
IBMRTN     DC  CL8' '          NAME OF ROUTINE THAT ACCESSES JOBQ
JCTTTR     DC  A(0)            ADDRESS | TTR OF THE JCT (EACH     *****
*                              SYSTEM IS A LITTLE DIFFERENT)      *****
.X8140   ANOP                                                    88036
           SPACE 3
* THIS TABLE IS USED BY THE SCRATCH AND CATLG ROUTINES
*     ALTHOUGH THE JOL PROCESSOR KNOWS WHAT TYPE OF UNIT A 'DD' CARD
*     IS FOR,TO SAVE SPACE IN THE PROCESSOR IT IS NOT CONVERTED
*     TO A FULL IBM UNIT (AND OF COURSE THE USER MAY SPECIFY HIS
*     OWN GENERIC UNIT)
* THIS TABLE IS USED ONLY WHEN A SCRATCH OR CATALOG WAS GIVEN
*     AND THE USER DID NOT CREATE THE DATA-SET IN THIS JOB,AND
*     THERE-FORE OS MAY NOT HAVE CONVERTED IT INTO A NICE LOOKING
*     UMIT FOR US.
HEXUNITS   DC A(*+12)
           DC A(5)
           DC A(HEXUNITE-5)
         COPY  UNITABLE                                            DASD
HEXUNITE DS    0H
           SPACE 3
         PRINT GEN
HEX      EQU *-240                                                75311
         DC  C'0123456789ABCDEF'                                  75311
         SPACE 3
DYNCONC  DC    X'80',AL3(CONCRB)
CONCRB   DC    AL1(20,3)       CONCATENATION
         DC    H'0'            FLAGS1
CONCERR  DC    F'0'            ERROR AND INFO CODES
         DC    A(ATUCPARM)
         DC    F'0'            RESERVED
         DC    H'0'            FLAGS2
         DC    H'0'            END OF REQUEST BLOCK
ATUCPARM DC    X'80',AL3(TUCONCAT)
TUCONCAT DC    AL2(1,2)        TEXT UNIT 1, 2 DDNAMES TO CONCAT
#DDNAME  DC    H'8'           USED IN SCRATCH AND CATLG ETC
DDNAME   DS    CL8
#ERETDDN DC    H'8'          RETURNED DDNAME FROM ALLOCATION
ERETDDN  DS    CL8
         SPACE 3
#ERETDSN DS    H             RETURNED DSNAME FROM ALLOCATION
ERETDSN  DS    CL44
#DSNAME  DS    0H
#DSN     DC    H'10'         INITED ONLY FOR TESTS
DSN      DS    0CL44
DSNAME   DC    CL44'NOT INIT'
#ERETVOL DS    H             RETURNED VOLUME FROM ALLOCATION
ERETVOL  DS    CL6
           SPACE 3
RETN8    LA    R15,8
         B     RETRN
RETN4    LA    R15,4
         B     RETRN
RETN0    SLR   R15,R15
RETRN    JOLRETN RC=(15)
           SPACE 3
          DC    80S(*)
           LTORG
RETNAREA DS    0D
READAREA DS    XL&RETNSIZ                                          DASD
         ORG   READAREA
TTR$RETN DS    F               CONSTRUCTED BY BLDL IN UJESCHED
TTR$INST DS    F               CONSTRUCTED BY BLDL IN UJESCHED
NOIDS    DS    H          CURRENT NO OF IDS
LEVEL    DC   H'0'
NEST     DC   H'0'
COND     DC    CL50' '
ERRORIND DC    X'00'          SET ON IF ABEND            CHG26028 76200
INERRORL DC    X'00'          ON IF CURRENTLY DOING ERRORCHG26028 76200
* NOTE:- DO NOT SEPARATE NEXT TWO LOCATIONS              CHG26028 76200
ERRLEVEL DC    H'0'           SET BY 'UJE04IF' WHEN -    CHG26028 76200
ERRNEST  DC    H'0'           'IF ERROR' FOUND           CHG26028 76200
SAVENEST   DC  XL6'00'
         EYEBALL MAXCC
MAXCC      DC  F'0'
LASTCC     DC  F'0'
JOLSVC     DC  X'0A00'         SVC FROM 'OPTION' INSTRUCTION      75311
IDSTART  DS    0X
         ORG
           SPACE 3
VOLDETS  CSECT
#VOLLIST DC    H'0'
VOLLIST  DS    256CL6
           SPACE 3
TABLES CSECT
*        PRINT OFF
         COPY  DDDSNDET                                           75128
         ORG
DDDETLN  EQU   *-DDDSNDET     LENGTH OF THE AREA
         ORG   DDDSNDET                                           75128
         COPY  PGMDETS                                            75128
         SPACE 3                                                  75128
         ORG
         DS    0H
MAXIDS   DC    AL2((READAREA+L'READAREA-IDSTART)/18)
         DC    AL2(0)
BLANKS   DC    CL80' '
         LTORG
         AIF   (&X8).X8180                                       88036
         PRINT NOGEN
         EYEBALL JCT
JCT      DS    0D
         IEFAJCTB
           EYEBALL SCT
SCT        DS  0D
         IEFASCTB
           EYEBALL SIOT
SIOT     DS    0D
         IEFASIOT
         ORG
         EYEBALL JFCB
         IEFJFCBN   LIST=YES                                      76200
         PRINT GEN
         EYEBALL QMPA
QMPA     DS    0D              USED FOR VS CURRENTLY
QMPAJOB  DS    CL8             JOB NAME OR NO-WORK-CHAIN ELEMENT
QMPAFUNC DS    CL1             FUNCTION CODE
QMPAFLTR DS    CL2             NN OF 1ST LOGL TRACK ASSIGNED TO ENTRY
QMPANOTR DS    CL1             NUMBER OF RECORDS ASSIGNED IN THIS TRACK
QMPANXTL DS    CL2             NN OF NEXT LOGICAL TRACK
QMPANOLT DS    CL1             NUMBER OF LOGICAL TRACKS ASSIGNED
QMPAJBCD DS    CL1             JOB TYPE CODE
QMPAJBST DS    CL1             JOB STATUS CODE
QMPAPRTY DS    CL1             JOB PRIORITY
QMPANXTQ DS    CL2             NN OF NEXT QUEUE ENTRY
QMPAQID  DS    CL2             QUEUE ENTRY IDENTIFICATION
QMPAORCL DS    CL1             ORIGIN CLASS ID
QMPARES1 DS    CL1             RESERVED
QMPATRKS DS    A               ADDRESS TRACK STACKING PARM LIST
QMPAIND  DS    CL1
         ORG   QMPAIND
QMPAAECB DS    A               ADDRESS OF USERS ECB/IOB
QMPANORC DS    CL1             1ST 4 BITS=NO OF RECORDS TO ASSIGN
*                              2ND 4 BITS=NO OF RECORDS TO READ/WRITE
QMPAAEXT DS    AL3             ADDRESS OF EXTERNAL PARAMETER AREA
IEFQATCB DS    A               ADDRESS OF TCB
IEFQAREC DS    A               ADDRESS OF RECORD BUFFER
IEFQAQMP DC    A(QMPA)         ADDRESS OF QMPA
IEFQTTR  DS    A               TTR OF REQUESTED RECORD
IEFQRCLN DC    AL2(176)
IEFQFUNC DC    AL2(0)
IEFQDECB DS    A               WORK AREA(NOT REQUIRED BY IEFQMMAC)
IEFQRETN DS    A               RETURN ADDRESS
.X8180   ANOP
         AIF   (NOT &X8).NX8200                                  88036
         TITLE 'JOB FILE CONTROL BLOCK'
         KDJJFCBN   LIST=YES,DSECT=NO
         TITLE ' '                                               88036
.NX8200  ANOP                                                    88036
         EYEBALL INST
INST     DS    H                               INSTRUCTIONS USE THIS
*                                              AREA AS WORK AREA AND
*                                              THEY ARE WRITTEN FROM
*                                              HERE
         ORG   INST
ILENGTH  DS    H                               LENGTH OF RECORD
         DC    H'0'                            FOR VB RECORD DESCRIPTOR
II       DC    C'I'                            RECORD TYPE
ILABEL   DS    CL8                             STATEMENT LABEL
ISTMT    DS    CL4                             STATEMENT NUMBER
ILEVEL   DS    CL1
INEST    DS    CL1
ICOMMAND DS    CL8                             INSTRUCTION EG 'TYPE'
IBODY    EQU   *-ILENGTH                       LENGTH OF FIXED
*                                              PART OF RECORD
ITEXT    DS    CL150                                              75128
         SPACE 3
         EYEBALL TKNX
         COPY  TKNX
         ORG TKNSTRG-IBODY-2
INSTRDA  DS    0C
         ORG
         LTORG
         DS    0D
INSCSECT CSECT
JE00TBL1 DC    A(JE00TBL2)
         DC    A(12)
         DC    A(JE00END2-12)
JE00TBL2 DC    CL8'RUN     ',V(UJE20RUN)
         DC    CL8'C       ',V(UJE05CAT)        CATLG
         DC    CL8'U       ',V(UJE06UNC)        UNCATLG
         DC    CL8'K       ',V(UJE07KEE)        KEEP
         DC    CL8'S       ',V(UJE08SCR)        SCRATCH
         DC    CL8'D       ',V(UJE09DEL)        DELETE
         DC    CL8'RETURN  ',V(UJE23RET)                          74365
         DC    CL8'STOPWHEN',V(UJE13WHN)                          87150
         DC    CL8'TYPE    ',V(UJE10TYP)
         DC    CL8'DISPLAY ',V(UJE11DIS)
         DC    CL8'SIGNAL  ',V(UJE12SIG)
         DC    CL8'STOP    ',V(UJE13STP)
         DC    CL8'F       ',V(UJE14FRE)        FREE
         DC    CL8'OPTIONS ',V(UJE31OPT)                          75311
JE00END2 DS    0C
         AIF   (&X8).X8220                                       88036
         EJECT
UCBS     DSECT ,                                            FIX-X 76200
         IEFUCBOB  LIST=YES                                 FIX-X 76200
         SPACE 3
.X8220   ANOP
PARMAREA DSECT
         COPY  UJECOMM
IDOVLY   DSECT
IDSTMT   DS   CL4
IDNAME   DS   CL8
IDRETN   DS   CL4
IDLEVEL  DS   CL1
IDNEST   DS   CL1
********  VOLINFO DSECT USED TO REFERENCE A CAMLST *************   DASD
VOLINFO  DSECT                                                     DASD
NOVOLS   DS    H                                                   DASD
CATDEV   DS    XL4  )                                              DASD
CATVOL   DS    CL6  )   REPEATS NOVOLS TIMES                       DASD
CATLABEL DS    H    )                                              DASD
         LTORG
         JOLSAVE  CSECT=GETTIME
         TIME
         STM   R0,R1,DBL            AND STORE
         UNPK  TIMEWORK(16),DBL     UNPACK TIME AND DATE
         MVC   CURRTIME(2),TIMEWORK+1 HOURS
         MVI   CURRTIME+2,C'.'
         MVC   CURRTIME+3(2),TIMEWORK+3 MINS
         MVI   CURRTIME+5,C':'
         MVC   CURRTIME+6(2),TIMEWORK+5 SECS
         SPACE 3
         JOLRETN
TIMEWORK DS    CL16
*        PRINT OFF
         COPY     UJE04IF
*        PRINT ON
         LTORG
*        COPY UJDDISP
         TITLE 'UJE05CAT:CATALOG DATA SET'
         JOLSAVE CSECT=UJE05CAT
* THIS ROUTINE DOES THE CATALOGUING
*
* NOW:- WE FACE MANY PROBLEMS WHEN DOING A 'CATLG' (OR A KEEP)
* FIRST, WE SHALL CALL THE TALLOC ROUTINE WHICH READS THE ODD
*     JFCB,FIXES VOLUME LISTS ETC
         CLI   ICOMMAND,C'U'   UNCATALOG CALLING ME TO PRINT
*                              ERROR MESSAGES ?
*        BNE   E05DOCAT
         BE    E05PRNTE
         CLI   ICOMMAND,C'D'   DELETE CALLING ME TO PRINT ERR?
         BE    E05PRNTE
E05DOCAT DS    0H
         SPACE 3
         CALL  UJE48TAL      TEST IF THE DATA SET IS ALLOCATED TO US
         LTR   R15,R15
         BZ    E05TVOLS      YES, IT WAS ALLOCATED TO US
         BNE   E05KEEPE      NO,THERE WAS A REAL ERROR
         JOLRETN RC=4
E05KEEPE LA  R2,32
E05UNSUC DS    0H
          JOLERR 202,                                                  *
               'DSID ''',DDDSID,''' DSNAME ''',#DSNAME,''' KEPT ON VOL(*
               S) ',#VOL,' BUT NOT CATALOGED BECAUSE:-'           74365
         B     E05PRNTE
E05TVOLS DS    0H
         ST    R15,TASKRETN    SAVE FOR LASTC TESTS
         FIX ' CHECK THIS'
         CALL  UJE49VOL      GET DATA SET VOLUMES
* NOW TEST RE-CATLG FUNCTION
         IFNULL DDLABTYP,E05NALWA
* ALWAYS HERE
         MVI E05CAT,X'54'  TURN ON RE-CATLG BIT                   75311
E05NALWA DS    0H
E05FREE  DYNPARM DSN=(44,#DSN),ID=E05CAT,DDNAME=(8,#DDNAME),      ******
               VRB=UN,DISP=(CATLG) DEBUG=YES
         LTR     R15,R15   DID WE RECATLG IT?                     75311
         BZ   E05SUCES YES                                        75311
* NOW RECATLG FAILED, SO ATTEMPT STRAIGHT CATLG THEN              75311
         MVI   E05CAT,X'64'                                       75311
* E05NALWA DS    0H
         $CTLG E05CAT                    DO THE CATALOG
         LTR R15,R15
         BNZ E05ERR
E05SUCES DS   0H
* NOW WE MUST CHECK AGAIN FOR GREATER THAN 5 VOLUMES BECAUSE       DASD
* ALL OF THE VOLUMES MIGHT NOT FIT ON 1 MESSAGE                    DASD
         LH    R14,E05#VOLS         LOAD VOL COUNT                 DASD
         XC    E05#VOLS,E05#VOLS    CLEAR VOL COUNT                DASD
         CH    R14,=H'5'            > 5 VOLUMES                    DASD
         BNH   E05SUCE2             NO   LETS DOIT THE OLD WAY     DASD
         SH    R14,=H'5'            SUBTRACT 5                     DASD
         STH   R14,E05#VOLS         STORE BACK FOR LATER           DASD
         MVI   DDVOLUME,C' '        MOVE IN JUST THE 1ST FIVE      DASD
         MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                   DASD
         MVC   DDVOLUME(L'JFCBVOLS),JFCBVOLS                       DASD
         BAL   R14,E00FXVOL         MOVE TO #VOL,VOL EDITTED       DASD
         L     R15,=A(E05UNIT+60)   POINT TO 6TH VOLSER IN CAMLST  DASD
         ST    R15,E05START         SAVE FOR LATER                 DASD
E05SUCE2 DS    0H                                                  DASD
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                   *
               #DSNAME,''' CATALOGED ON VOL(S) ',#VOL             74365
          LH    R14,E05#VOLS        LOAD NUMBER OF VOLS LEFT       DASD
          LTR   R14,R14             ALL DONE                       DASD
          BZ    E05GOODR            YES SIR LETS GO                DASD
E05LMSGS DS    0H                                                  DASD
          L     R15,E05START        POINT TO NEXT AREA             DASD
          MVI   DDVOLUME,C' '       CLEAR CONSTRUCT AREA           DASD
          MVC   DDVOLUME+1(L'DDVOLUME-1),DDVOLUME                  DASD
          LA    R1,DDVOLUME         POINT TO CONSTRUCT AREA        DASD
          LA    R2,5                LETS STOP AFTER 5              DASD
E05LMSG   MVC   0(6,R1),4(R15)      MOVE IN NEXT VOLUME SERIAL     DASD
          LA    R1,6(R1)            BUMP DDVOLUME BY 6             DASD
          LA    R15,12(R15)         BUMP CAMLST BY 12              DASD
          SH    R14,=H'1'           BACKOFF VOL COUNT BY 1         DASD
          BZ    E05LMSGD            IF ALL DONE GET OUT EARLY      DASD
          BCT   R2,E05LMSG          RETURN FOR THE REST            DASD
E05LMSGD DS    0H                                                  DASD
          STH   R14,E05#VOLS        SAVE # OF VOLS LEFT            DASD
          ST    R15,E05START        STORE NEXT AREA ADDRESS        DASD
          BAL   R14,E00FXVOL        MOVE TO #VOL,VOL EDITTED       DASD
          B     E05SUCE2            GO PRINT THE  MESSAGE          DASD
E05GOODR DS    0H                                                  DASD
          JOLRETN
E05ERR     LR  R2,R15
           B   E05UNSUC
           SPACE 3
E05PRNTE DS    0H
           B  E05RETNC(R2)
E05RETNC   B   E05SUCES
           B   E05RET4
           B   E05RET8
           B   E05RET12
           B   E05RET16
           B   E05RET20
           B   E05RET24
           B   E05RET28
           B   E05RET32
           B   E05RET36
E05RET4    JOLERR 203,'CATALOG VOLUME NOT MOUNTED'
           B  E05RETN0
         FIX  'NOTE R0=0 IF C AND ALREADY CATLGD'           FIX-X 76200
         FIX  'NOTE R0=60 IF U/D AND YSAM'                  FIX-X 76200
E05RET8    JOLERR 204,'DATA SET NAME FOUND AT LOWER LEVEL'
           B  E05RETN0
E05RET12 DS    0H
           JOLERR 205,'CATLG RETN''D 12'
           B  E05RETN0
E05RET16   JOLERR 206,'NO INDEX LEVEL FOR DATA SET'
           B  E05RETN0
E05RET20   JOLERR 407,'CATALOG DATA SET IS FULL'
           B  E05RETN0
E05RET24   JOLERR 208,'INVALID GENERATION NAME'
           B  E05RETN0
E05RET28   JOLERR 409,'PERMANENT I/O ERROR ON CATALOG DATA SET'
           B  E05RETN0
E05RET32   JOLERR 210,'KEEP FAILED FOR DATA SET'
           B  E05RETN0
E05RET36   JOLERR 211,'NO VOLUMES WERE SUPPLIED'
         B      RETN0
E05CAT   CAMLST CAT,0,,E05VOLS
         SPACE 3
* WHILE HERE, COPY THE VOLUME SERIAL NUMBERS TO RESOLVE FUTURE VOLREFS
         SPACE 2
         CLEAR DDVOLUME
         CALL  UJE49VOL             GET THE DATA SET VOLUMES
         SPACE 2
E05CVC9  BAL   R14,E00FXVOL         COPY VOLS TO #VOLS
         SPACE
         UJE22UPD DDDSNAME,DDVOLUME,DDDDNAME FIX VOLUME REFERENCES
         MVI   DDDISP+1,C'L' LAST USE                                  .
                                (A LIE OF COURSE, BUT HE WON'T KNOW)
*        MVC   DDDDNAME,FCTACSN    ENSURE HE USES THE CORRECT DDNAME
*        CALL  UJE14FRE            FREE THE DATASET
         B     RETN0
E05NVCT  JOLERR 212,                                                   .
               'DSID ',DDDSID,' NOT CATALOGED, HAS NO VOLUMES  '
.NX8220  ANOP
E05RETN0 B     RETN0
E05NOFCT CLC   DDVOLUME,=C'     '     DOES IT HAVE A VOLUME
         BNE   E05CVC9                YES
         JOLERR 213,                                                   .
               'DSID ',DDDSID,' NOT CATALOGED, IS NOT ALLOCATED'
         B     RETN0
         LTORG                                                     DASD
         DC    80S(*)                                              DASD
         AIF   (&X8).X8240
JFCXDECB DC    F'0'                                                DASD
          LA       R1,JFCBXTTR                                     DASD
          SPACE 3                                                  DASD
          EYEBALL  JFCX                                            DASD
          IEFJFCBX                                                 DASD
JFCBETTR  DC       F'0' JFCB EXTENSION POINTER                     DASD
.X8240   ANOP
E05START  DC       F'0' AREA ADDRESS WORK AREA                     DASD
          ENTRY E05VOLS                                            DASD
E05VOLS   DS 0D
E05#VOLS  DS H
E05UNIT   DS CL4
E05VOLX   DS CL6
E05LABEL  DS CL2
          PRINT NODATA SAVE SOME PAPER
          DC    254CL12' '          EXTENDED WORK AREA FOR 255 VOLUDASD
          PRINT DATA WASTE MORE PAPER FOR CLEM
E05ETBL   EQU   E05VOLS+100                                        DASD
*RECAT B'0001'
*CAT   B'0010'
*UNACT B'00001000'
*BLD   B'0100'
*DELETE INDEXES B'00001100'
********* ALL THE ABOVE APPLY TO BYTE 0
*  +2  (3RD) B'00000001'=VSAM
* .X8240   ANOP
         LTORG
         TITLE 'UJE06UNC:UNCATALOG DATA SET'
         JOLSAVE CSECT=UJE06UNC
*        AIF   (&X8).X8260
         CALL  UJE48TAL      TEST IF THE DATA SET IS ALLOCATED TO US
         LTR   R15,R15
         FIX   '*****************'
*        BZ    E05TVOLS      YES, IT WAS ALLOCATED TO US
         LA    R1,DSNAME
         ST    R1,E06REMUV+4
         ST    R1,E06REMDT+4   REMOVE INDEXES,TOO
****************************************************************   DASD
* NEW 8-1-77 "UNCATLG GDGALL"   NO JCL NEED   ITS ALL DONE HERE*   DASD
****************************************************************   DASD
         CLI   DDCATLGS,104    UNCAT GDG ALL ?                     DASD
         BE    E06GDGAL        GO DO IT                            DASD
         CLI   DDMBR,C'+'      GDG ?
         BE    E06NODLT        YES,DON'T DELETE INDEX
         CLI   DDMBR,C'('      GDG ?
         BE    E06NODLT        YES,DON'T DELETE INDEX
         $CTLG E06REMDT    DO THE UNCATALOG AND REMOVE INDEXES
         LTR   R15,R15         ERROR ?
         BNZ   E06FAIL         YES,PRINT ERROR MESSAGES
         B     E06SUCES
E06NODLT DS    0H
         $CTLG E06REMUV
         LTR   R15,R15
         BNZ E06FAIL
E06SUCES DS     0H
         JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',                   *
               #DSNAME,''' UNCATALOGED'
         B     E06RETN
E06FAIL  DS    0H
         LR    R2,R15          SAVE UNCATLG RETURN CODE
         JOLERR 202,                                                   *
               'UNCATLG FOR DSID ''',DDDSID,                           *
               ''' NAME ''',#DSNAME,''' FAILED BECAUSE:-'
         CALL UJE05CAT       LET IT PRINT WHY
E06RETN  JOLRETN   RC=0                                            DASD
E06GDGAL L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD
         ST    R15,E06LOCAT+12         POINT TO LOCATE AREA        DASD
         MVC   #DSNAME(2),=H'44'       SET DSNAME TO THE BIGGIE    DASD
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD
         LA    R1,DSNAME               POINT TO DSNAME             DASD
         LA    R15,43(R1)              POINT TO END OF DSNAME      DASD
         LA    R14,1                   INCR BY 1                   DASD
E06FIND  CLI   0(R1),C' '              END OF DSNAME YET           DASD
         BE    *+8                     YEP LETS MOVE               DASD
         BXLE  R1,R14,E06FIND          RETURN                      DASD
         MVC   0(3,R1),=C'(0)'         LOOK FOR RELATIVE GDG 0     DASD
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD
E06LOOK  MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD
         $LOCATE E06LOCAT                                          DASD
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD
         BNZ   E06RETN                 NOPE THAT ALL               DASD
         $CTLG E06REMUV                                            DASD
         LTR   R15,R15                 DID THIS WORK OK            DASD
         BNZ   E06FAIL                 NOPE SOMETHINGS WRONG       DASD
         JOLERR 103,'DSID ''',DDDSID,''' DSNAME ''',                   *
               #DSNAME,''' GDGALL UNCATALOGED'                     DASD
         B     E06LOOK                 RETURN TO LOOK FOR MORE GDGADASD
E06LOCAT CAMLST NAME,DSNAME,,0                                     DASD
E06REMUV CAMLST UNCAT,0
         DC    A(E05VOLS)                                        88036
E06REMDT CAMLST UCATDX,0          UNCATLG,REMOVE INDEXES
         DC    A(E05VOLS)                                        88036
.X8260    ANOP
         JOLRETN
         SPACE 2
         DC    80S(*)
           LTORG
           TITLE 'UJE07KEE:KEEP DATA SET'
           JOLSAVE CSECT=UJE07KEE
* A KEEP INSTRUCTION IS TO BE EXECUTED.
*        AIF   (&X8).X8280
* THE KEEP IS A PRETTY EASY INSTRUCTION TO DO, AS BASICALLY
*    ALL WE HAVE TO DO IS FREE IT WILL KEEP.
*
* THE ONLY COMPLICATION THAT CAN ARISE IS THAT WE WOULD (ON OCCASIONS)
*    LIKE THE VOLUME TO BE UNLOADED(OR SET INTO AN UN-LOADABLE
*    STATUS
*
* PERMANENT,RETAINED,'JOL PREFERRED' ETC VOLUMES DO NOT HAVE TO
*    HAVE THEIR STATUS SET SO THEY MAY BE UNLOADED AND THIS IS
*    LEFT TO THE OPERATORS DISCRETION.
* IF IT IS A TAPE OR A NON-PREFERRED,(PRIVATE IN OTHER WORDS)
*    VOLUME AND IT IS NOT RETAINED,IT SHOULD BE DISMOUNTED.
          CLC DDDSNAME,=C'*DUMMY  '
          BNE  E07NOTDM                           74365
          JOLERR 206,'DSID ''',DDDSID,''' DSNAME ''',#DSN,             *
               ''' NOT KEPT:- DUMMY DATA SET'                    75003
          JOLRETN RC=16
E07NOTDM DS    0H
         CALL  UJE48TAL      TEST IF THE DATA SET IS ALLOCATED TO US
         LTR   R15,R15
         BZ    E07ISALL      YES, IT WAS ALLOCATED TO US
           CLI ICOMMAND,C'K'   KEEP ?
           BE  E07ERR1         YES,FLAG IT AS AN ERROR THEN
           CLC =C'*.',DDVOLUME VOLUME REFERENCE SPECIFIED,BUT DATA SET
* NOT CREATED ? THIS CAN OCCUR IF THE CREATING STEP WAS BYPASSED
           BE  E07ERR1         GO FLAG AS AN ERROR
           CLI DDVOLUME,C' '   VOL SPECIFIED ?
           BE  E07RETNF        NO,SO ERROR
           CLI DDUNITYP,C' '   UNIT SPECIFIED ?
           BE  E07RETNF        NO,ERROR TOO
* WELL A UNIT AND VOLUME WERE SPECIFIED,SO WE SHALL CONVERT
*     THE UNIT TO AN IBM TYPE OF NAME AND GENTLY RETURN
* (THE USER CODED 'CATLG DSN X UNIT Y VOL Z')
          SPACE
E07FIXU   DS    0H
           B  E07RETN0
E07ERR1  DS    0H
           JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               '''',                                                   *
               ' NOT YET CREATED:-KEEP IGNORED'
E07RETNF DS    0H
           JOLRETN RC=16
           SPACE 3
E07ISALL DS    0H
E07FREE  DYNPARM DSN=(44,#DSN),ID=E07KEEP,                        ******
               VRB=UN,DISP=KEEP DEBUG=YES
*                                                           FIX-X 76200
* THE NEXT FEW LINES ARE NEW IN 3.1 AND ARE CODED IN        FIX-X 76200
*  THE HOPE THAT WE CAN HAVE THE OPERATING SYSTEM UNLOAD    FIX-X 76200
*  THE VOLUME FOR US AT STEP TERM.                          FIX-X 76200
* IN ADDITION, THE DSNAME SHOULD BE TAKEN OFF THE PASSED    FIX-X 76200
*  DATA SET QUEUE. CURRENTLY, AT JOB TERMINATION, A NUMBER  FIX-X 76200
*  OF UNNECESSARY MESSAGES ARE DISPLAYED INDICATING THAT    FIX-X 76200
*  DATA SETS HAVE BEEN KEPT. THESE SHOULD NO LONGER OCCUR.  FIX-X 76200
*                                                           FIX-X 76200
*                                                           FIX-X 76200
         CLI   DDDISP+1,C'L'  LAST USE OF DATA SET ?        FIX-X 76200
*                             IF WE CAN LET OS UNLOAD ?     FIX-X 76200
*        BNE   E07NLAST       NOT LAST USE                  FIX-X 76200
* MARK SIOT AND LET IT THINK WE HAVE FINISHED WITH          FIX-X 76200
*  THE DATASET (WHICH WE HAVE, OF COURSE).                  FIX-X 76200
E07NLAST DS    0H                                           FIX-X 76200
           SPACE 3
           MVC DDVOLUME,JFCBVOLS
           BAL R14,E00FXVOL    SET UP VOLUME(S) IN #VOL           74365
E07TUNIT DS    0H
         SPACE 3
E07RETN0  DS    0H
           CLI ICOMMAND,C'K'   IS THIS A KEEP INSTRUCTION?        74365
           BNE E07RETNO W      NO,SO NO MESSAGE,JUST RETURN       74365
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' KEPT ON VOL(S) ',#VOL                          74365
E07RETNO  DS    0H
E07RTN     JOLRETN RC=0                                            DASD
E07LETOS DS    0H
           JOLRETN RC=4
           SPACE 3
E07DELET DS    0H
           JOLERR 203,'DSID ''',DDDSID,''' DSNAME ',                   *
               ''' PREVIOUSLY DELETED :- KEEP IGNORED'
           JOLRETN RC=16
E07NOKPT DS    0H   NO ENTRIES MARKED KEEP
         JOLERR 202,'DSID ',DDDSID,' NOT KEPT, IS NOT ALLOCATED'
         B     RETN0
         SPACE 3
         DC    80S(*)
           LTORG
         TITLE 'UJE08SCR:SCRATCH DATA SET'
         JOLSAVE CSECT=UJE08SCR
* SCRATCH INSTRUCTION IS TO BE EXECUTED.
*        AIF   (&X8).X8300
*    NOW IF IT IS A DISC,WE ISSUE A SCRATCH.
*          IF THE VOLUME IS NOT MOUNTED,WE MOUNT IT AND SCRATCH IT.
           SPACE
*    IF IT IS A TAPE,AND IT CAN BE FREED NOW (NOT RETAINED)
*          IT MUST BE GIVEN A DISPOSITION OF DELETE
*
*    IF IT IS RETAINED,THE PDQ IS MARKED DELETE,UNLESS WE HAVE
*          TIOT ENTRY,IN WHICH CASE IT IS MARKED DELETE,AND OS WILL
*          PROBABLY REMOVE THE VOLUME.
           SPACE 3
* PUT INTO LOGICAL TERMS,THE CODE COES LIKE THIS:-
*
*          IF ALLOCATED
*          THEN DO;
*              FREE WITH SCRATCH (DELETE).
*          END;
*  /* NOT ALLOCATED */
*
*          IF VOL & UNIT ¬=''
*          THEN DO;
*              ALLOCATE IT.
*              FREE WITH SCRATCH (DELETE).
*          END;
* NOT_HERE?:
*
*
*          IF IS MAG TAPE THEN GO TO E08MAGTP
* /* DISC HERE */
*          SCRATCH;
*          RETURN;
* E08MAGTP:
*          MARK DELETE; /* IF OLD,MARK NEW,DELETE*/
*          IF VOLUME TO BE RETAINED
*          THEN RETURN;
*          GO TO LETOS;        /*UNLESS IN THIS STEP*/
*
*
* THE SITUATION THEN BASICALLY MEANS THAT IF A SCRATCH IS ISSUED
*    FOR A DISC,AND THE DISC/IS NOT MOUNTED, MOUNT IT.
*
* IF A TAPE IS TO BE SCRATCHED,AND IT CAN BE UNLOADED (IE OTHER
*    DATA SETS ARE STILL BEING USED ON IT) NO REAL ACTION OCCURRS
*    BUT IF IT CAN BE UNLOADED A NEW OS STEP IS INITIATED.
           SPACE 3
* NOW IF THE NAME IS A TEMPORARY DSNAME,WE MUST FIDDLE AROUND UNTIL WE
*    HAVE THE PART OF THE NAME THAT OS PUT IN FRONT OF OURS,AND PUT
*    OURS AT THE BACK. THIS THEN GIVES US A REAL DSNAME WHICH SHOULD
*    BE IN THE PASSED DATA SET QUEUE.
*                                                        JOL30112 76200
* IF THE CATLG INDICATOR HAS 104,IT MEANS THAT THE       JOL30112 76200
* COMPILER FOUND GDGALL.
*
*                                                        JOL30112 76200
         CLI   DDCATLGS,104   GDGALL ?                   JOL30112 76200
         BNE   E08TTEMP       NO,TEST TEMPORARY THEN     JOL30112 76200
           JOLERR 112,'DSID ',DDDSID,' DSNAME ',#DSN,                  *
               ' IS GDGALL, THE OPERATING SYSTEM WILL DELETE IT'
         JOLRETN RC=4                                    JOL30112 76200
E08TTEMP CLI   DDDSNAME,C'&&' TEMPORARY ?                JOL30112 76200
           BNE E08NTEMP        NO,SO FORGET THIS BIT OF PROCESSING
*                                                        JOL30116 76200
* NOW READ THE JFCB OF THE $$INST FILE AND               JOL30116 76200
* FIND OUT WHAT DSN HAS BEEN GIVEN TO                    JOL30116 76200
* TEMPORARY DATA SETS                                    JOL30116 76200
*                                                        JOL30116 76200
         LA    R1,TEMPDCB
         USING IHADCB,R1
         MVC   DCBDDNAM,=CL8'&DDINST'
         DROP  R1
         RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200
* NOW FIND LAST DOT,AND SHIFT IN OUR TEMP NAME (&&WORK000I FOR EXAMPLE)
         LA    R15,JFCBDSNM+43 GET END OF DSNAME         JOL30116 76200
E08FSTOP   CLI 0(R15),C'.'     GOT THE LAST '.' ?
           BE  E08GOTST        YES
           BCT R15,E08FSTOP    FIND STOP LOOP
           JOLERR 508,'INTERNAL ERROR:NO ''.'' IN TEMP DSN'
           SPACE
E08GOTST CLI   DDDSNAME+1,C'&&' DOUBLE & CODED ?         JOL30116 76200
         BNE   E08ONEA                                   JOL30116 76200
         MVC   DDDSNAME+1(8),DDDSNAME+2 DROP 2ND         JOL30116 76200
E08ONEA  MVC   1(8,R15),DDDSNAME+1 SET UP REAL DSNAME    JOL30116 76200
         MVC   DDDSNAME,JFCBDSNM   SHIFT BACK            JOL30116 76200
E08NTEMP DS    0H
         CALL  UJE48TAL      TEST IF THE DATA SET IS ALLOCATED TO US
         LTR   R15,R15
           BNZ E08NOTHR        NOT IN PDQ
* NOW IT WAS ALLOCATED
*    GO TO THE SCRATCH ROUTINES.
          CALL UJE49VOL
         NI DDUNITYP,B'10011111'
           B   E08NOSTP        DO THE SCRATCH ETC
E08NOTHR DS   0H
         DYNPARM DSN=(44,#DSN),ID=SCRT,DISP=OLD, GET AS OLD IF POSS ****
               DDNAME=$$JOLSCR
         LTR   R15,R15
         BZ    E08SCR$$        GOT IT, SO GO DO THE DELETE NOW.
         JOLERR   209,'DSID ''',DDDSID,''' DSNAME ''',#DSN,''' NOT ALLO*
               CATED, SCRATCH IGNORED'
         JOLRETN
E08ERR2  DS    0H              NOT IN PDQ AND NO VOL/UNIT SPECIFIED
           JOLERR 215,'DSID ''',DDDSID,''' DSNAME ''',#DSN,''' ALREADY *
               SCRATCHED'
           JOLRETN RC=16
           SPACE 3
E08NOSTP DS    0H              NOT USED IN THIS STEP
* NOW THIS SITUATION IS JUST A FRACTION MORE DIFFICULT THAN THE
*    OTHERS.
* IF THE DATA SET IS ON DISK,ISSUE A SCRATCH
           CLI SCTUTYPE+2,X'80' MAG TAPE ?
           BE  E08MAGTP
* DISK,LETS ISSUE THE SCRATCH AFTER SETTING THINGS UP
           BAL R14,E00FXVOL    SET UP VOLUME LIST IN #VOL         74365
           SR  R0,R0
           MVI   E08SCRA+2,X'40'  RESET SCRATCH (LAST ALWAYS?)
           IFNULL DDLABTYP,E08NALWA
* ALWAYS
           MVI   E08SCRA+2,X'50'  OVER-RIDE PURGE DATE
E08NALWA DS    0H
*          SCRATCH E08SCRA
E08FREE  DYNPARM DSN=(44,#DSN),ID=SCRT,DISP=OLD, GET AS OLD IF POSS ****
               DDNAME=$$JOLSCR
E08SCR$$ DYNPARM DSN=(44,#DSN),ID=E08SCR,DDNAME=$$JOLSCR,         ******
               VRB=UN,DISP=(DELETE) DEBUG=YES
           LTR R15,R15
           BNZ E08WHAT
E08SUCC  DS    0H
           JOLERR 101,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' SCRATCHED FROM ',#VOL                          74365
*        DYNPARM DSN=(44,#DSN),VRB=UN MSG=NO
E08MAGTP DS    0H
           JOLRETN
           SPACE 3
E08WHAT  DS    0H
* SCRATCH FAILED
* WHY ??
         AGO .SKIPSCR
         CH   R15,=H'8'  DID WE BUILD A BAD CAMLIST ENTRY ??       DASD
         BH   E08BADCM   BETTER TELL SOMEONE ABOUT THIS            DASD
           SPACE 2
* IF FAILURE OCCURRED BECAUSE THE VOLUMES WEREN'T MOUNTED,
*    I KNOW THAT THERE IS A JCL STEP BELOW WHICH WILL MOUNT
*    THE VOLUMES AND PERFORM THE SCRATCHES,SO LETS GO.
           LA  R1,E08SEQ+1+(0*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           LA  R1,E08SEQ+1+(1*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           LA  R1,E08SEQ+1+(2*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           LA  R1,E08SEQ+1+(3*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           LA  R1,E08SEQ+1+(4*(L'E08UNIT+L'E08VOL+L'E08SEQ))
           BAL R2,E08ERR
           B   E08RETNF
E08ERR   DS    0H
* CALLED BECAUSE WE HAVE TO ANALYSE THE REASON WHY A SCRATCH FAILED
           CLI 0(R1),0         IS THIS ONE A ZERO ?
           BE  0(R2)           YES,SO JUST RETURN TO CALLER.
           CLI 0(R1),5         UNABLE TO MOUNT COS NO DEVICE ?
           BE  E08NPACK        LET OS DO SCRATCH (STEP DOWN TO RIGHDASD
*                              STEP)
           CLI 0(R1),6         DIDN'T OPERATOR WANT TO MOUNT VOL ?
           BE  E08NPACK                                            DASD
           CLI 0(R1),1         NOT IN VTOC ?
         BNE   E08TRET2                                     FIX-X 76200
           JOLERR 204,'DSID ''',DDDSID,''' DSNAME ''',                 *
               #DSN,''' NOT FOUND IN VOLUME :-SCRATCH IGNORED'
           BR  R2
E08TRET2 CLI   0(R1),2                                      FIX-X 76200
         BNE   E08TRET3                                     FIX-X 76200
         JOLERR 410,'DSID ''',DDDSID,''' DSNAME ''',#DSN,   FIX-X 76200*
               ''' IS A VSAM DATA SPACE OR ',               FIX-X 76200*
               'INCORRECT PASSWORD SUPPLIED'                FIX-X 76200
         BR    R2                                           FIX-X 76200
E08TRET3   CLI 0(R1),3         RETENTION PERIOD ?
           BNE E08TRET4
           JOLERR 205,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' NOT SCRATCHED,CONTAINS RETENTION DATE'
         BR    R2                                           FIX-X 76200
E08TRET4   CLI 0(R1),4         I/O ERROR ?
         BNE   E08TRET7                                     FIX-X 76200
           JOLERR 406,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' NOT SCRATCHED,I/O ERROR ON VTOC'
         BR    R2                                           FIX-X 76200
E08TRET7 CLI   0(R1),7                                      FIX-X 76200
         BNE   E08ERRXY                                     FIX-X 76200
         JOLERR 411,'DSID ''',DDDSID,''' DSNAME ''',#DSN,   FIX-X 76200*
               ''' IS BEING USED BY SOMEONE ELSE:-'         FIX-X 76200*
               'TRY AGAIN LATER'                            FIX-X 76200
         BR    R2                                           FIX-X 76200
E08ERRXY SR    R2,R2                                        FIX-X 76200
         IC    R2,0(R1)                                     FIX-X 76200
         JOLERR 507,'SCRATCH RETURNED INVALID CODE;SEE REG 2'   X 76200
E08BADCM DS    0H                                                  DASD
         JOLERR 213,'DSID ''',DDDSID,'''DSNAME ''',#DSN,               *
               ''' ON VOLS ',#VOL,' NOT SCRATCHED',                    *
               'CATALOGE INVALID DEVICE UNIT=',                        *
               DDUNIT                                              DASD
          B   E08LETOS                                             DASD
E08NPACK  DS    0H                                                 DASD
         JOLERR 214,'DSID ''',DDDSID,'''DSNAME ''',#DSN,               *
               ''' ON VOLS ',#VOL,' NOT SCRATCHED',                    *
               'PACK NOT MOUNTED, UNIT=',                              *
               DDUNIT                                              DASD
           SPACE 3
.SKIPSCR  ANOP
E08LETOS  DS    0H
* IT HAS BEEN DECIDED THAT,FOR NO DOUBT AN EXTREMELY GOOD REASON,
*    WE MUST STEP DOWN TO THE STEP THAT SHOULD BE THERE TO
*    HAVE THE VOLUME MOUNTED SO THE SCRATCH MAY BE PERFORMED.
           JOLRETN RC=4
E08RETNF  DS    0H JOLRETN RC=16                                   DASD
*******************************************************            DASD
*    PDQ RECORDS NOT DELETED IF SCRATCH FAILS         *            DASD
*******************************************************            DASD
* WHEN A PROGRAMMER SAYS TO DELETE A DATASET BEFORE   *            DASD
* THE FIRST STEP OF THE JOB,  JOL WILL GENERATE A STEP*            DASD
* WITH A DDCARD REFERENCE TO THE DATASET TO BE DELETED*            DASD
* IF THE DATASET IS CATALOGED BUT NOT ON THE PACK THE *            DASD
* THIS SCRATCH ROUTINE WILL RETURN WITHOUT REMOVING   *            DASD
* THE PDQ RECORD.     ANY REFERENCE TO THIS DATASET   *            DASD
* LATER ON WILL ADD NEW PDQ RECORDS BUT WILL POINT    *            DASD
* TO THE FIRST ENTRY RESULTING IN ABEND=213           *            DASD
*******************************************************            DASD
E08NFRPQ JOLRETN RC=16                                             DASD
****************************************************************   DASD
* IF DOING A DELETE CHECK THE CATALOGE  TO SEE IF THE DATASET  *   DASD
* IS CATALOGED AND IF SO RETURN TO THE SCRATCH                 *   DASD
*                                                              *   DASD
* THE FOLLOWING MESSSAGE IS ONLY ISSUED WHEN THE DATASET       *   DASD
* IS NOT ON THE PDQ                                            *   DASD
*                                                              *   DASD
* HERE AT STANDARD OIL A MODIFICATION EXISTS WHERE IF THE      *   DASD
* SCRATCH FAILED THE UNCATLG WILL STILL RUNS                   *   DASD
****************************************************************   DASD
E08NOPDQ NOP   E08PDQMG    TURN THIS ON TO SHUT OFF THIS CODE      DASD
         CLI   ICOMMAND,C'D'     DELETE STMT ?                     DASD
         BNE   E08PDQMG          NO---ISSUE THE MESSAGE            DASD
         CALL  UJELOCAT          CALL LOCATE MODULE                DASD
         LTR   R15,R15           ARE WE IN LUCK ?                  DASD
         BNZ   E08PDQMG          NOPE NOT TODAY                    DASD
         MVC   JFCBDSNM,DSNAME  COPY DATA SET NAME TO JFCB         DASD
         L     R15,=V(E05VOLS)  POINT TO CAMLST                    DASD
         USING VOLINFO,R15       GET SOME ADDDRESSILITY            DASD
         MVC   JFCBNVOL,NOVOLS+1 # VOLUMES                         DASD
         MVC   SCTUTYPE,CATDEV   UNIT TYPE                         DASD
         LH    R1,NOVOLS         # VOLUMES AGAIN                   DASD
         CH    R1,=H'5'          MORE THAN WE CAN HANDLE ?         DASD
         BNH   *+8               NO                                DASD
         LA    R1,5              ADJUST # VOLUMES FOR US           DASD
         LA    R14,JFCBVOLS      MOVE TO HERE                      DASD
         MVI   JFCBVOLS,C' '                                       DASD
         MVC   JFCBVOLS+1(L'JFCBVOLS-1),JFCBVOLS   CLEAR JFCB      DASD
E08LPVOL DS    0H                                                  DASD
         MVC   0(6,R14),CATVOL   MOVE VOL SER                      DASD
         LA    R15,12(R15)       POINT TO NEW CAMLST ENTRY         DASD
         LA    R14,6(R14)        UP TO NEXTBUCKET IN JFCB          DASD
         BCT   R1,E08LPVOL       GET ALL OF THE VOLUMES            DASD
         B     E08NOSTP          LETS DO THE SCRATCH AGAIN         DASD
         DROP  R15                                                 DASD
E08PDQMG   JOLERR 203,'DSID ''',DDDSID,''' DSNAME ''',#DSN,            *
               ''' NOT YET CREATED:-SCRATCH IGNORED'
           B  E08RETNF
           SPACE 3
E08SCRA    CAMLST SCRATCH,JFCBDSNM,,E08NOVOL
E08NOVOL   DS  H
E08UNIT    DS  CL4
E08VOL     DS  CL6
E08SEQ     DS  H
         DS  ((L'JFCBVOLS/6)*12)C
E08SCREN DS    0H
E08RETN0 DS    0H
         B     RETN0
E08NOKPT DS    0H   NO ENTRIES MARKED
         SPACE 3
* IT SEEMS WE NEED TO ALLOCATE THE DATASET
         SPACE 1
         TM    DDUNITYP,X'80'  IF IT'S A TAPE, FORGET IT
         BZ    E08NOSCR
         SPACE 1
         MVC   DDDDNAME,=C'JOL00000' HOPE NOBODY ELSE USES THIS
         OI    E21FLAG,E21CONT       TELL ALLOC NOT TO ABEND US
         CALL  UJE21ALL              ALLOC THE DATASET
         LTR   R15,R15
         BZ    E08ALLOK             IT WENT WELL
         JOLERR 316,'DATASET ',#DSN,' IS NOT SCRATCHED'
         B     E08NOSCR
E08ALLOK DS    0H
         B     E08FREE              NOW IT'S ALLOCATED, GO BACK
*                                    AND FREE IT WITH DELETE
E08NOSCR DS    0H
         B     RETN0
         SPACE 3
         AGO .NX8300
E08FFCT  DS    0H    FOUND AN FCT TO "FIX"
         $TELL (R4)
         MODESET  KEY=ZERO
         OI    FCTSTS1,FCTS1DLT            TURN DELETE ON
         OI    FCTFDST1,X'FF'-FCTFSNFD      "    "    "
         NI    FCTFLG2,X'FF'-FCTF2KEP      TURN KEEP OFF
*        OI    FCTFLG3,FCTF3UCT+FCTF3CTR   UNCAT + CAT REF
         NI    FCTFLG3,X'FF'-FCTF3CAT      SINCE WE ARE SCRATCHING,
*                                           DON'T CATALOG IT
         SPACE 2
*  WELL, THAT SHOULD BE ALL
         SPACE
         MODESET KEY=NZERO    BACK TO MY USUAL PROTECT KEY
         BR    R2             GO AND SEE IF THERE AREA ANY MORE
         SPACE 3
.NX8300  ANOP
         SPACE 3
         DC    80S(*)
         TITLE 'UJE09DEL:DELETE DATA SET'
         AIF   (&X8).X8320
JSCBOFFS   EQU 180
CVT        EQU 16
JCTTTRA    EQU 261
.X8320   ANOP
           LTORG
         JOLSAVE CSECT=UJE09DEL
         CALL  UJE08SCR
         LTR   R15,R15
*        BZ    E09RETN0        DYNAMIC ALLOCATION UNCATLGS        87150
         BZ    E09UNCAT  O.K. GUYS THE SCRATCH WORKED KEEP GOING   DASD
* STANDARD OIL REQUESTED THIS MOD                                  DASD
* THEY WANTED THE UNCATLG TO ALWAYS RUN EVEN IF THE SCRATCH FAILED DASD
         CLI   DDCATLGS,104   GDGALL ?                             DASD
         BNE   E09UNCAT   LET THE UNCATLG RUN THEN                 DASD
         JOLRETN RC=(15)
E09UNCAT DS    0H                                                 76200
*        CLI   #DSN+2,C'&&'   TEMPORARY DATA SET ?                76200
*        BE    E09RETN0                                           76200
         CLI   DDTYPE,DDREALDS    Q... TEMPORARY DATASET?
         BL    E09RETN0           A... YES
         CALL  UJE06UNC                                           76200
E09RETN0 B     RETN0                                              76200
         LTORG
*        COPY UJE10TYP
         TITLE 'UJE10TYP:TYPE A MESSAGE'
         JOLSAVE CSECT=UJE10TYP
* THIS ROUTINE DOES THE TYPING
           L   R7,=A(#TKN)
           USING #TKN,R7
           JOLERR 301,#TKN
           JOLRETN
          TITLE 'UJE11DIS:DISPLAY A MESSAGE'
           JOLSAVE CSECT=UJE11DIS
           L   R7,=A(#TKN)
           USING #TKN,R7
* DISPLAY HANDLER
           JOLERR 101,#TKN
           JOLRETN
          TITLE 'UJE12SIG:SIGNAL AN ERROR MESSAGE'
          FIX  'USE SOMETHING LIKE THIS TO TERMINATE JOB INSTEAD OF STEP
                ABEND'
           JOLSAVE CSECT=UJE12SIG
* SIGNAL ERROR ROUTINE
           L   R7,=A(#TKN)
           USING #TKN,R7
           SR R2,R2
           NI TKN,X'0F'        DROP 'F' FROM SEVERITY NUMBER
           IC R2,TKN           AND SAVE SEVERITY NUMBER
           GETTKN 3            GET MESSAGE TEXT
           CH R2,=H'3'
           BL  SIGONLY                         ONLY WARNINGS
           BE  SIGWTOR                         WTOR
* HERE A TERMINAL ERROR TO BE RASIED
           JOLERR 407,'TERMINAL ERROR ',#TKN,' SIGNALLED'
SIG&RSVDRC MVC TASKRETN,=F'&RSVDRC'
           MVI  GOBACK,C'1'
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS
SIGTERM    JOLERR 406,'JOB TERMINATING'
           JOLRETN RC=&RSVDRC
           SPACE 3
SIGONLY  DS    0H
           CH R2,=H'2'
           BL SIGERR1
         JOLERR 202,'SEVERE ERROR ',#TKN,'SIGNALLED'        FIX-X 76200
           B  SIGRETN
SIGERR1  JOLERR 101,'MINOR ERROR ',#TKN,' SIGNALLED'        FIX-X 76200
SIGRETN    JOLRETN
           SPACE 3
SIGWTOR  DS    0H
*        JOLERR 403,'MAJOR ERROR ',#TKN,' SIGNALLED'
         CLC   #TKN,=H'70'     IS MESSAGE TOO LONG
         BNH   E12WTOR1        NO
         MVC   #TKN,=H'70'     YES SO ADJUST LENGTH
E12WTOR1 EQU   *               JOLERR WONT ACCEPT A LABEL??
         JOLERR 403,#TKN,': REPLY GO OR STOP '
*  JOLERR SETS JOBNAME ETC UP IN #S23LREC
         LA    R1,#S23LREC-8
         MVI   0(R1),4         LENGTH OF REPLY
         MVC   1(3,R1),=AL3(SIGREPLY) ADDRESS OF REPLY AREA
         MVC   4(4,R1),=A(SIGECB) ADDR OF ECB TO WAIT ON
SIGRETRY CLEAR SIGREPLY
         XC    SIGECB,SIGECB
*ERE1204 DS     0H
*     WTOR 'JOLE12-04 REPLY GO OR STOP',SIGREPLY,4,SIGECB,DESC=(2)
         LA    R1,#S23LREC-8
         SVC   35                  ISSUE WTOR
         WAIT ECB=SIGECB
         OC    SIGREPLY(4),=C'    '     TO UP CASE
         CLC   =C'GO  ',SIGREPLY
         BE    SIGCONT
         CLC   =C'STOP',SIGREPLY
         BE    SIGTERM
         B     SIGRETRY
         SPACE 3
SIGECB   DS    F
SIGREPLY DS CL4
         SPACE 3
SIGCONT  DS    0H
         JOLERR 405,'JOB CONTINUING'
         B   SIGRETN
         TITLE 'UJE13STP:STOP HANDLER'
         JOLSAVE CSECT=UJE13STP
* STOP EXECUTER
         L     R7,=A(#TKN)
         USING #TKN,R7
         JOLERR 401,'STOP ''',#TKN,''' EXECUTED'
STPRETN  MVI   GOBACK,C'1'
         CALL  UJE94CLN            CLEAN UP OUTSTANDING ALLOCATIONS
         MVC   TASKRETN,=F'&RSVDRC'
         JOLRETN RC=&RSVDRC
         DROP  R7
         TITLE 'UJE13WHN:STOP WHEN SET UP HANDLER'
         JOLSAVE CSECT=UJE13WHN
* STOP WHEN HANDLER
* STOPWHEN IS PASSED BY THE COMPILER AND STORED IN #WHEN.
*     IT IS EXECUTED AT THE END OF EVERY STEP BY 'UJE04IF'.
         L     R7,=A(#TKNSTRG)
         USING #TKNSTRG,R7
         CLC   #TKNSTRG,=AL2(L'WHEN)
         BH    E13ERRL         TOO BIG, ABEND...
         LH    R15,#TKNSTRG     GET LENGTH
         SH    R15,=H'10'       DROP 'STOP WHEN'
         BNP   E13ERR2
         STH   R15,#WHEN        STORED
         MVC   #WHEN+2(255),#TKNSTRG+12  MOVE PART
         JOLRETN RC=0
E13ERRL  JOLERR 502,'STOP WHEN TOO LARGE'
         JOLRETN RC=0
E13ERR2  JOLERR 503,'STOP WHEN TOO SMALL'
         JOLRETN RC=0
*        COPY UJD14FRE
         TITLE 'UJE14FRE:FREE (MARK NOT IN USE) DATASETS'
         JOLSAVE CSECT=UJE14FRE
         MVC   D14ACTN,=CL8'** ERROR'
         CALL  GETTIME
         CLC   =C'STEPLIB ',DDDDNAME Q... STEPLIB ?
         BNE   E14NSTEP              A... NO
         MVI   DDDDNAME+7,C'$' MAKE STEPLIB$
E14NSTEP MVC   D14DETME,CURRTIME
         MVC   TEMPDDN2,DDDDNAME
         MVC   D14DDNAM,DDDDNAME
         MVC   D14DSID,DDDSID
         CLI   DDTYPE,DDPUNCH   Q... SYSIN, SYSOUT OF SOME KIND?
         BNH   E14FREE          A... YES, FREE IT NOW
         CLC   =C'JOBLIB  ',DDDDNAME Q... JOBLIB?
         BE    E14JOBL               A... YES
*        TM    DDUNITYP,X'80'  IF IT'S A TAPE, FREE FILE ALWAYS
*        BO    E14TDISP
* PROPOGATE THE TAPE VOLUME NOW, AS IT MAY BE USED LATER
*  IN VOLUME REFERENCES OR CATALOG STATEMENTS.
*        CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'
*        B     E14FREE                    FREE IT NOW
*        CLI   DDDISP+1,C'L'  LAST USE?
E14TDISP CLI   DDDISP+1,C'P'  LAST USE?
         BE    E14DISUS        NO, JUST MAKE MARKS
E14FREE  DS    0H
         CLI   TEMPDDN2,C' '
         BE    E14DDBL1
         DYNPARM DDNAME=(8,TEMPDDNM),VRB=UN DEBUG=YES UNALLOC=YES
         B     E14TRC1
E14DDBL1 DS    0H
         DYNPARM DSN=(44,#DSN),VRB=UN
E14TRC1  LTR   R1,R15
         BZ    E14FREED
         CVD   R15,DBL
         MVC   TASKSSI(4),=X'40202120'
         ED    TASKSSI,DBL+6
         JOLERR 102,'DSID ',DDDSID,''',DDNAME ',                       .
               DDDDNAME,' NOT UNALLOCATED DUE TO RETURN CODE ',        .
               TASKSSI
         B     E14RETN
E14FREED DS    0H
         MVC   D14ACTN,=CL8'FREED'
E14RETN  DS    0H
         WRITE D141DECB,SF,PRINT,D14DEALL WRITE THE ALLOCN HEADER
         CHECK D141DECB                   WAIT TILL IT GOES
         B     RETN0
E14DISUS DS    0H
         CLI   TEMPDDN2,C' '
         BE    E14DDBL2
         DYNPARM  DDNAME=(8,TEMPDDNM),VRB=UN,UNALLOC=REMOVE.IN.USE
         B     E14JOBL
E14DDBL2 DS    0H
         DYNPARM DSN=(44,#DSN),VRB=UN,UNALLOC=REMOVE.IN.USE
E14JOBL  DS    0H                    LEAVE JOBLIB, ISSUE 'PASSED' 87150
         MVC   D14ACTN,=CL8'PASSED'
         WRITE D142DECB,SF,PRINT,D14DEALL WRITE THE ALLOCN HEADER
         CHECK D142DECB                   WAIT TILL IT GOES
         B     RETN0
         AGO   .NOTFRE
         B     FIXCONCAT
         CLC   =CL8' ',DDDDNAME      Q... CONCATENATED FILE?
         BE    E14NXFCT              A... YES
         MVC   SAVEDD,DDDDNAME       COPY THE DDNAME
         SPACE
E14FFCT  DS    0H    FOUND AN FCT TO "FIX"
         AP    DDCTR,=P'1'          ADD TO MY COUNTER
         $TELL (R4)
         MODESET  KEY=ZERO
*        NI    FCTACSN,X'BF'        MAKE MY MARK FOR "NOT IN USE"
**CVC    MVC   FCTACSN(4),=C'$JOL'  MAKE MY MARK FOR "NOT IN USE"
**CVC    UNPK  FCTACSN+4(4),DDCTR
         SPACE
* WHILE I AM HERE, LET'S HAVE A LOOK AT SOME OTHER BITS
         SPACE
         LR    R2,R4                 SAVE THIS ADDRESS
         TM    FCTFLG6,FCTF6CF       Q... CONCATENATED?
         BZ    E14NOCAT              A... NO
         NI    FCTFLG6,X'FF'-FCTF6CF TURN THAT OFF
E14NXTCF DS    0H
         L     R1,FCTCFNO            ADDRESS NEXT IN THIS CHAIN
         XC    FCTCFNO(4),FCTCFNO    CLEAR THIS FIELD
         LA    R4,0(,R1)             CLEAR THE HIGH ORDER BYTE
         LTR   R4,R4                 Q... ANYTHING THERE?
         BZ    E14NOCAT              A... NO
         CLC   FCTACSN,DDDDNAME      CHECK THIS, JUST IN CASE
         BNE   E14NOCAT              UM, ER, I'LL SEE YOU LATER
         NI    FCTFLG6,X'FF'-FCTF6CF TURN OFF CONCAT FLAG
         B     E14NXTCF              LET'S PLAY WITH THE NEXT ONE TOO
E14NOCAT DS    0H
         LR    R4,R2                 ADDRESS OF THE ORIGINAL
         SPACE 2
*  WELL, THAT SHOULD BE ALL
         SPACE 3
.NOTFRE  ANOP
         JOLERR 005,                                                   .
               'DSID ',DDDSID,                                         .
               ' DDNAME ',DDDDNAME,                                    .
               ' CALLED IN FREE'
         B     RETN0
TEMPDDNM DC    H'8'
TEMPDDN2 DC    CL8' '
* THE FOLLOWING LINES ARE USED TO PRINT OUT DE-ALLOCATION MESSAGES
*     FOR THE DYNAMIC ALLOCATION VERSION OF JOL.
D14DEALL DC    AL2(D14END1-*,0)
         DC    AL2(D14END1-*,0),C' '
D14DETME DC    CL8' '                  TIME GOES HERE
         DC    C' '
D14DSID  DC    CL8' '
         DC    C'  '
D14DDNAM DC    CL8' '
         DC    C'    '
D14ACTN  DC    CL8' '                   PASSED ETC
D14END1  EQU   *
          SPACE
          LTORG
          PRINT NOGEN
          DCBD  DSORG=PS
          PRINT GEN
*        COPY UJD20RUN
         TITLE 'UJ20RUN:PERFORM A RUN INSTRUCTION'
         JOLSAVE CSECT=UJE20RUN
* HANDLE RUN STATEMENT
         MVI   ISRUN,C'1'
         MVC   RUNNAME,PGM
         MVC   TASKNAME,PGM
         MVC   TASKLABL,PGMLABEL
         MVC   D20PRGN,PGM
         MVC   D20STEPN,PGMLABEL
         MVC   D20STMT,STMT
         CALL  UJE97SPC                   SPACE UP
         CALL  UJE97SPC                   SPACE UP
         CALL  UJE97SPC                   SPACE UP
* GET THE SSI FOR PRINTING PURPOSES
         BLDL  0,RUNBLDL
         B     RUNBLD(R15)
RUNBLD   B     RUNBLD0
         B     RUNBLD4
         B     RUNBLD8
RUNBLD4  DS    0H
         MVC   TASKSSI,=X'00000000'         CLEAR THE SSI INFO
         MVC   D20SSI,=C'00000000'          CLEAR THE SSI INFO
         B     E20PHD1                      PRINT HEADER
RUNBLD8  JOLERR 402,'PERMANENT I/O ERR FINDING ',RUNNAME
E20806   DS    0H
         B     E20PHD1                      PRINT HEADER
         SPACE 3
RUNBLD0  LA    R15,RUNNAME                                        85199
         USING PDS2,R15                                           85199
         LA    R9,PDSBCEND+1           END OF BASIC SECTION       85199
         TM    PDS2FTB1,PDS2SSI        IS THERE AN SSI FIELD?     85199
         BNO   E20NOSSI                NO, MAKE IT ZEROS          85199
         TM    PDS2ATR1,PDS2SCTR       SKIP SCATTER FIELD?        85199
         BNO   E20NSCAT                YES                        85199
         LA    R9,PDSS01LN(R9)         ADD TO AVOID WRONG FIELD   85199
E20NSCAT TM    PDS2INDC,PDS2ALIS       ALIAS FIELD?               85199
         BNO   E20NALIA                YES                        85199
         LA    R9,PDSS02LN-1(R9)       ADD TO AVOID WRONG FIELD   85199
E20NALIA MVC   TASKSSI,0(R9)                                      85199
         B     E20SSI
E20NOSSI MVC   TASKSSI,=X'00000000'         CLEAR THE SSI INFO
E20SSI   UNPK  CALLAREA(9),TASKSSI(5)
         TR    CALLAREA(8),HEX
         MVC   D20SSI,CALLAREA
E20PHD1  CALL  GETTIME
         MVC   D20PRGT,CURRTIME
         WRITE D201DECB,SF,PRINT,D20PRGP  WRITE THE PROGRAM HEADER
         CHECK D201DECB                   WAIT TILL IT GOES
         CALL  UJE97SPC                   SPACE UP
         WRITE D202DECB,SF,PRINT,D20HEAD1 WRITE THE ALLOCN HEADER
         CHECK D202DECB                   WAIT TILL IT GOES
* NOW SEE IF A PARM IS USED IN THIS RUN
*
* NOW BEFORE XCTL TO THE USER PROGRAM,WE MUST DETERMINE WHETHER
*     OR NOT THERE ARE ANY DD-CARDS REFERRING TO THIS PROGRAM
*     OR IF THERE IS A PARM FIELD OR NOT.
*
* IF THERE ARE NO DD-CARDS,WE MAY XCTL NOW,OTHERWISE WE
*     MUST CHECK THAT THIS IS THE CORRECT OS STEP OR NOT
*          L  R2,TTR$INST      SAVE TTR OF NEXT INSTRUCTION
*                              BECAUSE IF WE DECIDE NOT TO DO
*                              THE USERS PROGRAM HERE WE WILL
*                              HAVE TO RESET THE TTR SO THE
*                              NEXT OS STEP THAT IS EXECUTED
*                              WILL START AT THE CORRECT STEP
*          CLC PGMNODDS,=A(0)    ARE THERE ANY DDCARDS?           75128
*        BNE   E20AREDD        YES
         CALL  UJE50RD        READ NEXT STATEMENT
         LTR   R15,R15        EOF PERHAPS ?
         BZ    E20TPARM
* NO DD'S  AND NO PARM,RETURN A 0,SO WE WILL XCTL TO
*     PROBLEM PROGRAM.
         $NOTE INSTRUCT       SAVE ADDRESS SO THAT 94CLN CAN WORK
         ST    R1,TTR$INST
         MVI   TTR$INST+3,0    SO WE RE-READ THE LAST STATEMENT
E20RETN0 DS    0H
E20RETN  CALL  UJE97SPC                   SPACE UP
         JOLRETN RC=0
         SPACE
E20TPARM DS    0H
         $NOTE INSTRUCT      SAVE THIS ADDRESS, TO REPROCESS THE DDS
         ST    R1,TTR$INST
         MVI   TTR$INST+3,0       CONTINUE WITH THIS RECORD IF NOT PARM
         CLC   =C'PARM ',ICOMMAND
         BNE   E20TDD            NOT PARM, TRY DD
         MVI   TTR$INST+3,1       CONTINUE WITH THE NEXT RECORD
* FIX UP USER'S PARM FIELD
         L     R1,ATASKPRM
         L    R15,=A(#TKNSTRG)
         USING  #TKNSTRG,R15
         MVC   0(256,R1),#TKNSTRG
         CLC   =X'00027D7D',0(R1)  FIX FOR BUG IN COMPILER
         BNE   E20T10
         XC    0(6,R1),0(R1)
E20T10   DS    0H
         DROP  R15
         SPACE  3
E20AREDD DS    0H
* THE USER'S PROGRAM HAS DD-CARDS AND WE MUST DILIGENTLY
*   ALLOCATE THEM
         SPACE
E20READD DS    0H
         CALL  UJE50RD
         LTR   R15,R15
         BNZ   E20RETN0
E20TDD   DS    0H           TEST FOR DD
         CLI   DDDD1,C'D'
         BNE   E20NOTDD
         CALL  GETTIME
         MVC   D20DDNT,CURRTIME
* IF NEW PASS, ALLOCATE WITHOUT A DDNAME SO WE CAN KEEP IT
         MVC   D20WDSN,BLANKS              BLANK THE DSNAME WORK AREA
         MVC   D20WVOL,BLANKS              BLANK THE DSNAME WORK AREA
         TM    DDUSE,B'11000000'    NEW OR MOD?
         BZ    E20NAL22             NO, SO SKIP THIS
         CLI   DDDISP+1,C'P'        PASS ?
         BNE   E20NAL22
         CALL  UJE49VOL             READS JBCB'S, GETS VOLUMES ETC
         MVC   D20TDDN,DDDDNAME      SAVE FOR NEW DATA SETS
         MVC   D20RDISP,DDDISP      SAVE JOL'S DISP(1) FIELD
         MVC   DDDDNAME,=CL8' '     BLANK DDNAME SO WE GET A SYSNNN
         CALL  UJE21ALL             ALLOCATE THE DD AS NEW
         MVC   DDDDNAME,D20TDDN     RESTORE DDNAME
         NI    DDDISP,B'00111111'   SET TO OLD FOR 2ND ALLOCATE
         CALL  UJE21ALL             ALLOCATE THE DD AS OLD
         MVC   DDDISP,D20RDISP      RESTORE JOL'S DISP FIELD
         MVI   DDDISP+1,C'P'        RESTORE JOL'S DISP FIELD
         TM    DDDISP,B'01000000'        NEW?
         BO    E20JNEWD                    YES
         OI    JFCBIND2,B'10000000' NO, MUST BE MOD - SET FOR PRINTING
         B     E20PDDDN             GO PRINT DDNAME ETC
E20JNEWD MVI   JFCBIND2,B'11000000'      SET TO NEW FOR PRINTING
         B     E20PDDDN             GO PRINT DDNAME ETC
E20NAL22 DS    0H
         CALL  UJE21ALL             ALLOCATE THE DD
         CALL  UJE49VOL             READS JBCB'S, GETS VOLUMES ETC
         CLC   DDDDNAME,BLANKS      CONCATENATED?
         BNE   E20GVOL
         MVC   DDNAME,SAVEDD
         MVC   #DDNAME,=H'8'
*        DYNPARM DDNAME=((8,#DDNAME,#ERETDDN)),VRB=C
         LA    R1,DYNCONC
         DYNALLOC
*
*  CHECK TO SEE IF ERRORS OCCURED.
*
         LTR   R15,R15
         BNZ   D20ERR                RETURN CODE ZERO
         L     R0,CONCERR            TEST ERR AND INFO CODE
         LTR   R0,R0                 ERROR ?
         BZ    E20GVOL
D20ERR   LA    R1,DYNCONC
         LR    R0,R15          R15
         $CALL UJD03ERR
E20GVOL  CALL  UJE49VOL             READS JBCB'S, GETS VOLUMES ETC
E20PDDDN MVC   D20DDN,DDDDNAME      SAVE FOR NEW DATA SETS
         MVC   D20DSID,DDDSID
         CLI   DDTYPE,DDWORKDS
         BNL   E20ISDSN
* HERE, IT IS A PRINTER OR SPECIAL FILE
         CLEAR  D20DSN
         CLI   DDTYPE,DDSYSIN
         BE    E20SYSIN
* HERE, IT IS A PRINTER OR PUNCH FILE
         CLI   DDTYPE,DDSYSOUT
         BE    E20SYSOU
* HERE, IT IS A PUNCH FILE
         MVC   D20DSN(11),=C'PUNCH FILE='
         MVC   D20DSN+11(1),DDDSNAME
         B     E20PDISP
E20SYSOU MVC   D20DSN(7),=C'SYSOUT='
         MVC   D20DSN+7(1),DDDSNAME
         B     E20PDISP
E20SYSIN MVC   D20DSN(16),=C'CARD IMAGE FILE='
         MVC   D20DSN+16(8),DDDSNAME
         B     E20PDISP
E20ISDSN DS    0H
* AFTER ALLOCATION, DDDSNAME MAY HAVE THE (GDG) NUMBER.
* SET UP PROPER LENGTH DSNAME FOR MESSAGES NOW, AFTER ALLOC.
         MVC   DSNAME,DDDSNAME
         LA    R15,L'DDDSNAME-1
E20TEDSN DS    0H
         LA    R14,DDDSNAME(R15)
         CLI   0(R14),C' '
         BNE   E20DSNOK
         BCT   R15,E20TEDSN
E20DSNOK DS    0H
         LA    R15,1(R15)
         STH   R15,#DSN
         MVC   D20WDSN,BLANKS              BLANK THE DSNAME WORK AREA
         LA    R15,1(R15)                  PREPARE TO EXECUTE MVC
         EX    R15,E20DSMVC                SHIFT IT.
         B     E20TGDG
E20DSMVC MVC   #D20WDSN(*-*),#DSNAME       COPY FIXED DSNAME
E20TGDG  CLI   DDMBR,C'('                  GDG ?
         BE    E20GDG1                     YES, FIND GEN NUMBER
         CLI   DDMBR,C'+'                  GDG ?
         BE    E20GDG1                     YES, FIND GEN NUMBER
         CLI   DDMBR,C' '                  NO MEMBER, NO GDG ?
         BE    E20IGNRX                    YES, SO LEAVE IT.
         B     E20PMBR                     ELSE PRINT MEMBER NAME.
E20GDG1  DS    0H
* HERE WE HAVE A GENERATION DSNAME TO PRINT.
*
* TO SAVE PAPER ETC, SET UP DSNAME LIKE THIS :-
*   PAYROLL.MASTER(0):-G0045V00
*
         LH    R15,#D20WDSN                GET LENGTH
         LA    R14,D20WDSN(R15)            POINT TO END
         LA    R15,10(R15)                 RESET LENGTH ** NOW **
         STH   R15,#D20WDSN                  SO WE HAVE A FREE REGISTER
         LH    R15,#ERETDSN                GET LENGTH OF SVC 99 DSN
         LA    R15,ERETDSN-8(R15)          POINT TO G0000V00 NUMBER
         MVC   1(2,R14),=C':-'             SET UP SEPERATOR
         MVC   3(8,R14),0(R15)             SHIFT IN G0000V00
         B     E20PDSN                     GO PRINT THE DSNAME NOW
         SPACE 3
E20PMBR  DS    0H
* HERE WE HAVE A MEMBER NAME TO ADD TO THE DSNAME FOR PRINTING
         MVC   #D20WDSN(46),#DSNAME        COPY RETURNED DSNAME
         LH    R15,#D20WDSN                GET ITS LENGTH
         LA    R14,D20WDSN-0(R15)          POINT TO END OF DSN
         MVI   0(R14),C'('                 MEMBER START IND
         MVC   1(8,R14),DDMBR              COPY IN MEMBER NAME
         LA    R14,9(R14)                  POINT TO LAST CHAR MBR
E20FENDM CLI   0(R14),C' '                 BLANK ?
         BNE   E20ENDMB                    END OF MEMBER
         SH    R14,=H'1'
         B     E20FENDM                    FIND MEMBER END
E20ENDMB DS    0H                          GOT IT
         MVI   1(R14),C')'                 SHIFT IN ')'
         LA    R15,D20WDSN                 CALCULATE LENGTH
         SR    R14,R15                     GOT IT
         STH   R14,#D20WDSN                SET LENGTH IN WORK DSN
E20IGNRX DS    0H
E20PDSN  DS    0H                          PRINT THE DSNAME NOW
         MVC   D20DSN,D20WDSN              SHIFT FIRST 30 CHARACTERS
* PRINT DISP FIELDS
E20PDISP MVC   D20DISP1(8),=CL8' '
         TM    JFCBIND2,B'11000000'        NEW?
         BO    E20NEWDS                    YES
         TM    JFCBIND2,B'01001000'        SHR?
         BO    E20SHRDS                    YES
         TM    JFCBIND2,B'01000000'        OLD?
         BO    E20OLDDS                    YES
         TM    JFCBIND2,B'10000000'        MOD?
         BO    E20MODDS                    YES
         B     E20TREST                    TEST DISP(2)
E20NEWDS MVC   D20DISP1,=C'NEW'
         B     E20TREST                    TEST DISP(2)
E20SHRDS MVC   D20DISP1,=C'SHR'
         B     E20TREST                    TEST DISP(2)
E20OLDDS MVC   D20DISP1,=C'OLD'
         B     E20TREST                    TEST DISP(2)
E20MODDS MVC   D20DISP1,=C'MOD'
* DISP(2) FIELDS
E20TREST DS    0H           TEST DISP(2)
         CLI   DDDISP+1,C'P'               PASS ?
         BNE   E20TLAST
         MVC   D20DISP2,=C',PASS   '
         B     D20TUNIT
E20TLAST CLI   DDDISP+1,C'L'               LAST ?
         BNE   E20TDEL
         MVC   D20DISP2,=C',LAST   '
         B     D20TUNIT
E20TDEL  CLI   DDDISP+1,C'D'               DELETE ?
         BNE   E20TOTHR
         MVC   D20DISP2,=C',DELETE '
         B     D20TUNIT
E20TOTHR CLI   DDDISP+1,C' '               BLANK ?
         BE    D20TUNIT                    YES
         MVI   D20DISP2,C','
         MVC   D20DISP2+1(1),DDDISP+1      ?????? COPY ANYWAY
D20TUNIT MVC   D20UNIT,DDUNIT
*
         MVC   D20LABL,=CL8' '             BLANK IT
         LH    R1,DDLABEL
         CVD   R1,DBL
         ZAP   TEMP,DBL
         MVC   D20LABL,=X'40202020202020'
         ED    D20LABL,TEMP
* DO RECORD FORMAT FIELD
         MVI   D20COMA1,C' '            BLANK COMMA FIELD
         CLEAR D20BLKS
         CLEAR D20LREC
         CLEAR D20DCB
         CLC   DDOSVB,=AL2(DDCATLGS-DDOSVB+2)  SHORT RECORD ?
         BNH   E20NODCB
         IFNULL DDLRECL,DDBLKSZE,E20NODCB
         LH    R1,DDBLKSZE
         CVD   R1,DBL
         MVC   D20BLKS,=X'40202020202020'
         ZAP   TEMP,DBL
         ED    D20BLKS,TEMP
         MVI   D20COMA1,C','            PUT COMMA IN FIELD
         LH    R1,DDLRECL
         CVD   R1,DBL
         MVC   D20LREC,=X'40202020202020'
         ZAP   TEMP,DBL
         ED    D20LREC,TEMP
         CLC   DDRECFM,=CL5' '          NONE SPECIFIED (BLANK)
         BE    E20NRECF
         CLI   DDRECFM,C'%'             NONE SPECIFIED (NODCB)
         BNE   E20RECFM
E20NRECF MVC   D20DCB,=CL4'NONE'
         B     E20REFDN
E20RECFM MVC   D20DCB,DDRECFM
E20REFDN DS    0H
E20NODCB DS    0H
         CLEAR D20PRIM
         CLEAR D20SEC
         CLEAR D20DIR
         CLEAR D20SPC
         CLC   DDOSVB,=AL2(DDCATLGS-DDOSVB+2)  SHORT RECORD ?
         BNH   E20NSPC                         YES, SO NO SPACE
         IFNULL DDPRIM,DDSEC,DDDIRECT,E20NSPC  NO SPACE
         MVC   D20PRIM,=X'40202020202020'
         MVC   D20SEC,=X'40202020202020'
         MVC   D20DIR,=X'40202020202020'
         LH    R1,DDPRIM
         CVD   R1,DBL
         ZAP   TEMP2,DBL
         ED    D20PRIM,TEMP2
         LH    R1,DDSEC
         CVD   R1,DBL
         ZAP   TEMP2,DBL
         ED    D20SEC,TEMP2
         LTR   R1,R1
         BZ    E20NSPC1               E20-NO-SPACE-COMMA-1 !!!
         MVI   D20SEC,C','            PUT COMMA IN 1ST BYTE OF FIELD
E20NSPC1 LH    R1,DDDIRECT
         CVD   R1,DBL
         ZAP   TEMP2,DBL
         ED    D20DIR,TEMP2
         LTR   R1,R1
         BZ    E20NSPC2               E20-NO-SPACE-COMMA-2 !!!
         MVI   D20DIR,C','            PUT COMMA IN 1ST BYTE OF FIELD
E20NSPC2 EQU   *
         CLI   DDCYLTRK,C' '          NONE SPECIFIED (BLANK)
         BE    E20ESPCC
         CLI   DDCYLTRK,C'C'           CYLS ?
         BNE   E20TTRK
         MVC   D20SPC,=CL3'CYL'
         B     E20ESPCC              END SPACE
E20TTRK  CLI   DDCYLTRK,C'T'             NONE SPECIFIED (NODCB)
         BNE   E20TBLK
         MVC   D20SPC,=CL3'TRK'
         B     E20ESPCC              END SPACE
E20TBLK  CLI   DDCYLTRK,C'B'           BLKS?
         BNE   E20TABS
         MVC   D20SPC,=CL3'BLK'
         B     E20ESPCC              END SPACE
E20TABS  CLI   DDCYLTRK,C'A'           ABSTR?
         BNE   E20OTHR4
         MVC   D20SPC,=CL3'ABS'
         B     E20ESPCC              END SPACE
E20OTHR4 MVC   D20SPC(1),DDCYLTRK
E20NSPC  DS    0H
E20FVOL  MVC   D20VOLS,DDVOLUME
* THE FOLLOWING CODE PUTS 'VOLNAME(1,SL)' IF IT IS A TAPE.
         CLC   JFCBFLSQ,=H'0' TEST IF TAPE                        87150
         BE    E20DISK        NO, DON'T PUT OUT ON LABEL.         87150
*        TM    DDUNITYP,X'80' TEST IF TAPE                        87150
*        BO    E20DISK        NO, DON'T PUT OUT ON LABEL.         87150
* HERE IS A TAPE VOLUME.                                          87150
         MVC   D20WLBL,=X'40202020202020'
         LH    R1,JFCBFLSQ     GET LABEL NUMBER
         CVD   R1,DBL
         ZAP   TEMP2,DBL
         ED    D20WLBL(5),TEMP2
         LA    R1,5
E20FCHK1 CLI   D20WLBL,C' '    DROP STARTING BLANKS
         BNE   E20EFILE
         MVC   D20WLBL(5),D20WLBL+1 DROP LEADING BLANK
         BCT   R1,E20FCHK1
E20EFILE DS    0H
         STH   R1,#D20WLBL     SET LENGTH OF STRING
         LA    R15,D20WLBL(R1) POINT TO END OF STRING
         NI    JFCBLTYP,X'7F'  DROP HIGH BIT
         CLI   JFCBLTYP,JFCBAL AL ?
         BNE   TJFCBLTM        TEST LTM
         MVC   0(3,R15),=C',AL'
         LA    R1,3(R1)
         B     E20COPYV        COPY VOL INFO IN
TJFCBLTM CLI   JFCBLTYP,JFCBLTM LTM ?
         BNE   TJFCBBLP        TEST BLP
         MVC   0(4,R15),=C',LTM'
         LA    R1,4(R1)
         B     E20COPYV        COPY VOL INFO IN
TJFCBBLP CLI   JFCBLTYP,JFCBLP BLP ?
         BNE   TJFCBSUL        TEST AUL
         MVC   0(4,R15),=C',BLP'
         LA    R1,4(R1)
         B     E20COPYV        COPY VOL INFO IN
TJFCBAUL CLI   JFCBLTYP,JFCAUL AUL ?
         FIX   '?????????????? ?????????'
         BNE   TJFCBSUL        TEST SUL
         MVC   0(4,R15),=C',AUL'
         LA    R1,4(R1)
         B     E20COPYV        COPY VOL INFO IN
TJFCBSUL CLI   JFCBLTYP,JFCSUL SUL ?
         BNE   TJFCBNSL        TEST NSL
         MVC   0(4,R15),=C',SUL'
         LA    R1,4(R1)
         B     E20COPYV        COPY VOL INFO IN
TJFCBNSL CLI   JFCBLTYP,JFCNSL NSL ?
         BNE   TJFCBSL         TEST SL
         MVC   0(4,R15),=C',NSL'
         LA    R1,4(R1)
         B     E20COPYV        COPY VOL INFO IN
TJFCBSL  CLI   JFCBLTYP,JFCSL  SL ?
         BNE   TJFCBNL         TEST NL
         MVC   0(3,R15),=C',SL'
         LA    R1,4(R1)
         B     E20COPYV        COPY VOL INFO IN
TJFCBNL  CLI   JFCBLTYP,JFCSL  NL ?
         BNE   TJFCBXX         TEST ???
         MVC   0(3,R15),=C',NL'
         LA    R1,4(R1)
TJFCBXX  DS    0H
E20COPYV DS    0H              COPY VOL INFO IN
         STH   R1,#D20WLBL     RESET LENGTH OF STRING
         MVC   D20WVOL(6),VOL   SHIFT TO PRINT LOCATION
         MVI   D20WVOL+6,C'('  OPEN COMMENT FOR LABEL NUMBERS
         MVC   D20WVOL(8),D20WLBL MOVE '1,SL'
         LA    R15,D20WVOL(R1) GET END ADDRESS
         MVI   0(R15),C')'     CLOSE COMMENT
         B     E20ENDLB        FINISHED THAT BIT
* FIX LATER
* #VOLS CONTAINS LENGTH OF VOL STRING (CHANGE LATER?)
E20DISK  CLC   #VOL,=H'6'         ONE OR MORE VOLS?
         BH    E20NOSL            MORE, IGNORE FOR NOW
         MVC   #D20WVOL(8),#VOL   SHIFT TO WORK LOCATION
         LH    R15,#D20WVOL       GET THE LENGTH
         B     E20NOSL            STORE VOLUMES
E20ENDLB DS    0H
E20NOSL  DS    0H
E20ESPCC DS    0H
         WRITE D203DECB,SF,PRINT,D20DDAL  WRITE THE ALLOCATION MSSGE
         CHECK D203DECB                   WAIT TILL IT GOES
* THE DSNAME FIELD CAN HOLD A MAXIMUM OF 30 CHARACTERS, SO WE MUST
*     PRINT THE SECOND PART IF IT IS LONGER.
         MVC   D20DSN2,D20WDSN+L'D20DSN   SHIFT SECOND PART OF DSN
         CLC   D20DSN2,BLANKS             IS THERE MORE TO PRINT ?
         BNE   E20CONT                    MUST WRITE SECOND LINE
*        CLC   #D20WDSN,=AL2(L'D20DSN)     CHECK IF IT WILL FIT
*        BH    E20CONT                    MUST WRITE SECOND LINE
         B     E20READD                   GO FOR MORE
E20CONT  DS    0H                         CONTINUE ALLOC MSSGE
         WRITE D204DECB,SF,PRINT,D20SECL  WRITE CONTINUED MSSGE
         CHECK D204DECB                   WAIT TILL IT GOES
         B     E20READD                   GO FOR MORE
*        MVC   #D20WDSN(L'D20WDSN+2),#ERETDSN  COPY RETURNED DSNAME
E20NOTDD DS    0H
         $POINT INSTRUCT,TTR$INST
         B     E20RETN0        TO XCTL
         SPACE 3
#D20WDSN DC    H'0'                       WORK AREA FOR DSNAMES
D20WDSN  DC    CL54' '                    (DSN=44 + MEMBER=10 (XXXXXX))
D20WDSNX DC    CL10' '                    *** DON'T MOVE THIS ***
         SPACE
#D20WVOL DC    H'0'                       WORK AREA FOR VOLUMES
D20WVOL  DC    CL20' '                    (1 LINE AT A TIME)
         SPACE
#D20WLBL DC    H'0'                       WORK AREA FOR FILENOS
D20WLBL  DC    CL10' '
         SPACE
#D20TDDN DC    H'8'
D20TDDN  DC    CL8' '
D20RDISP DC    XL1'0'                  SAVE DISP HERE FOR NEW
TEMP     DS    PL3
TEMP2    DS    PL2
         SPACE 3
* THE FOLLOWING LINES ARE USED TO PRINT OUT ALLOCATION MESSAGES
*     FOR THE DYNAMIC ALLOCATION VERSION OF JOL.
D20PRGP  DC    AL2(D20END1-*,0)
         DC    AL2(D20END1-*,0),C' '
D20PRGT  DC    CL8' '                  TIME GOES HERE
         DC    C' ALLOCATION FOR INSTRUCTION NUMBER '
D20STMT  DC    CL4' '
         DC    C' STEP '
D20STEPN DC    CL8' '
         DC    C' PROGRAM '
D20PRGN  DC    CL8' '
         DC    C' SSI '
D20SSI   DC    CL8' '
D20END1  DS    0H
          SPACE
D20HEAD1 DC    AL2(D20END2-*,0)
         DC    AL2(D20END2-*,0),C' '
         DC    C'         --DSID--'
         DC    C' -DDNAME- '
         DC    C'------------DSNAME------------ '
         DC    C'---DISP--- ------DCB------ '
         DC    C'--UNIT-- ---VOLUMES--- '
         DC    C'----SPACE----'
D20END2  DS    0H
          SPACE
D20DDAL  DC    AL2(D20END3-*,0)
         DC    AL2(D20END3-*,0),C' '
D20DDNT  DC    CL8' '                  TIME GOES HERE
         DC    C' '
D20DSID  DC    CL8' '       DSID
         DC    C' '
D20DDN   DC    CL8' '       DDNAME
         DC    C' '
D20DSN   DC    CL30' '      DSNAME AND MEMBER MAYBE
         DC    C' '
D20DISP1 DC    CL3' '       DISPOSITION
D20DISP2 DC    CL7' '       DISPOSITION
         DC    C' '
D20DCB   DC    CL4' '       DCB
         ORG   *-1          FOR EDIT INSTRUCTION
D20LREC  DC    CL6' '       LRECL
D20COMA1 DS    0C
D20BLKS  DC    CL6' '       BLOCKSIZE
         DC    C' '
D20UNIT  DC    CL8' '       UNIT
         DC    C' '
D20VOLS  DC    CL13' '      VOLUME INFORMATION (MAY BE CONTINUED)
D20PRIM  DC    CL5' '       PRIMARY ALLOCATION
D20SEC   DC    CL5' '       SECONDAY ALLOCATION
D20DIR   DC    CL5' '       DIRECTORY ALLOCATION
D20SPC   DC    CL3' '       CYL, TRK
D20END3  EQU   *
D20LABL  DC    CL5' '       LABEL NUMBER
         DC    C' '
         SPACE 3
* FOR SECOND AND SUBSEQUENT LINES OF DSNAME AND VOLUMES.
D20SECL  DC    AL2(D20END4-*,0)
         DC    AL2(D20END4-*,0),C' '
         DC    CL100' '
         ORG   D20SECL+(D20DSN-D20DDAL)
D20DSN2  DC    CL24' '      DSNAME AND MEMBER MAYBE(54-30)
         DC    C' '
         ORG   D20SECL+(D20VOLS-D20DDAL)
D20VOLS2 DC    CL13' '      VOLUME INFORMATION (CONTINUED)
D20END4  EQU   *
         ORG
          SPACE
         DC    80S(*)
         LTORG
         AIF   (&X8).X8340                                       88036
         IHAPDS
.X8340   ANOP                                                    88036
*        COPY UJD21ALL
         TITLE 'UJE21ALL: HANDLE DATASET ALLOCATION'
         JOLSAVE CSECT=UJE21ALL
*
*  DYNAMIC ALLOCATION OF DATA SETS.
*
*  PROBLEMS:-
*   1. SYSOUT DATA SETS GET SPUN OFF.
*      SOLUTION: ALLOCATE WITH SYSNNN NUMBER, THEN CONCATENATE
*                REAL DDNAME. AT END, DO NOT FREE, BUT DECONCATENATE.
* NO CLEM
*        PUT OUT REAL DD CARDS WITH DDNAMES NOT USED BY PGMS
*              MODIFY DDNAMES  AS REQUIRED
         FIX   'SOME PROBLEMS  WITH SYSOUT HERE'
*
*   2. TAPE SCRATCH VOLUMES WRITING LABEL 1 THEN 2 IN SAME STEP.
*      SVC99 CAN'T RETURN VOLUME NAME.
*      SOLUTION: ALLOCATE WITH SYSNNN NUMBER, OPEN FOR OUTPUT,
*                ALLOCATE REAL DDNAME, FREE SYSNNN, PRESS ON.
*
*        HOW ABOUT OPEN OUT,  READ LABEL, CLOSE W/- LEAVE
*              OPEN OUT GETS TMS'S OK TO WRITE.
*              CLOSE W/- LEAVE KEEPS TAPE MOUNTED
*
         FIX   'IF DATASET IS TO BE RE-WRITTEN, CALL DELETE NEAR HERE'
*            AND THEN ALLOCATE AS A NEW DATASET
         LA    R0,WORK
         LA    R1,L'WORK
         SLR   R15,R15
         MVCL  R0,R14
         CLI   DDTYPE,DDSYSOUT       IS IT A SYSOUT FILE
         BNE   E21NPRT               NO, BYPASS CLEARING DDNAME
E21NPRT  CLC   =CL8' ',DDDDNAME      Q... CONCATENATED FILE?
         BE    E21NOTCT              A... NO
         MVC   SAVEDD,DDDDNAME       COPY THE DDNAME
E21NOTCT DS    0H
         CLC   =C'PRGLIB  ',DDDDNAME Q... PRGLIB?
         BE    E21MVDDN              A... YES
         CLC   =C'STEPLIB ',DDDDNAME Q... STEPLIB?
         BE    E21STEPL              A... YES
         CLC   =C'JOBLIB  ',DDDDNAME Q... JOBLIB?
         BE    E21JOBL               A... YES
         B     E21TSYS               A... NO, SEE WHAT IT IS
         FIX   'WE JUST FOUND A STEPLIB'
E21STEPL MVC   DDDDNAME,=CL8'STEPLIB$' CHANGE FOR DYN ALLOC
E21MVDDN MVC   STEPLBDD,DDDDNAME      MOVE IN THE DDNAME
         B     E21TSYS
E21JOBL  MVC   DDDDNAME,=CL8'JOBLIB$' CHANGE FOR DYN ALLOC
         MVC   JOBLBDD,DDDDNAME       MOVE IN THE DDNAME
E21TSYS  CLI   DDTYPE,DDSYSIN      Q... SYSIN DATASET?
         BNE   E21NSSIN            A.. NO
         MVC   DDMBR,DDDSNAME+2    ESTABLISH MEMBER NAME
         CLEAR DDDSNAME,DSN
*        MVC   DDDSNAME(L'DDDSNAME),=CL44'&&INST'
         MVC   DDDSNAME,SYSINDSN
         MVC   #DSN(28),#SYSINDS
         CLEAR DDVOLUME
         MVC   DDVOLUME(6),SYSINVOL
         MVI   DDUSE,B'00001000'   DISP=(SHR,KEEP)
         MVI   DDTYPE,DDMEMSPC
         MVI   DDUNITYP,X'80'         TELL ALLOC THAT IT IS A DISK.
         MVC   DDUNIT(3),SYSINUNI     UNIT ADDRESS
         B     E21X8A4
E21NSSIN DS    0H
         SPACE 2
*  BEFORE GOING ANY FURTHER, WHY NOT HAVE A LOOK AROUND TO SEE
*   WHAT IS ALREADY AVAILABLE?
* ****** UNLESS THIS IS A CONCATENATED FILE, IN WHICH CASE WE SHALL
*        DO A PROPER ALLOCATION      CVC
         CLC   =CL8' ',DDDDNAME     CONCATENATED ?
         B     XXXALLOC             YES, GO THROUGH NORMAL ALLOC
         BE    E21NOFCT             YES, GO THROUGH NORMAL ALLOC
         SPACE 2
XXXALLOC CALL  UJD03DS1,DDDSNDET
         SPACE 3
         B     E21RETN
         SPACE 5
E21NOFCT DS    0H
E21X8A4  DS    0H
         SPACE 2
*  NOW CHECK FOR VOLREF
         SPACE
         CLI   DDVOLUME,C'*'         VOLREF USED?
         BNE   E21X8A5             NO
         BAL   R14,E21VREF         GO AND FIX VOLREF
E21X8A5  DS    0H
         CALL  UJD03DS1,DDDSNDET   ALLOCATE THE DATA SET
*        CALL UJE03X8A,(DDOSVB,CALLARE2),VL,MF=(E,CALLAREA)
         ST    R15,TASKRETN
         LTR   R1,R15
         BZ    E21DDOK          ALLOCATED PROPERLY
         CH    R15,=H'172'      FAIL BECAUSE OF NO DEVICE AVAIL?
         BNE   U21CVCAF         NO, GIVE FAILURE MESSAGE
         XC    ALLOCECB,ALLOCECB
   WTOR  'WHEN A TAPE DRIVE IS AVAILABLE, PLEASE REPLY GO',ALLOCREP,   *
               2,ALLOCECB
         WAIT  ECB=ALLOCECB
         B     E21X8A5          TRY AGAIN
U21CVCAF CVD   R15,DBL
         MVC   TASKSSI,=X'40202120'
         ED    TASKSSI,DBL+6
         JOLERR 406,'DSID ',DDDSID,', DDNAME ',                        .
               DDDDNAME,', DS ',#DSN,' FAILED WITH RETURN CODE',       .
               TASKSSI
         JOLERR 500,'RUN TERMINATED DUE TO ALLOCATION ERROR'
         ABEND 2 ,,STEP
         FIX   'WHY DO WE USE A STEP ABEND?'
         JOLRETN
         FIX   'CANCEL JOB ??? '
E21DDOK  DS    0H
         JOLRETN
         AGO   .NDUMP
         CLEAR DPDATA
         LA    R0,DPBLKL
         SLL   R0,16
         ST    R0,DPBLOCK
         LA    R0,DPLINEL
         SLL   R0,16
         ST    R0,DPLINE
         L     R2,CALLARE2     ADDRESS OF AREA TO DUMP
E21LP0   DS    0H
         ST    R2,CALLAREA
         UNPK  DBL(9),CALLAREA(5)
         TR    DBL,HEX
         MVC   DPADDR,DBL+2
         MVC   DPCHARS,0(R2)   COPY DATA IN CHARACTERS
         TR    DPCHARS,TRTAB   REMOVE SOME HARD-TO-PRINT DATA
         LA    R14,DPHEX       ADDRESS FOR HEX DATA
         LA    R1,2
E21LP1   DS    0H
         LA    R0,4            4 SEGMENTS
E21LP2   DS    0H
         UNPK  DBL(9),0(5,R2)  CONVERT SOME TO HEX
         TR    DBL,HEX
         MVC   0(8,R14),DBL    INTO THE PRINT LINE
         LA    R14,9(,R14)     NEXT FOR OUTPUT
         LA    R2,4(,R2)       NEXT FOR INPUT
         BCT   R0,E21LP2
         LA    R14,1(,R14)    AN EXTRA SKIP IN PAGE CENTRE
         BCT   R1,E21LP1
         L     R1,=A(S23DECB)
         WRITE (1),SF,,DPBLOCK,MF=E
         L     R1,=A(S23DECB)
         CHECK (1)
         C     R2,CALLARE2+4   Q... ANY MORE?
         BNH   E21LP0          A... YES
         L     R1,TASKRETN
*        CALL  UJS45AER
         TM    E21FLAG,E21CONT
         BO    E21RETN
         JOLERR 500,'RUN TERMINATED DUE TO ALLOCATION ERROR'
         ABEND 2 ,,STEP
         FIX   'WHY DO WE USE A STEP ABEND?'
E21DDOK  DS    0H
         JOLRETN
         FIX '************'
         CLI   DDTYPE,DDSYSOUT    IS IT A SYSOUT FILE
         BE    E21SYSO            YES SO ADJUST MSG
         CLC   =CL6' ',DDVOLUME   IS THERE A VOLSER?
         BE    E21PIV             NO SO PUT IN VOLUME
E21DDOK2 MVC   VOL(12),DDVOLUME
E21DDOK1 EQU   *
         MVC   #DSN,=H'28'
         MVC   #VOL,=H'12'
*        JOLERR 003,                                                  .
*              'DSID ',DDDSID,                                        .
*              ' DDNAME ',DDDDNAME,' DSN ',#DSN,                      .
*              ' VOL ',#VOL,' ALLOC '
         B     E21RETN
E21PIV   DS    0H
* FIND VOLUME
         FIX   'SEARCH QDB ETC. CODE MAY BE FOUND IN JOLTSF'
         B     E21OSQDB
         L     R4,ATCB           POINT AT TCB
         L     R4,TCBJSCB-TCB(,R4) POINT AT JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4) POINT AT FCT CHAIN
         USING FCT,R4             MAP FCT
E21PIV1  EQU   *
         CLC   FCTFLN,DDDSNAME    IS IT THIS ONE?
         BE    E21PIV2            DO WHAT IS REQUIRED
         ICM   R4,7,FCTNFCTA      POINT AT NEXT FCT
         BNZ   E21PIV1            LOOK AT NEXT FCT
         B     E21DDOK2           IMPOSSIBLE TO GET HERE..BUT FOR
*                                  SAFETY SAKE
E21PIV2  EQU   *
         L     R4,FCTVCT           POINT AT VCT
         MVC   VOL(6),8(R4)        PLUG IN VOL
         B     E21DDOK1            AND ISSUE MESSAGE
E21SYSO  EQU   *
* HERE WE MUST CONCATENATE THE REAL DDNAME TO THE SYSNNN DDNAME
         MVC   #DSN,=H'1'
         JOLERR 004,                                                   .
               'DSID ',DDDSID,                                         .
               ' DDNAME ',DDDDNAME,' SYSOUT=',#DSN,' ALLOC '
.NDUMP   ANOP
E21RETN  DS    0H
         TM    DDUNITYP,X'80'
         BZ    E21NPROP       DON'T PROPOGATE VOLUME AS IT MAY
*                             BE A SCRATCH TAPE (IE NO VOLUME YET)
         CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'
E21NPROP MVI   E21FLAG,0
         L     R15,TASKRETN
         B     RETRN
         SPACE 3
*  IT IS NECESSARY TO LOCATE THE FCT FOR THE DATASET WHOSE NAME IS
*    IN DDVOLUME, TO FIND THE CURRENT VOLUMES AND COPY THE LIST TO
*    THE ALLOCATION REQUEST FOR THIS DATASET
E21VREF  DS    0H
         BR    R14             ALREADY DONE                       87150
         AGO   .X821FCT
         LR    R10,R14              SAVE RETURN ADDRESS
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E21VNFCT              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY
         SPACE
         USING FCT,R4
E21VNXTF DS    0H
         CLC   FCTFLN,DDVOLUME+1   Q... IS THIS IT?
         BE    E21VFFCT            A... YES, GO AND GET THE VOLUME INFO
         SPACE
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E21VNXTF              GO AND TEST THE NEXT ONE
E21VNFCT DS    0H                    END OF CHAIN, AND NOT FOUND
         JOLERR 507,'DSID ',DDDSID,',DS ',#DSN,                        .
               ' IS NOT ALLOCATED,',' VOLREF COULD NOT BE RESOLVED'
E21VFFCT DS    0H
         SPACE 3
* NOW I HAVE FOUND THE FCT, COPY THE VOLUME SERIAL NUMBERS
         SPACE 2
         CLEAR DDVOLUME
         SLR   R8,R8
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT
         BZ    E21VNFCT             EXIT IF THERE ARE NO VOLUMES
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT
         BH    E21VOK               BE IF OK
         JOLERR 512,'DS ',DDDSID,',',#DSN,                             .
               ' IS NOT ALLOCATED,',' REFERS TO TOO MANY VOLUMES'
E21VOK   DS    0H
         L     R6,FCTVCT
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES
E21VNXTV DS    0H
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA
         L     R6,4(,R6)            ADDRESS THE NEXT VCT
         BCT   R8,E21VNXTV          CONTINUE UNTIL ALL AREA DONE
         SPACE 2
*  WELL, THAT SHOULD BE ALL: NOW FREE THE ORIGINAL DATASET
         SPACE
         MVC   SAVEDDET,DDDSNDET
         MVC   DDDDNAME,FCTACSN
         MVI   DDDISP+1,C'L'      LAST USE
         CALL  UJE14FRE           FREE THE FILE, ASSUME IT WORKED
         MVC   DDDSNDET(256),SAVEDDET RESTORE THE ORIGINAL
         UJE22UPD FCTFLN,DDVOLUME FIX FUTURE VOLUME REFERENCES
         DROP  R4
.X821FCT ANOP
         SPACE 5
         DC    20S(*)   FOR PATCHES
TRTAB    DC    256AL1(*-TRTAB) ALL THINGS TO ALL THINGS
         ORG   TRTAB
         DC    64X'40'         FIX THE FIRST ONES
         ORG   TRTAB+C'9'+1
         DC    6C' '           AND THE LAST ONES
         ORG
ALLOCREP DC C'   ' FOR ALLOCATION REPLIES
ALLOCECB DC  F'0'  FOR ALLOCATION REPLIES
*        COPY UJE23RET
         TITLE 'UJE23RET: HANDLE RETURN INSTRUCTION'
           JOLSAVE CSECT=UJE23RET                                 74365
           L   R7,=A(#TKN)
           USING #TKN,R7
         JOLERR 101,'RETURN ',#TKN,' EXECUTED'              FIX-X 76200
           L R14,=A(RETURN)                                       74365
           JOLRETN (15,12),RC=0                                   74365
         DC  10S(*)
           SPACE 3                                                75311
           JOLSAVE CSECT=UJE31OPT                                 75311
           MVI JOLSVC,X'0A'    SVC INSTRUCTION CODE               75311
           MVC JOLSVC+1(1),ITEXT+2 SVC NUMBER                     75311
           JOLRETN  RC=0                                          75311
         DC  10S(*)
           LTORG
         LTORG
*        COPY UJD30VOL
         LTORG
         TITLE 'PROPOGATE VOLUMES IN JOL JOBQ'
           JOLSAVE CSECT=UJE30VOL                                 74365
*        B     E30RETN4       GET OUT FOR NOW
* THIS ROUTINE IS CALLED TO FIND THE VOLUME THAT A DATA SET
*  WAS ALLOCATED ON, AND THEN PROPOGATES THIS INFORMATION
*  DOWN THE JOL QUEUES. IT ALSO FIXES UP VOLREFS WHEN REQD.
*
* IT IS CALLED LINK  :-
*
*        CALL  UJE30VOL       PROPOGATE VOLS DOWN JOL 'JOBQ'
*
         CLI   DDTYPE,DDPUNCH   Q... SYSIN, SYSOUT OF SOME KIND?
         BNH   E30RETN4       DON'T PROPOGATE SYSOUT VOLS
         CLC   =C'*DUMMY ',DDDSNAME
         BE    E30RETN4       DON'T PROPOGATE DUMMY VOLS
         CLC   =C'NULLFILE ',DDDSNAME
         BE    E30RETN4       DON'T PROPOGATE DUMMY VOLS
*  AT THIS POINT, UJE49VOL HAS OBTAINED THE VOLUMES FOR THE DSNAME.
*  NOW, COPY THE VOLUME LIST AS REQUIRED.
         SPACE 2
         UJE22UPD DDDSNAME,JFCBVOLS,DDDDNAME FIX ALL VOLUME REFERENCES
S30RETN0 DS    0H
E30RETN0 DS    0H
           JOLRETN  RC=0
E30RETN4 DS    0H
           JOLRETN  RC=4
           AGO .X8E30
*  IT IS NECESSARY TO LOCATE THE FCT FOR THE DATASET WHOSE NAME IS
*    IN DDDSNDET, TO FIND THE CURRENT VOLUMES AND COPY THE LIST TO
*    THE ALLOCATION REQUEST FOR THIS DATASET
         L     R4,ATCB              ADDRESS MY TCB
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E30RETN4              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND THE DATASET ENTRY
         SPACE
         USING FCT,R4
E30TNXTF DS    0H
         CLC   FCTFLN,DDDSNAME     Q... IS THIS IT?
         BE    E30TFFCT            A... YES, GO AND GET THE VOLUME INFO
         SPACE
         ICM   R4,7,FCTNFCTA         NEXT FCT
         BNZ   E30TNXTF              GO AND TEST THE NEXT ONE
E30TNFCT DS    0H                    END OF CHAIN, AND NOT FOUND
         JOLERR 301,'DSID ',DDDSID,',DS ',#DSN,                        .
               ' IS NOT ALLOCATED,',' VOLUMES FOR DATA SET IN ERROR'
         B     E30RETN4       PRESS ON IN ANY CASE
E30TFFCT DS    0H
         SPACE 3
* NOW I HAVE FOUND THE FCT, COPY THE VOLUME SERIAL NUMBERS
         SPACE 2
         CLEAR DDVOLUME
         SLR   R8,R8
         ICM   R8,1,FCTVOLNO        LOAD VOLUME COUNT
         BZ    E30TNFCT             EXIT IF THERE ARE NO VOLUMES
         LA    R0,L'DDVOLUME/6      LOAD NUMBER OF VOLUMES ALLOWED
         CR    R0,R8                CHECK THAT THE SERIAL NUMBERS FIT
         BH    E30TOK               BE IF OK
         JOLERR 509,'DS ',DDDSID,',',#DSN,                             .
               ' IS NOT ALLOCATED,',' REFERS TO TOO MANY VOLUMES'
E30TOK   DS    0H
         L     R6,FCTVCT
         LA    R15,DDVOLUME         ADDRESS FOR VOLUMES
E30TNXTV DS    0H
         MVC   0(6,R15),8(R6)       COPY THE VOLUME SERIAL NUMBER
         LA    R15,6(,R15)          ADDRESS FOR NEXT AREA
         L     R6,4(,R6)            ADDRESS THE NEXT VCT
         BCT   R8,E30TNXTV          CONTINUE UNTIL ALL AREA DONE
         SPACE 2
         UJE22UPD FCTFLN,DDVOLUME FIX FUTURE VOLUME REFERENCES
S30RETN0 DS    0H
E30RETN0 DS    0H
           JOLRETN  RC=0
E30RETN4 DS    0H
           JOLRETN  RC=4
.X8E30   ANOP
         DC  10S(*)
           LTORG
*        COPY UJE50RD
         TITLE 'UJE48TAL: FIND WHETHER A DATASET IS ALLOCATED'
         JOLSAVE CSECT=UJE48TAL
*        JOLERR 199,'TESTING ALLOCATION FOR ',#DSN
         CALL  SRCHQDB,(DDDSNAME,DDDDNAME)
         MVC   DDNAME,DDDDNAME
         LTR   R15,R15
         BZ    RETN0                                              76200
         GENRETN RC=4                                             76200
         LTORG
         TITLE 'UJE49VOL: GET VOLUME INFO FOR A DATASET'
         JOLSAVE CSECT=UJE49VOL
*        JOLERR 199,'GETTING JFCB FOR ',DDDDNAME
         LA    R1,TEMPDCB
         USING IHADCB,R1
         MVC   DCBDDNAM,DDDDNAME
         CLI   DCBDDNAM,C' '
         BNE   E49RDJF
         CLI   DDVOLUME,C' '
         BNE   RETN0
         MVC   DDVOLUME,BLANKS
         MVC   DDVOLUME(6),ERETVOL
         MVC   #VOL(8),#ERETVOL
         SR    R15,R15
         B     RETN0                                              76200
         DROP  R1
E49RDJF  RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200
         CLC   JFCBFLSQ,=H'0' TEST IF TAPE                        87150
         BE    E49DISK        YES, SKIP OPEN FOR NEW TAPE         87150
         CLI   JFCBNVOL,0     ANY VOLUMES ?                       87150
         BNE   E49DISK        YES, SKIP OPEN FOR NEW TAPE         87150
* NEW TAPE, NO VOLSER
         OPEN  (TEMPDCB,OUTPUT) FORCE A TAPE TO BE MOUNTED        87150
         CLOSE (TEMPDCB)       CLOAE IT NOW                       87150
         RDJFCB TEMPDCB       GET DSNAME                 JOL30116 76200
         CLI   JFCBNVOL,0     ANY VOLUMES ?                       87150
         BNE   RETN0          NO, (HELP? ) LEAVE NOW              87150
E49DISK  MVC   DDVOLUME(L'JFCBVOLS),JFCBVOLS
         BAL   R14,E00FXVOL    SET UP VOLUME LIST IN #VOL         74365
         AIF   (&X8).NX8320                                      88036
         LA    R1,DDDDNAME
         CALL  SRCHTIOT
         LTR   R15,R15
         BNZ   E49RC0
         LA    R1,40(R1)       POINT TO UCB POINTER
         L     R1,0(R1)        POINT TO UCB PROPER
         MVC   DDUNIT,BLANKS   CLEAR DDUNIT
         MVC   DDUNIT(3),13(R1) GET UNIT ADDRESS
         MVI   DDUNITYP,X'FF'  TELLS US THAT IT IS AN ACTUAL ADDRESS
.NX8320  ANOP                                                    88036
E49RC0   CALL  UJE30VOL        PROPOGATE VOLUMES, FIX VOLREFS
*49RC0   SR    R15,R15
         B     RETN0                                              76200
           TITLE 'UJE50RD:READ A STATEMENT FROM JOL INSTRUCT FILE'
           JOLSAVE CSECT=UJE50RD
* THIS CSECT IS CALLED WHEN A NEW INSTRUCTION HAS TO BE
*    READ FROM THE INSTRUCT FILE.
           MVC #VOL,=H'0'     STOP SPURIOUS 0C4                  75311
           CLC TTR$INST,=A(0)  FIRST TIME IN,I.E. WE HAVEN'T
*                              EVEN REALLY STARTED YET ?
           BNE E50NOTF
           MVC RUNNAME,=CL8'$$INST'
         BLDL INSTRUCT,RUNBLDL
           B   E5002R(R15)
E5002R     B   E50GOTIT
           B   E5002R4
           B   E5002R8
E5002R4    JOLERR 501,'MEMBER $$INST ABSENT'
E5002R8    JOLERR 502,'I/O ERROR READING DIRECTORY'
           DS 0D
E50GOTIT DS    0H
         MVC TTR$INST,RUNTTRK
         MVI TTR$INST+3,0     SET Z=0 FIRST
         FIND  INSTRUCT,TTR$INST,C
         B     E50RD
E50NOTF  DS    0H
*        POINT INSTRUCT,TTR$INST
E50RD    DS    0H
           MVC INSTRUCT+33(3),=AL3(EOF)
           L  R15,=A(#TKNSTRG)
           USING  #TKNSTRG,R15
           CLEAR TKNSTRG
           DROP  R15
           L  R2,=A(INSTRDA)
           USING    INSTRDA,R2
           READ E50DECB,SF,INSTRUCT,(R2)
           CHECK E50DECB
* IF EOF WOULD HAVE GONE ELSE-WHERE
*******************************************************************DASD
*   THIS CALL TO MODULE $$JOLBUG WILL PRINT THE INSTRUCTION        DASD
*   JUST READ TO DDNAME '$JOL$BUG$' IF IT'S PRESENT                DASD
*   -----MAYBE A GOOD TRACE FACILITY----                           DASD
*   YOU MIGHT DO A JOLOPT CARD1='//JOLBUG DD SYSOUT=A'             DASD
*   IN THE COMPILE TO GET THIS DD IN EVERY STEP                    DASD
****************************************************02-23-78*******DASD
      CALL   $$JOLBUG,((2))     CALL PRINT MODULE                  DASD
           DROP  R2
           SPACE 3
           L   R7,=A(#TKN)
           USING #TKN,R7
*          NOTE INSTRUCT
*          ST  R1,TTR$INST
*          MVI TTR$INST+3,1    SET Z TO 1 SO NEXT READ GETS NEW BLK
           MVC INST(IBODY),INSTRDA
           MVC DDDSNDET(256),INSTRDA
           MVC STMT,ISTMT
           MVC GOTOLAB,=CL8'$$'
           CLI DDDD1,C'E'      EXEC PGM ?
           BNE E50TDD
         MVC ICOMMAND,=CL8'RUN'
         MVC STMT,PGMESTMT
         MVC GOTOLAB,PGMSTEP SHIFT STEPNAME FOR 'REAL' STEPNAME 75311
         JOLRETN
E50TDD   DS     0H
         CLI DDDD1,C'D'      DD-CARD TYPE ENTRY?
         BNE ISALABEL
*      IF TEMPORARY DSN, USE OUR TEMPORARY DSNAME AS THERE ARE
*      SOME PROBLEMS WITH SVC 99 DELETING TEMPORARIES BEFORE
*      IT SHOULD
         CLI   DDDSNAME,C'&&'   TEMPORARY DSNAME?
         BNE   E20NTEMP         NO.
         LH    R15,#TEMPDSN     GET LENGTH OF OUR TEMP DSN
         LA    R15,TEMPDSN(R15) POINT TO SPOT TO MOVE &&DSN
         MVI   0(R15),C'.'
         CLI   DDDSNAME+1,C'&&' DOUBLE & CODED ?
         BNE   E20ONEA
         MVC   1(8,R15),DDDSNAME+2 DROP 2ND
         B     E20TEMPF        TEMPORARY IS FIXED
E20ONEA  MVC   1(8,R15),DDDSNAME+1 SET UP REAL DSNAME
E20TEMPF MVC   DDDSNAME,TEMPDSN
E20NTEMP DS    0H
* NOW FOR DD-CARD TYPE ENTRIES,WE DON'T SPLIT INTO TOKENS.
* SET UP SHORT DSNAME FOR ERROR MESSAGES
         MVC DSNAME,DDDSNAME
         LA  R15,L'DDDSNAME-1
E50TEDSN DS    0H
         LA  R14,DDDSNAME(R15)
         CLI 0(R14),C' '
         BNE E50DSNOK
         BCT R15,E50TEDSN
E50DSNOK DS    0H
         LA    R15,1(R15)
         STH   R15,#DSN
         MVC   STMT,DDSTMT     SAVE IN CASE OF ERRORS
         CLI   DDDDNAME,C'%'   CATLG, DELETE ETC INSTRUCTION?
         BNE   E50LEAVS        LEAVE STATEMENT NUMBER
         MVC   STMT,DDDDNAME+2 CATLG STAT NUMBERS ARE DIFFERENT !
E50LEAVS MVC   GOTOLAB(2),=C'$$'
         MVC   GOTOLAB+2(6),DDDDNAME+2
         MVC   #TKN,=H'8'
         MVC   TKN(8),BLANKS
         MVC   TKN(1),DDDDNAME+1
         MVC   ICOMMAND,TKN
         CLI   DDDDNAME,C'%'
         BE    E50RETN0
         MVI   TKN,C'F'     INDICATE FREE COMMAND
         MVI   ICOMMAND,C'F'
E50RETN0 DS    0H
         JOLRETN
ISALABEL DS    0H
         CLC   INST,=AL2(IBODY+1)
         BH    E50SPLIT
         L     R15,=A(#TKNSTRG)
         USING #TKNSTRG,R15
         XC    #TKNSTRG,#TKNSTRG
         DROP  R15
E50SPLIT DS    0H
* THE DOUBLE QUOTE ROUTINE IN THE COMPILER NOW REMOVES            76200
* ALL QUOTES FROM THE STRING, AND THEREFORE IF                    76200
* SOMEONE HAS QUOTES IN A STRING FOR A PARM, THERE                76200
* WILL NOW ONLY BE ONE. THIS CAUSES ALL SORTS OF                  76200
* PROBLEMS WHEN THE TOKEN SPLITTER GETS IT.                       76200
         CLC   ICOMMAND,=CL8'PARM' PARM?                          76200
         BNE   E50SPL2                                            76200
         JOLRETN RC=0                                             76200
E50SPL2  DS    0H                                                 76200
           CALL UJCTKN,TKNX
*           B *+4                                                  DASD
*           B *+4                                                  DASD
*           LTR R15,R15                                            DASD
*           BZ  GOTINSTR                                           DASD
            B  *+4(R15)                                            DASD
            B  GOTINSTR  SUPER INSTRUCTION IS CLEAN                DASD
            B  E50BINST  STMT > 1000 BYTES   CANN"T HANDLE THIS    DASD
            B  GOTINSTR  TOO MANY TOKENS > 150                     DASD
            B  GOTINSTR  TOKEN > 120 BYTES                         DASD
            B  GOTINSTR  NO ENDING QUOTE                           DASD
E50BINST   JOLERR 503,'ERROR IN INSTRUCTION'                       DASD
GOTINSTR DS    0H
           GETTKN 1
           JOLRETN
EOF        JOLRETN RC=4
         DC    80S(*)
          LTORG
*        COPY UJD94CLN
.X8400   ANOP
         TITLE 'UJE94CLN:CLEANUP ROUTINE'
         JOLSAVE CSECT=UJE94CLN
         MVC   STMT,=C'99999'
*        JOLERR 102,'CLEAN UP CALLED'
         JOLRETN
         AGO   .NCLN
E94#010  DS    0H
         L     R4,ATCB      TCB ADDRESS
         L     R4,TCBJSCB-TCB(,R4)  ADDRESS MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)
         BZ    E94DONE
         USING FCT,R4
         SPACE 2
*  FOUND THE START OF THE FCT CHAIN: NOW SCAN CHAIN FOR A FILE TO FREE
         SPACE 2
E94NXTF  DS    0H
         CLC   =C'$JOL',FCTACSN  Q... ONE I MARKED?
         BNE   E94NXTF1          A... NO
         BAL   R14,E94FREE
         B     E94#010
E94NXTF1 DS    0H
         ICM   R4,7,FCTNFCTA   ADDRESS THE NEXT
         BNZ   E94NXTF
E94DONE  DS    0H
         B     RETN0
         SPACE 4
E94FREE  DS    0H
         ST    R14,CALLAREA+12
         XC    CALLAREA(12),CALLAREA
         MVI   CALLAREA,C'F'   FREE FILE
         MVI   CALLAREA+1,12   TABLE SIZE
         MVC   CALLAREA+4(8),FCTACSN ACCESS NAME
         MVC   STEPLBDD,FCTACSN FOR MESSAGES B LOW
         FREEFL MF=(E,CALLAREA)
         LTR   R1,R15
         BZ    E94FREE5
         CVD   R15,DBL
*        CALL  UJS46FER
         MVC   TASKSSI(4),=X'40202120'
         ED    TASKSSI,DBL+6
         JOLERR 102,'DDNAME ',                                         .
               STEPLBDD,' NOT UNALLOCATED DUE TO RETURN CODE',         .
               TASKSSI
         B     E94FREE9
E94FREE5 DS    0H
         JOLERR 001,'DDNAME ',                                         .
               STEPLBDD,' UNALLOCATED'
E94FREE9 DS    0H                  RETURN
         L     R14,CALLAREA+12
         BR    R14
.NCLN    ANOP
         LTORG
         SPACE  3
         TITLE 'SPACE UP LISTING FILE'
         JOLSAVE CSECT=UJE97SPC
         TM    PRINT+48,X'10'
         BZ    E97RET
         WRITE E97DECB,SF,PRINT,E97SPC
         CHECK E97DECB
E97RET   JOLRETN
E97SPC   DC   AL2(L'E97SPCC+8,0)
         DC   AL2(L'E97SPCC+4,0)
E97SPCC  DC   C'                    '
         LTORG
*        PRINT OFF
         TITLE 'UJE98INI:INITIALISATION ROUTINES'
         JOLSAVE CSECT=UJE98INI
* THIS CSECT IS CALLED IMMEDIATELY AFTER THE JOL SCHEDULER GETS CONTROL
*    AND IT OPENS THE FILES ETC
* SECOND DETERMINE WHETHER WE ARE RUNNING UNDER 'HASP' OR 'OS'
*    IF THERE IS A DD-CARD FOR '$$PRINT' THEN THE SYSOUT FILE
*    ASSOCIATED WITH THAT FILE WILL BE USED SIMILIARLY TO THE
*    'HASP' SYSTEM LOG,I.E ALL COMMENTS WILL GO OUT TO IT.
         SPACE 3
* NOTE *** UNDER VS, WE ATTACH RATHER THAN XCTL TO THE USER PROGRAM
*     AS WE SAVE TIME THEN BY NOT CLOSING AND RE-OPENING OUR FILES.
*     SO, LET'S SEE IF THEY ARE OPEN, AS TO OPEN AGAIN WOULD DEFEAT
*     THE WHOLE EXERCISE, WOULDN'T IT?
         SPACE 1
         TM INSTRUCT+48,X'10'                                     74365
         BO  SCHEDGO                                              74365
         SPACE 1
         MVC STMT,=CL4'   0'
&C1      SETC  (1-&X8)'AQMRAW'
&C2      SETC  (1-&X8)'IBMRTN'
&C3      SETC  (1-&X8)'JOBQ'
&C4      SETC  (1-&X8)'JCTTTR'
         CALL  UJE70OPN,(&C1,&C2,INSTRUCT,PRINT,RETN,&C3,         ******
               &C4,VS,ATCB),MF=(E,CALLAREA)                       *****
*** ABOVE OPENS REQUIRED FILES, AND :-                            *****
*    1. SETS 'JCTTTR' TO CORE ADDRESS, OR TTR ON JOBQ.            *****
*    2. LOADS (MAYBE) AN IBM ROUTINE TO ACCESS JOBQ.              *****
*    3. OPENS 'INSTRUCT'                                          *****
*    4. OPENS 'PRINT' IF $$PRNT DD CARD PRESENT                   *****
*    5. OPENS 'JOBQ'  IF $$JOBQ DD CARD PRESENT AND ¬MFT |MVT|MVS *****
*    6. SETS 'VS' TO ' ' | '1' | '2' | 'M'                        *****
*    7. SETS 'ATCB' = A(OUR TCB)                                  *****
           SPACE 3                                                *****
         AIF   (NOT &X8).NX8350                                  88036
         L     R4,ATCB               ADDRESS MY TCB
         L     R14,TCBJSCB-TCB(,R4)           MY JSCB
         ICM   R14,7,JSCBCSCA-JSCB(R14)       MY CSCB
         MVC   JBNAME,CSCBUJNM-CSCB(R14)      COPY JOB NAME IN
         AGO   .X8410                                            88036
.NX8350  ANOP                                                    88036
         EXTRACT CALLAREA+12,'S',FIELDS=(TIOT),MF=(E,CALLAREA)    87150
         L     R1,CALLAREA+12  GET RETURN FROM EXTRACT            87150
         MVC   JCTJNAME,0(R1)  SHIFT JOBNAME IN FOR MESSAGES      87150
.X8410   ANOP                                                    88036
SCHEDGO  DS    0H
         CALL  UJE97SPC                SPACE UP PRINTING A BIT
         L     R1,ATASKPRM      CLEAR USER'S PARM
         XC    0(2,R1),0(R1)
       SPACE
* NOW CHECK THAT THE INSTRUCT AND RETNCODE FILES ARE OPEN
         SR    R8,R8
         TM    INSTRUCT+48,X'10'
         BO    FILE1OK
         LA    R8,1
         JOLERR 501,'NO DD CARD FOR $$INST'
FILE1OK  DS    0H                                                 75128
         AGO .SKIP99
         L     R4,TCBJSCB-TCB(,R4)          MY JSCB
         ICM   R4,7,JSCBFCTA-JSCB(R4)         FIRST FCT
         BZ    E98NOFCT              EXIT IF NONE ?!! & SSSSSSSSS
         SPACE
*   FOUND THE FCT CHAIN. NOW FIND A DATASET ENTRY
.SKIP99  ANOP
         SPACE
         MVC   DDDDNAME,=CL8'&DDINST'
         MVI   DDVOLUME,C' '         OTHER UJE49 WON'T DO MUCH
         CALL  UJE49VOL
         MVC   SYSINVOL,JFCBVOLS     COPY THE VOLUME SERIAL NUMBER
         MVC   DDDSNAME,SYSINDSN
&C       SETC  (&X8)'=CL8''DA'''.(1-&X8)'DDUNIT'                 88036
         MVC   SYSINUNI,&C           COPY THE UNIT TOO (49 GETS IT)
         MVC   SYSINDSN,JFCBDSNM
         ZAP   DDCTR,=P'0'           INITIALISE DD COUNTER
         SPACE 2
         $FIND INSTRUCT,MBRRETN,D
         B     E98INITR(R15)
E98INITR B     E98GOTMB
         B     E98FIND4
         B     E98FIND8
MBRRETN  DC    CL8'$$RETN'
         SPACE 3
E98FIND8 JOLERR 504,'I/O ERROR READING DIRECTORY'
         SPACE 3
E98FIND4 DS    0H
* THE $$RETN MEMBER HASN'T BEEN SET UP APPARENTLY
         JOLERR 109,'JOL UNIVERSAL COMMAND LANGUAGE (DYNAMIC ALLOCATION+
                OPTION)'
         JOLERR 110,'VERSION 4.0A (DATE COMPILED &SYSDATE. TIME &SYSTIM*
               E.)'
         CALL  UJE97SPC                SPACE UP PRINTING A BIT
         LA    R0,READAREA
         L     R1,=A(L'READAREA)
         SLR   R15,R15        ZEROES TO ALL THE AREA
         MVCL  R0,R14
         MVI     COND,C' ' CLEAR COND TO BLANKS                    DASD
         MVC     COND+1(L'COND-1),COND                             DASD
         WRITE E98DEC9,SF,RETN,READAREA,'S'
         CHECK E98DEC9
         NOTE RETN
         ST    R1,TTR$RETN
         STOW RETN,STOWBLK,A
         LTR   R15,R15
         BZ    E98RDJCT
         JOLERR 502
         FIX ' THAT WAS JOLERR 503'                              88036
E98GOTMB DS    0H
* WE HAVE NOW FOUND THE $$RETN MEMBER OF THE DATA SET
         LH R2,INSTRUCT+X'3E'
         MVC   INSTRUCT+X'3E',=Y(&RETNSIZ)                         DASD
         READ E98DECBX,SF,INSTRUCT,RETNAREA
         CHECK E98DECBX
         STH   R2,INSTRUCT+X'3E'
         NOTE INSTRUCT
         ST    R1,TTR$RETN     FOR REWRITING
* FIND OUT HOW MUCH DATA WE READ (ALSO USED FOR REWRITING)
         L  R1,E98DECBX+16     IOB ADDRESS
         LH R14,INSTRUCT+X'3E'  BLOCKSIZE
         SH R14,14(R1)  MINUS RESIDUAL COUNT
         STH   R14,RETNBLKS    LENGTH OF RETN BLOCK
           SPACE 3
           MVC STMT,DBL
         POINT INSTRUCT,TTR$INST
E98RDJCT DS    0H
           AIF   (&X8).X8420
           SPACE 3
* BETTER SET UP THE JOBNAME ETC
           LA  R4,CALLAREA
           EXTRACT (4),'S',FIELDS=(TIOT)
           L   R1,CALLAREA
           ST  R1,ATIOT        SAVE ADDRESS OF TIOT
* NOW READ IN JCT AND SCT
.X8420     ANOP
           SPACE 6
           CLI TASKIND,C' '    IS THIS THE FIRST TIME I'VE BEEN CALLED
*                              THIS OS STEP ?
           BE  E98RETNX        YES,SO NOW FILES ETC INITIALISED,GO BACK
*                              TO THE MAIN-LINE LIKE A GOOD BOY.
           SPACE 3
* THE SCHEDULER HAS BEEN RE-ATTACHED AFTER AN XCTL TO A PROBLEM
*    PROGRAM. THEREFORE WE MUST DO NICE THINGS LIKE PRINT OUT
*    THE RETURN CODES ETC,
* WE HAD BETTER STORE ITS RETURN CODE IN THE TABLE ANYWAY
           LH R1,NOIDS
           MH R1,=H'18'
           LA R1,IDSTART(R1)
           USING IDOVLY,R1
           MVC IDRETN,TASKRETN
           MVI IDRETN,0        TURN OFF HIGH ORDER BITS FOR COMPARISONS
*                              IN THE 'IF' STATEMENT LATER
******* MORE FOR  MAXCC,LASTCC   SEPT 75
         TM    TASKRETN,X'80'   DID AN ABEND OCCUR?      CHG26028 76200
         BO    E98LMAX        YES, SO LEAVE LASTCC AND MACHG26028 76200
         MVC   LASTCC,IDRETN   LASTCC DONE
         CLC   MAXCC,LASTCC
         BH    E98LMAX
         MVC   MAXCC,LASTCC   MAXCC DONE
         DROP  R1
E98LMAX  UNPK  CALLAREA(9),TASKSSI(5)
         TR    CALLAREA(8),HEX
         MVC   ENDMSSI,CALLAREA 3(5)
*        OI    ENDMSSI+7,X'F0'
* NOW SEE IF TASK ABENDED OR RETURNED PROPERLY.
         TM    TASKRETN,X'80'                  ABEND ?
         BZ    NOTABND
         MVI   ERRORIND,1     TURN ON ABEND INDICATOR    CHG26028 76200
* WAS IT A USER ABEND OR A SYSTEM ABEND ?
         L     R1,TASKRETN
         N     R1,=X'00FFF000'
         BZ    USERABND
         UNPK  CALLAREA(9),TASKRETN(5)
         TR    CALLAREA(8),HEX
         MVC   ENDMRETC(4),CALLAREA+1
         MVC   ENDMRETC+5(3),CALLAREA+5
         MVI   ENDMRETC,C'S'
         MVI   ENDMRETC+4,C'-'
         JOLERR 307,'STEP ',TASKLABL,' LM ',TASKNAME,             87150*
               ' SYSTEM ABEND ',ENDRETC,' (SSI=',ENDSSI,')'
E98CLRAB CLEAR TASKRETN    CLEAR ABEND                   CHG26028 76200
*        B     E20R16       TAKE BRANCH TO COND CODE TERMINATE   C DASD
         B     E98RETN0                                          A DASD
           SPACE 3
NOTABND    XC TASKRETN(2),TASKRETN
USERABND DS    0H
         L   R0,=X'0000FFFF'  IF NEGATIVE NUMBER LETS SHOW IT      DASD
         N   R0,TASKRETN
         CVD R0,DBL
         OI  DBL+7,X'0F'                                           DASD
         UNPK ENDRETB,DBL                                          DASD
         CLI ENDRETB,C'0'                                          DASD
         BNE ENDMSSOK  ITS A BIG ONE                               DASD
         MVI ENDRETB,C' '  PRINT AS BEFORE (4 BYTE RETN CODE)      DASD
ENDMSSOK DS    0H
         TM  TASKRETN,X'80'  ABEND ?
         BO  E98TYPER
         JOLERR 105,'STEP ',TASKLABL,' LM ',TASKNAME,             87150*
               ' RETURNED ',ENDRETB,' (SSI=',ENDSSI,')'           87150
         CALL  UJE98TCN        TEST JOB CONDITION CODES (STOPWHEN)87150
         LTR   R15,R15         DO WE HAVE TO STOP THE JOB ?       87150
         BZ    E98RETN0        NO, JUST NORMAL RETURN             87150
         JOLRETN RC=4000                                          87150
         AIF   (&X8).X8440
*                                                                 76200
* TO HANDLE THE STOP WHEN, WE MUST EXAMINE THE JCT JOB TERMINATION76200
* INDICATORS, AND COMPARE THIS RETURN CODE AND IF NECESSARY,      76200
* TERMINATE THE RUN.                                              76200
*                                                                 76200
* WE HAVE RESERVED TO US 1 JOB COND OF 'EQ,4000', AND SO WE CAN   76200
* FLUSH THE JOB BY SETTING 4000 ANY TIME WE WISH.                 76200
*                                                                 76200
*                                                                 76200
         LA    R1,JCTJDPCD                                        76200
         LA    R15,JCTJDPCD+4+28-1 END LOOP INDIC                 76200
         LA    R14,4               LENGTH OF TABLE                76200
E98DEPL  CLI   2(R1),0       ANY COND (END LOOP)            76200
         BE    E98RETN0            END -> RETURN                  76200
         IC    R6,2(R1)            GET DEPENDENCY CODE AND        76200
*                                  GET REDY FOR EXECUTE           76200
         CLC   0(2,R1),TASKRETN+2 COMPARE                        76200
         EX    R6,E98GO40          BRANCH IF TRUE                 76200
         BXLE  R1,R14,E98DEPL      LOOP THEN ...                  76200
.X8440   ANOP
         B     E98RETN0                                           76200
         AIF   (&X8).X8460
E98GO40  BC    0,E98R16       EXECUTED  *****                     76200
E98R16   DS    0H
E20R16   DS    0H
* DUE TO USING MVS MACRO, MUST MOVE JOBNAME BEFORE 'JOLERRINR'
            MVC  TASKLABL,JCTJNAME
         JOLERR 408,'JOB ',TASKLABL,                                   *
               ' TERMINATED DUE TO CONDITION CODES'
           B   E98RET4K
.X8460   ANOP
         FIX   '"STOP WHEN ANY" NEEDS TO BE HANDLED: I SUGGEST PASSING .
               THE INFO FROM THE COMPILER AS FIRST INSTRUCTION'
E98TYPER JOLERR 306,'STEP ',TASKLABL,' LM ',TASKNAME,             87150*
               ' USER ABEND ',ENDRETB,' (SSI=',ENDSSI,')'
         B     E98CLRAB                                  CHG26028 76200
E98RET4K  DS    0H
           XC TASKRETN(2),TASKRETN
* THE NEXT MVC WILL STOP MVS FROM RUNNING AFTER A ABEND            DASD
* THIS PROBLEM IS BEING WORKED ON AS OF 4/1/77                     DASD
* SORRY ABOUT THE "IF ERROR LOGIC"                                 DASD
*          MVC TASKRETN(4),=F'&RSVDRC'                             DASD
* THIS PROBLEM IS NOW FIXED IN THE MONTOR AS OF 7/10/77            DASD
           MVI TASKIND,C'1'
           JOLRETN RC=&RSVDRC
E98RETN0 DS    0H
         CALL  UJE97SPC                SPACE UP PRINTING A BIT
         CALL  GETTIME
         MVC   D98DETME,CURRTIME
         WRITE D981DECB,SF,PRINT,D98HEAD1 WRITE THE DEALLOCN HEADER
         CHECK D981DECB                   WAIT TILL IT GOES
         CALL  UJE97SPC                SPACE UP PRINTING A BIT
         MVC   D98DETM2,CURRTIME
         WRITE D982DECB,SF,PRINT,D98HEAD2 WRITE THE DEALLOCN HEADER
         CHECK D982DECB                   WAIT TILL IT GOES
E98RETNX DS    0H
           MVI TASKIND,C'1'
           JOLRETN
STOWBLK    DC  CL8'$$RETN'
STOWTTR    DC  XL3'00'
STOWC      DC  X'00'
           DS CL50
ENDSSI     DS 0CL8
ENDMSSI    DS  CL8
ENDRETB    DS 0CL5            FOR MINUS RETURN CODES               DASD
ENDRETC    DS 0CL8
ENDMRETC   DS CL8
           DS H
* THE FOLLOWING LINES ARE USED TO PRINT OUT DE-ALLOCATION MESSAGES
*     FOR THE DYNAMIC ALLOCATION VERSION OF JOL.
D98HEAD1 DC    AL2(D98END1-*,0)
         DC    AL2(D98END1-*,0),C' '
D98DETME DC    CL8' '                  TIME GOES HERE
         DC    C' DEALLOCATION '
D98END1  DS    0H
          SPACE
D98HEAD2 DC    AL2(D98END2-*,0)
         DC    AL2(D98END2-*,0),C' '
D98DETM2 DC    CL8' '                  TIME GOES HERE
         DC    C' --DSID--  -DDNAME-   -ACTION'
D98END2  DS    0H
          SPACE
         DC     80S(*)
         LTORG
         JOLSAVE CSECT=UJE98TCN
* THIS CSECT CHECKS THE JOB CONDITION CODES, AND ABORTS IF
*      NECESSARY.
* TO HANDLE THE STOP WHEN, WE MUST EXAMINE THE JCT JOB TERMINATION76200
* INDICATORS, AND COMPARE THIS RETURN CODE AND IF NECESSARY,      76200
* TERMINATE THE RUN.                                              76200
*                                                                 76200
* WE HAVE RESERVED TO US 1 JOB COND OF 'EQ,4000', AND SO WE CAN   76200
* FLUSH THE JOB BY SETTING 4000 ANY TIME WE WISH.                 76200
*                                                                 76200
*                                                                 76200
         MVC   LASTCC,TASKRETN    SET LASTCC
         CLC   MAXCC,LASTCC
         BH    E98LMAX2
         MVC   MAXCC,LASTCC       MAXCC DONE
E98LMAX2 CLC   #WHEN,=H'0'        ANY STOP WHEN CODED?
         BNE   E98DOWHN           YES, SO ANALYSE IT.
         CLC   MAXCC,=H'3999'
         BH    E98TERM         TERMINATE
         CLC   MAXCC,=H'16'
         BE    E98TERM         TERMINATE
         JOLRETN
* HERE,  SPLIT  STOPWHEN AND CALL THE 'IF' PROCESSOR.
E98DOWHN L    R15,=A(#TKNSTRG)
         USING  #TKNSTRG,R15
         MVC   #TKNSTRG(255),#WHEN
         DROP  R15
         CALL  UJCTKN,TKNX
         LTR   15,R15
         BZ    E98INSTR  SUPER INSTRUCTION IS CLEAN
         CH    R15,=H'4'
         BE    E98ERRIN  STMT > 1000 BYTES   CANN"T HANDLE THIS
         B     E98INSTR  TOO MANY TOKENS > 150
         B     E98INSTR  TOKEN > 120 BYTES
         B     E98INSTR  NO ENDING QUOTE
E98ERRIN JOLERR 503,'ERROR IN INSTRUCTION'
E98INSTR DS    0H
         $CALL UJE04IF
         LTR   R15,R15
         BZ    E98TERM         TRUE STATEMENT, SO TERMINATE
         JOLRETN
         AGO   .NOJCT                                             87150
E98TJCT  LA    R1,JCTJDPCD                                        76200
         LA    R15,JCTJDPCD+4+28-1 END LOOP INDIC                 76200
         LA    R14,4               LENGTH OF TABLE                76200
E99DEPL  CLI   2(R1),0       ANY COND (END LOOP)                  76200
         BE    E99RETNZ            END -> RETURN                  86211
         IC    R6,2(R1)            GET DEPENDENCY CODE AND        76200
*                                  GET REDY FOR EXECUTE           76200
         CLC   0(2,R1),TASKRETN+2 COMPARE                         76200
         EX    R6,E99GO40          BRANCH IF TRUE                 76200
         BXLE  R1,R14,E99DEPL      LOOP THEN ...                  76200
         B     E99RETNZ                                           86211
E99GO40  BC    0,E99R16       EXECUTED  *****                     76200
E99R16     EQU  *
*E20R16     EQU  *
.NOJCT   ANOP
* DUE TO USING MVS MACRO, MUST MOVE JOBNAME BEFORE 'JOLERRINR'
&C       SETC  (&X8)'JBNAME'.(1-&X8)'JCTJNAME'
E98TERM  MVC  TASKLABL,&C
         JOLERR 408,'JOB ',TASKLABL,                                   *
               ' TERMINATED DUE TO CONDITION CODES'
           XC TASKRETN(2),TASKRETN
* THE NEXT MVC WILL STOP MVS FROM RUNNING AFTER A ABEND            DASD
* THIS PROBLEM IS BEING WORKED ON AS OF 4/1/77                     DASD
* SORRY ABOUT THE "IF ERROR LOGIC"                                 DASD
*        MVC   TASKRETN(4),=F'4000'                                DASD
* THIS PROBLEM IS NOW FIXED IN THE MONTOR AS OF 7/10/77            DASD
         MVI   TASKIND,C'1'
         JOLRETN RC=4000
E99RETNZ JOLRETN RC=0
         LTORG
         TITLE 'UJEISPDQ:KEEP EXTRA PDQ ISAM ENTRYS'               DASD
* THIS LITTLE CSECT WILL KEEP THE 2ND AND 3RD ENTRIES       *      DASD
* WHICH ARE IN THE PDQ FROM A ISAM DATASET                  *      DASD
*                                                           *      DASD
* NOW ALL A J.O.L. PROGRAMMER HAS TO DO IS SAY              *      DASD
* CATLG ON ANY 1 OF THE 3 DCLS WHICH DEFINE                 *      DASD
* INDEX, PRIME OR OVFLOW                                    *      DASD
*                                                           *      DASD
* AND THE KEEP MODULE WILL CALL THIS GUY AND                *      DASD
* HE WILL SEARCH THE PDQ FOR MORE ENTRIES AND               *      DASD
* HANDLE THEM THE SAME WAY                                  *      DASD
*                                                           *      DASD
* ALSO THE JFCB VOL COUNT WILL BE UPDATED TO A MAX OF 3     *      DASD
* SO WHEN THE CATALOG MODULE GETS CONTROL THE VOL COUNT     *      DASD
* AND VOLUMES ARE IN GOOD SHAPE                             *      DASD
*                                                           *      DASD
*                                                           *      DASD
* SO CLEM IF YOUR READING THESE COMMENTS ALL I DID          *      DASD
* WAS COPY YOUR WORK IN THE UJE81PDQ MODULE                 *      DASD
* AND ADDED A FEW THINGS HERE AND THERE                     *      DASD
*                                                           *      DASD
* J.O.L. IS NOW BETTER THAN JCL WHEN IT COMES TO ISAM       *      DASD
*                                                           *      DASD
         LTORG
         TITLE 'UJS23ER:WTP,WTO ERROR MESSAGES'
UJS23ER  CSECT
         ENTRY UJSERR
UJSERR   EQU   UJS23ER
         USING *,R15
         STM   R14,R12,12(R13)
         LA    R0,SAVEAREA
         ST    R0,8(R13)
         ST    R13,SAVEAREA+4
         BAL   R13,STARTERR
SAVEAREA DS    18F
S23FLAGS DS    0F
S23CSECT DS    C               CALLERS NAME
S23MODNO DS    AL1             HIS MODULE NUMBER
S23SEV   DS    AL1             THE SEVERITY LEVEL
S23ERRNO DS    AL1             THE MESSAGE NUMBER
S23GSTMT DC    X'41F0'
S23STMTA DS    XL2
STARTERR DS    0H
         DROP R15
         USING SAVEAREA,R13
         MVC   S23FLAGS,0(R14) COPY INDICATORS
         MVC   S23STMTA,4(R14)  AND S-TYPE ADDRESS
         LA    R14,6(,R14)     SKIP PAST INDICATORS ETC
* R14 IS THE RETURN ADDRESS BUT IT ALSO POINTS TO A LIST OF
* INSTRUCTIONS WHICH ARE TO BE EXECUTED
* THEY CAN BE :-
*    MVC   CONSTANT
*    LA    VARYING STRING
         CLEAR S23MSSG         CLEAR MESSAGE AREA
* NEW, END DEC 1974. IF AN ERROR MESSAGE IS BEING ISSUED, THEN OFFSET
*    THE MESSAGE AND PUT '***' IN IT.
         LA    R1,S23MSSG                                         74365
         CLC   =C'DISPLAY ',ICOMMAND                     CHG30062 76200
         BE    S23OFF10                                  CHG30062 76200
         CLC   =C'TYPE ',ICOMMAND                        CHG30062 76200
         BE    S23OFF10                                  CHG30062 76200
         CLC   =C'RETURN ',ICOMMAND                      CHG30062 76200
         BE    S23OFF10       PUT 10 BLANKS IN START     CHG30062 76200
         B     S23TSEV                                   CHG30062 76200
S23OFF10 MVC   0(10,R1),BLANKS OFFSET MESSAGE BY 10      CHG30062 76200
         LA    R1,10(R1)      SKIP BLANKS                CHG30062 76200
         B     S23START       GO FORM UP MESSAGE         CHG30062 76200
S23TSEV  CLI   S23SEV,2                                  CHG30062 76200
         BNL   S23REALE       REAL ERROR, PUT JOB NAME   CHG30062 76200
         MVC   0(5,R1),BLANKS                            CHG30062 76200
         LA    R1,5(R1)                                  CHG30062 76200
         B     S23START                                  CHG30062 76200
S23REALE MVC   0(4,R1),=C'***('  PUT '***('              CHG30062 76200
&C       SETC  (&X8)'JBNAME'.(1-&X8)'JCTJNAME'
         MVC   4(8,R1),&C        + JOBNAME               CHG30062 76200
         MVI   12(R1),C')'       + ')'                   CHG30062 76200
         LA    R1,13(R1)         SKIP ABOVE              CHG30062 76200
S23START MVC   0(3,R1),=C'JOL' SHIFT IN 'JOL'                     74365
         LA    R1,3(R1)        SKIP OVER IT SO WE WON'T OVER-WRITE IT
* START  OF CODE LIFTED FROM JOLMAIN
* INITIALISE THE FIRST LINE
         MVC   0(1,R1),S23CSECT SHIFT IN CSECT NO
         SR    R15,R15        CLEAR R15
         IC    R15,S23MODNO   CSECT NUMBER
         CVD   R15,DBL        DEC PKD
         UNPK  1(2,R1),DBL      EBCDIC
         OI    2(R1),C'0'     MAKE MEANINGFUL
         MVI   3(R1),C'-'   SET UP '-'
         IC    R15,S23ERRNO   GET ERROR NUMBER
         CVD   R15,DBL
         UNPK  4(2,R1),DBL
         OI    5(R1),C'0'
* NOW PUT IN 'WARNING' ETC
*        IC    R15,S23SEV     LOAD SEVERITY
*        MH    R15,=H'6'      LENGTH OF MVC INSTRUCTION TO BE 'EX'
*        LA    R1,ERRTEXT1    RESET R1 A BIT
*        EX    R0,S23MSS(R15) SHIFT REQ'D INFO IN
*        IC    R15,S23SEV     RELOAD SEVERITY
*        SLL   R15,2          MULTIPLY BY 4
*        EX    R0,S23RESET(R15) ADD TO R1 L'MESSAGE JUST SHIFTED
         LA    R1,07(R1)      RESET R1
* END    OF CODE LIFTED FROM JOLMAIN
S23LUP1  DS    0H
         CLI   0(R14),X'D2'    MOVE ?
         BE    S23MUV1
         CLI   0(R14),X'41'    LA ?
         BE    S23LA1
         B     S23END1         SHOULD BE '00'
         SPACE
S23MUV1  EX    R0,0(R14)        EXECUTE THE MOVE
         SR    R0,R0
         IC    R0,1(R14)       LENGTH MOVED
         AR    R1,R0           ADD TO OUTPUT POSN
         LA    R1,1(R1)        COS ASSMBLR REMOVED 1
         LA    R14,6(R14)      SKIP MVC
         B     S23LUP1
         SPACE
S23LA1   DS    0H
         EX    0,0(R14)        EXECUTE THE LA R15,VARYING STRING
         ST    R14,0(R13)      SAVE REGISTER 14 IN SAVE AREA
         LH    R14,0(R15)      LOAD LENGTH OF THE STRING
         LTR   R14,R14         SEE IF STRING LENGTH = 0
         BZ    RESET14         NO DATA TO MOVE
         BCTR  R14,0
         EX    R14,ERRMUV
         LA    R1,1(R14,R1)    STEP 1 SO NEXT MOVE GOES ONTO RIGHT
*                              SPOT IN BUFFER
RESET14  DS    0H
         L     R14,0(R13)      RELOAD R14
         LA    R14,4(R14)      STEP OVER THE LA
         B     S23LUP1
* OOPS   WTO   'JOLE00-99 CANNOT ALLOCATE ERROR AREA'
*        ABEND 16,DUMP,STEP
ERRMUV   MVC   0(*-*,R1),2(R15) **** EXECUTED
         SPACE
S23END1  DS    0H
         LA    R14,2(R14)      BRANCH AROUND '0' AT END OF LIST
         L     R15,4(R13)       LOAD OLD SAVE ADDRESS
         ST    R14,12(R15)     RESET OLD RETURN ADDRESS
         MVC   0(4,R1),=C' AT '  SHIFT IN 'AT'
         EX    R0,S23GSTMT    LA  R15,STMT
         MVC   4(4,R1),0(R15) SHIFT IN STATEMENT NUMBER
*        MVC   4(4,R1),S23STMT                                    75003
*        OC    S23STMT,S23STMT
*        BNZ   S23SETL
*        MVC   4(4,R1),STMT                                       75003
*        OC    4(4,R1),=C'0000' JCS NOTICED BINARY ZEROES IN THERE
S23SETL  LA    R14,S23MSSG-12 THE -8 IS FOR THE 'AT STMT'         75128
S23TEST0 CLI   4(R1),C'0'     LEADING ZERO?                       75003
         BNH   S23SR          -> NO                               75003
         MVC   4(4,R1),5(R1)  DROP ZERO                           75003
         BCT   R1,S23TEST0                                        75003
S23SR    DS    0H                                                 75003
         SR    R1,R14
         XC    #S23LNE2,#S23LNE2   CLEAR LENGTH                   76200
         CH    R1,#S23MAX          CHECK FOR A BIG MESSAGE        76200
         BNH   S23SHORT            ITS OK, KEEP GOING             76200
* NOW WE HAVE A MESSAGE THATS GREATER THAN 96 BYTES AND IF        76200
* WE DONT MAKE TWO LINES OUT OF IT, THE OS WRITER OR HASP...ECT   76200
* WILL CHOP IT OFF                                                76200
* SO WE ARE NOW GOING TO TAKE A LOOK AT THE MESSAGE FROM +96 BACK
* AND WHEN WE FIND A COMMA OR A BLANK THAT WILL END LINE 1 AND
* START LINE 2
         STH   R1,#S23LNE2         SAVE OLD LENGTH FOR LATER      76200
         LA    R15,S23MSSG         POINT TO THE START OF THE MSG  76200
         AH    R15,#S23MAX         GET TO +96                     76200
         LA    R1,30               STOP LOOKING AFTER 30 BYTES    76200
S23LOOK  DS    0H                                                 76200
         CLI   0(R15),C' '         IS IT A BLANK                  76200
         BE    S23ENDLK                                           76200
         CLI   0(R15),C','         HOW ABOUT A COMMA              76200
         BE    S23ENDLK                                           76200
         BCTR  R15,0               BACKUP,1 BYTE                  76200
         BCT   R1,S23LOOK          RETURN                         76200
S23ENDLK DS    0H                                                 76200
         LR    R1,R15              R1 = NEW END FOR LINE 1        76200
         LA    R14,#S23LREC   POINT TO START OF MESSAGE           76200
         SR    R1,R14              CALC NEW LENGTH FOR LINE 1     76200
         AH    R14,#S23LNE2        POINT R14 TO END OF MESSAGE    76200
         SR    R14,R15             CALC LENGTH FOR LINE 2         76200
         LA    R14,19(R14) LEAVE SOME BLANKS ON CONT LINE         76200
         STH   R14,#S23LNE2        SAVE IT FOR LATER              76200
*        ST    R1,20(R13)      CLEAR CLOBBERS R1
*        CLEAR S23LNE2                                            76200
*        L     R1,20(R13)      CLEAR CLOBBERS R1
         MVC   S23LNE2,BLANKS                                     87150
         MVC   S23LNE2+15(L'S23LNE2-16),1(R15)      SAVE LINE 2   76200
S23SHORT DS    0H                                                 76200
         XC    #S23BLKS(8),#S23BLKS CLEAR VB DESCRIPTOR ETC       76200
         STH   R1,#S23LREC
         LA    R1,4(R1)
         STH   R1,#S23BLKS
         XC    S23STMT,S23STMT
* GREAT,NOW WHERE ARE WE GOING TO PUT THIS FANTASTIC PIECE OF
*    INFORMATION ?
         TM    PRINT+48,X'10'
         BZ    S23WTO
         WRITE S23DECB,SF,PRINT,#S23BLKS
         CHECK S23DECB
S23WTO   DS    0H
* NOW IF THE SEVERITY IS >=12 THE MESSAGE IS TYPED ON THE CONSOLE,
*    OTHERWISE A WTO WITH ROUTCDE=11 IS QUITE SATISFACTORY,UNLESS
*    WE HAVE A PRINT DD CARD,IF WHICH CASE WE CAN RETURN NOW
         CLI   S23SEV,3
         BL    S23TPRNT
* HERE A REAL WTO IS REQUIRED,SO SET UP ROUTE-CODES 2 & 11
         MVC   #S23MSSG,=XL2'8000'
         LH    R15,#S23LREC
         LA    R15,#S23LREC(R15)
         MVC   0(4,R15),=X'04004020' DESC 6 RTE 11,2              75311
         CLI   VS,C'2'    MVS  ?                                   DASD
         BNE   S23TNMVS   NOPE                                     DASD
         CLI   ISTSO,C' '      UNDER TSO/TSS?                     87150
         BNE   S23TNMVS        YES, LEAVE ROUTE CODE 11 THEN      87150
         MVC   0(4,R15),=X'04004004' DESC 6 RTE 2,14 JESMSG        DASD
S23TNMVS DS    0H                                                  DASD
         WTO   MF=(E,#S23LREC)
         B     S23GOBAK
         SPACE 3
S23TPRNT DS    0H                                                 75311
         TM    PRINT+48,X'10' DID WE PUT MESSAGE ON PRINTER FIX-X 76200
         B     DYNP           FOR DYNAMIC VERSION, PRINT AGAIN !
         BO    S23GOBAK       YES, DON'T FILL WTP ON JCL LOGFIX-X 76200
* SET UP A WTO WITH ROUTCDE=11
DYNP     MVC   #S23MSSG,=XL2'8000'
         LH    R15,#S23LREC
         LA    R15,#S23LREC(R15)
         MVC   0(4,R15),=X'00000020' ROUTCODE   11                75128
         CLI   VS,C'2'   MVS ??                                    DASD
         BNE    S23NMVS   NOPE                                     DASD
         CLI   ISTSO,C' '      UNDER TSO/TSS?                     87150
         BNE   S23NMVS         YES, LEAVE ROUTE CODE 11 THEN      87150
         MVC   0(4,R15),=X'00000004' ROUTCODE 14 FOR JESMSG        DASD
S23NMVS  DS    0H                                                  DASD
         WTO   MF=(E,#S23LREC)
S23GOBAK DS    0H
         CLC   #S23LNE2,=X'0000'   DO WE HAVE A SECOND LINE       76200
         BE    S23GOBK2            NOPE                           76200
         LH    R1,#S23LNE2         LOAD LENGTH OF LINE2           76200
         XC    #S23LNE2,#S23LNE2   CLEAR                          76200
         MVC   S23MSSG,S23LNE2     OVERLAY OLD WITH NEW           76200
         CLI   S23LNE2,C' '  CHECK FOR BLANK SECOND LINE           DASD
         BNE   S23SHORT                                            DASD
         LR    R15,R1        LOAD LENGTH OF MESSAGE                DASD
         BCTR  R15,0         SUBTRACT 1 FOR EXECUTE INST           DASD
         EX    R15,S23CLCBL                                        DASD
         BE    S23GOBK2    ITS BLANK  LETS NOT PRINT IT            DASD
         B     S23SHORT            RETURN AND WRITE LINE2         76200
S23CLCBL CLC  S23LNE2+1(*-*),S23LNE2                              DASD
S23GOBK2 DS    0H                                                 76200
         CLI S23SEV,5           JOL TERMINAL ERROR ?
         BNE  S23LMRET
         AIF   (&X8).X8480
         JOLCLOSE (INSTRUCT,,PRINT,,RETN,,JOBQ),MF=(E,CALLAREA)
         AGO   .NX8480
.X8480   ANOP
         JOLCLOSE (INSTRUCT,,PRINT,,RETN),MF=(E,CALLAREA)
.NX8480  ANOP
         ABEND 1,DUMP STEP
S23LMRET DS    0H
         JOLRETN
         LTORG
         DC   80S(*)
*        PRINT ON
       TITLE 'UJELOCAT:LOCATE CATALOGED DATASETS'                  DASD
         JOLSAVE CSECT=UJELOCAT                                    DASD
*        AIF   (&X8).X8540
         L     R15,=V(E05VOLS)         LOAD CAMLIST ADDRESS        DASD
         USING VOLINFO,R15                                         DASD
         ST    R15,ELOLOCAT+12         POINT TO LOCATE AREA        DASD
         LA    R6,300(R15)             GO UP A FEW AND SAVE POINTERDASD
         MVC   0(44,R6),DSNAME         MOVE TO LOCATE AREA         DASD
         MVC   DSNAME,0(R6)            MOVE DSNAME IN              DASD
         $LOCATE ELOLOCAT                                          DASD
         LTR   R15,R15                 DID LOACTE FIND ANYTHING ?? DASD
         BNZ   ELORETN4                NOPE                        DASD
         JOLRETN RC=0  WE FOUND OUR STIFF LETS LEAVE               DASD
ELORETN4 DS    0H                                                  DASD
         MVC  DSNAME,0(R6)            MOVE BACK ORGINAL DATA SET NADASD
         B    RETN4                   TELL THE CALLER WE FAILED    DASD
ELOLOCAT CAMLST NAME,DSNAME,,0                                     DASD
.X8540   ANOP
*        B    RETN4
           LTORG
         JOLSAVE CSECT=ASKFREE         ASK IF WE SHOULD FREE DDNAME
         CLI   ISTSO,C' '      UNDER TSO/TSS?
         BE    ASKRET4         NO, SO RETURN A 4
ASKMORE  LA    R1,FREEMSG
         LA    R0,L'FREEMSG
         SVC   93
         LA    R1,WORKFREE
         TGET  (1),1
         OI    WORKFREE,C' '   UPPERCASE
         CLI   WORKFREE,C'N'   YES
         BE    ASKRET4
         CLI   WORKFREE,C'Y'   YES
         BNE   ASKMORE         TILL WE GET Y OR N
         MVC   ASKDDN2,DDDDNAME
         DYNPARM DDNAME=(8,ASKDDNM),VRB=UN,UNALLOC=YES
         LTR   R15,R15
         BNZ   ASKRET4
         JOLRETN
ASKRET4  JOLRETN RC=4
FREEMSG  DC    C'FREE FILE/DDNAME ? (Y OR N)'
WORKFREE DC    C'       '
ASKDDNM  DC    H'8'
ASKDDN2  DC    CL8' '
         JOLSAVE CSECT=UJD03ERR
         LR    R8,R1           POINTER TO SVC99 PARM BLOCK
         LR    R9,R0           ERROR CODE
         USING S99RB,R8
* PRINT  SVC99  ERRORS
*        B     NODYNDMP
         L     R1,CALLAREA              REQUEST BLOCK POINTER
         L     R15,=V(DYNDUMP)          GET DUMP ROUTINE
         LTR   R15,R15
         BZ    NODYNDMP
*        WXTRN DYNDUMP
         BALR  R14,R15                  GO TO IT
         SPACE  3
NODYNDMP DS    0H
         FIX   'WHY DON''T WE USE JOLERR TO PRINT THIS?'
*        L     R1,CALLAREA+12  DYNALLOC RC
         CVD   R9,DBL
         OI    DBL+7,X'0F'          (CONVERT
         UNPK  D03MSGH,DBL           CODES
         UNPK  D03MSGI(9),S99ERROR(5) TO SOME
         TR    D03MSGI(8),HEX          PRINTABLE FORM
         MVI   D03MSGI+L'D03MSGI,0 PATCH DESCRIPTOR CODE
         LA    R1,D03MSG                AND PRINT THEM
         SVC   35               WTO, ROUTCDE=11
&C       SETC  (&X8)'KEQEFF18'.(1-&X8)'IKJEFF18'                 88036
         LINK  EP=&C,PARAM=(S99RB,CALLAREA+12,TSOADR,                  .
               TSOADR+4,0,#D03MSG1),MF=(E,CALLAREA+16)
         FIX   ' SUBTRACT 2 FROM EACH OF THESE NEXT ASSEMBLY'
         LH    R15,#D03MSG1
         SH    R15,=H'4'       FOR LENGTH FIELDS
         STH   R15,#D03MS1O
         LH    R15,#D03MSG2    FOR LENGTH FIELDS
         LTR   R15,R15
         BZ    DNO2NDMS
         SH    R15,=H'4'
DNO2NDMS STH   R15,#D03MS2O
         JOLERR 330,                                                   *
               'DSID ''',DDDSID,''' DDNAME ''',DDDDNAME,               *
               ''' ALLOCATION FAILED WITH SYSTEM MESSAGE:-'
         JOLERR 331,'''',#D03MS1O,'  '''
         CLC   #D03MS2O,=H'0'
         BE    D03NSECM        NO SECOND MESSAGE                  87150
         JOLERR 232,'''',#D03MS2O,'  '''
D03NSECM LA    R0,D03MSGL
         FIX   'YOU REALISE THIS IS SUPOSED TO BE REENTRANT DON''T U'
         JOLRETN  RC=16
         LA    R1,D03MSG
         SVC   93               TPUT MESSAGE
         JOLRETN  RC=16
D03MSG   DS    0F
         DC    AL2(D03MSGL),X'8000'    LENGTH AND FLAGS
         DC    C' DYNALLOC RETURN CODE '
D03MSGH  DS    H
         DC    C', ERROR AND INFO CODE '
D03MSGI  DS    XL8                 SPACE FOR ERROR AND INFO CODES
D03MSGL  EQU   *-D03MSG            LENGTH OF MESSAGE
         DC    X'0000'         DESCRIPTOR CODES
         DC    X'0020'         ROUTING CODES
         DS    0F,H
#D03MSG1 DC    H'0'
#D03MS1O DC    H'0',251C' '
#D03MSG2 DC    H'0'
#D03MS2O DC    H'0',251C' '
*D03MSG   DC    CL512' '        MUST BE FULLWORD ALIGNED
TSOADR   DC    F'0'        DON'T KNOW ADDR OF IKJEFF02
*        DC    X'80'      '80' WANT WTO, '00' WANT PUTLINE
         DC    X'40'      JUST GIVE US THE MESSAGE. WE'LL PRINT IT
         DC    X'32'      '32' IF SVC99 USED, '01' IF DAIR USED
         DC    C'JL'
*        ORG   *-240
*HEX     DS    0CL256,240C
*        DC    C'0123456789ABCDEF'   MESSAGE)
         SPACE 1
         LTORG
         DROP  R8
           PRINT ON
*          COPY UJEALLOC
* JOL COPYRIGHT CCS 1976                                          76200
* COPYRIGHT CCS 1975,1976
* COPYRIGHT JOL DEVELOPMENT AND MARKETING 1983.
* COPYRIGHT CCS-JOL P/L                   1986.
*
* REFER TO INSTRUCTIONS ON COPYRIGHT NOTICE FORM NO CCS-C001.
           SPACE 3
*                   J             000000            L
*                   J            0      0           L
*                   J           0        0          L
*                   J          0          0         L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*                   J         0            0        L
*        J          J         0            0        L
*         J        J           0          0         L
*          J      J             0        0          L
*           J    J               0      0           L
*            JJJJ                 000000            LLLLLLLLLLL
         EJECT
         AIF   (&X8).X8ZEDS                                      88036
         IEFZB4D0
         IEFZB4D2
         AGO   .IBMZEDS                                          88036
.X8ZEDS  ANOP                                                    88036
         KDJZB4D0
         KDJZB4D2
.IBMZEDS ANOP                                                    88036
         TITLE 'DYNAMIC ALLOCATE WITH GETMAIN FOR WORK AREA'      76200
         JOLSAVE CSECT=UJD03DS1
*        USING JOLCOM,R2
         USING DDDSNDET,R8
         L     R8,0(R1)                                           76200
         LA R0,((DALEND-DALSTART)+(S99RBEND-S99RB)+16)
         GETMAIN R,LV=(0)
         LR    R9,R1          SAVE AREA ADDRESS                   76200
         CALL  UJD03DS2,((8),(1))                                 76200
         LR    R8,R15         SAVE RETURN                         76200
         LA R0,((DALEND-DALSTART)+(S99RBEND-S99RB)+16)
         FREEMAIN R,LV=(0),A=(9)
         LR    R15,R8                                             76200
         JOLRETN RC=(15)                 RETURN                   76200
         DC    50S(*)
         LTORG
         ORG *+X'30'            TO ALIGN AT +100 ONLY
         TITLE 'ALLOCATE DSNAME,SYSOUT USING WORK AREAS SUPPLIED' 76200
         JOLSAVE CSECT=UJD03DS2,BASE=(4,11)
         LM    R8,R9,0(R1)    LOAD DDDSNET AREA,+WORK AREA        76200
         USING S99RB,R9
         LA    R7,S99RBEND                                        76200
         LA    R7,8(R7)       BUMP UP 8
         SRL   R7,3
         SLL   R7,3           R7 ON DOUBLE WORD NOW.
         USING DYNCON,R7
         L     R0,=V(DYNCON)    GET ADDRESS OF DYN CONSTANT AREA
         LA    R1,DALEND-DALSTART  GET LENGTH TO MOVE
         LR    R14,R7         ARE TO GO TO
         LA    R15,0(R1)      AND TO LENGTH
         MVCL  R14,R0
         XC    S99RB(S99RBEND-S99RB),S99RB SET PARMS TO 0        76200
         USING DDDSNDET,R8
*MOVE THE DDRECORD IS NOW MOVED TO 'TRANS' AND GENERAT FROM THERE.
         SPACE 2
D03XC    CLEAR TRANS                                              75128
         XC    DDSPECTP(2),DDSPECTP                               75128
         MVC   TRANS(256),DDDSNDET
         LA    R8,TRANS                                           75128
         SPACE 3
         LA    R10,WORK+8
         SRL  R10,3
         SLL   R10,3
         ST    R10,S99TXTPP
         CLC =C'*&&',DDVOLUME REF TO VOL=&& DSNAME       C-0033 74191
         BNE D03TDSN         NO,SO GO THROUGH NORMAL PROCC-0033 74191
* NOW HERE WE HAVE A VOLREF TO A TEMPORARY DSNAME.         C-0033 74191
*** THATS NOT ALLOWED,SO WE'LL PUMP OUT A CARD,AND THE NEXTC-0033 74191
*   DDCARD GENERATED CAN REFER BACK TO THE DSNAME          C-0033 74191
         FIX   'TEST UNDER MVS'
         SPACE 3
D03TDSN  EQU   *                                           C-0033 74191
         CLI   DDDSNAME,C' '
         BE NODSN
         CLI   DDDSNAME,C'%'
         BE NODSN
         CLC   =C'*DUMMY',DDDSNAME
         BNE   TRYSYS                          SEE IF A PRINTER REQD
         SETUP DAPDUMMY                                           76200
         B  D03TDISP
         SPACE 3
TRYSYS   EQU   *                                                  75128
         FIX 'SET UP NORMAL JOB SYSOUT PRINTING TIME'
         CLI   DDTYPE,DDPUNCH                                     75311
         BE    D03NORMS                                           75311
         CLI   DDTYPE,DDSPECOU   SPECIAL SYSOUT???                75128
         BNE   D03NSPCS       NOPE ->                             75128
D03DOSYS DS    0H                                                 75311
         JOLERR 410,'SYSOUT=''ANYTHING'' NOT SUPPORTED WITH DYNAMIC ALL*
               OCATION'
         MVI   DDSYSCLS,C' '
D03NSPCS CLI   DDTYPE,5       IS THIS NORMAL SYSOUT PROCESSING ?  75128
         BNE   ISDSN                                              75128
         SPACE 2                                                  75128
* HERE WE HAVE NORMAL SYSOUT PROCESSING                           75128
D03NORMS DS    0H                                                 87150
         CLI   DDSYSCLS,C'*'   IF SO MAKE BLANKS FOR DEFAULTS     87150
         BNE   D03SCLSO        SYSOUT CLASS IS OK                 87150
         MVI   DDSYSCLS,C' '   MAKE BLANKS FOR DEFAULTS           87150
D03SCLSO SETUP DAPSYSOU,DDSYSCLS                                  76200
         IFNULL DDSYSPGM,D03NPGM                                  76200
         SETUP DAPSPGNM,DDSYSPGM                                  76200
D03NPGM  IFNULL DDSYSFRM,D03NFORM                                 76200
         SETUP DAPSFMNO,DDSYSFRM                                  76200
D03NFORM EQU   *                                                  76200
* NOW TEST OTHER SYSOUT PARAMETERS                                75128
         IFNULL DDCOPIES,D03NCOPY                                 75128
         SETUP DAPCOPYS,DDCOPIES                                  76200
D03NCOPY EQU  *                                                   75311
         CLC DDOUTLIM,ZERO   ANY OUTLIM ?
         BE   D03NOUTL       NOPE
         SETUP DAPOUTLM,DDOUTLIM                                  76200
D03NOUTL IFNULL DDUCS,DDFOLD,DDVERIFY,D03NUCS                     75311
         SETUP DAPUCS,DDUCS                                       76200
         IFNULL DDVERIFY,DDFOLD,ND03VERI                          75311
         IFNULL DDFOLD,D03NFOLD
         SETUP DAPUFOLD                                           76200
         B     D03EFOLD
D03NFOLD EQU   *
D03EFOLD IFNULL DDVERIFY,ND03VERI                                 75128
         SETUP DAPUVRFY                                           76200
         B   D03ENFCB      POP ')' ON NOW                         75311
ND03VERI EQU   *                                                  76200
D03NUCS  IFNULL DDFCB,DDVERIFY,DDALIGN,D03NFCB                    75128
         SETUP DAPFCBIM,DDFCB                                     76200
         IFNULL DDVERIFY,D03TAL                                   75128
         MVI  DAPFCBAV,X'04'   TURN ON VERIFY
D03SETFV SETUP DAPFCBAV                                           76200
         B     D03ENFCB                                           75128
D03TAL   IFNULL DDALIGN,D03ENFCB                                  75128
         MVI  DAPFCBAV,X'08'  TURN ON 'ALIGN'
         B  D03SETFV
D03ENFCB EQU   *                                                  76200
         SPACE 3                                                  75128
D03NFCB  IFNULL DDROUTE,D03NROUT                                  75128
         SETUP DAPSUSER,DDROUTE                                   76200
D03NROUT EQU   *                                                  75128
          TM DDSPECT2,X'04'      HOLD SPECIFIED?
          BZ  D03TDCB            NOPE
          SETUP DAPSHOLD                                          76200
          B     D03TDCB                                           75128
ISDSN      EQU *
          CLI DDTYPE,DDSYSIN  SYSIN CARD FILE?
           BNE D03ORDSN
           FIX 'CHECK CARD FILES'
* SYSIN CARDS HERE
         MVC   DDMBR,DDDSNAME+2 SHIFT MEMBER NAME TO MBR
         MVC   DDDSNAME(44),=CL44'&&&&INST'
         SETUP DAPDSNAM,DDDSNAME                                  86230
         SETUP DAPMEMBR,DDMBR                                     76200
         MVC   DDVOLUME(9),=C'         '
* NOW MAKE THE TYPE LOOK LIKE A DISK SO THAT LABEL IN IS GENERATED
         MVI   DDUNITYP,B'10000000'   DISK                        75311
         IFVALUE DDRECFM,D03LRECF
         MVC   DDRECFM(2),=C'FB'
D03LRECF IFVALUE DDLRECL,D03LRECL
         MVC   DDLRECL(2),=C'80'
D03LRECL IFVALUE DDBLKSZE,D03LBLKS
         B     NODSN
         LTORG
*        L     R1,AJOLGEN                                         75128
*        USING GENDETS,R1                                         75128
*          MVC DDBLKSZE,PARMSYSB
*        DROP  R1                                                 75128
D03LBLKS EQU    *
D03ORDSN EQU    *
         SPACE  3
* CHECK FOR GENERATION DATA SETS
         SPACE  3
*    NOW, THE GDG NUMBER IS IN THE DDMBR FIELD, AND NOW WE HAVE TO
*    POP THE BRACKETS IN THERE.
         CLI   DDMBR,C'('      GDG ?                              75311
         BE    D03GDG0        YES                        JOL30061 76200
         CLI   DDMBR,C'+'      GDG ?                              75311
         BE    D03GDG1         YES                                75311
* NOT GDG, NO MEMBER, SO SET UP DSNAME PARAMETER                  86230
         SETUP DAPDSNAM,DDDSNAME                                  86230
         B     D03TMBR         NO, TEST IF MEMBER SPECIFIED       75311
         SPACE  3
D03GDG0  CLI   DDMBR+1,C' '   =' '                       JOL30061 76200
         BNE   D03GDG1        NOPE, MUST BE REL & NOCAT  JOL30061 76200
         CLC   DDMBR+2(4),=C'0000' REL(0) ?              JOL30061 76200
         BE    D03GDG1        YES, NORMAL PROCESSING.    JOL30061 76200
         CLC   DDMBR+2(4),BLANKS                         JOL30061 76200
         BE    D03GDG1                                   JOL30061 76200
* HERE GDG ABSOLUTE .                                    JOL30061 76200
         LH    R15,#DSN        GET LENGTH OF DSNAME               86230
         LA    R15,DDDSNAME(R15) POINT TO END OF DSNAME           86230
         MVC   0(9,R15),=C'.G0000V00'                             86230
         MVC   2(4,R15),DDMBR+2                                   86230
D03SETDS SETUP DAPDSNAM,DDDSNAME                                  86230
         B     D03TDISP       CONTINUE AS NORMAL(DISP...)
D03GDG1  MVI   DDMBR,C' '      BLANK '+' | '('                    75311
         IFNULL DDMBR,D03TDISP    BLANK GDGD NUMBER SOMEHOW ?     86230
* HERE WE HAVE A RELATIVE GDG NUMBER.
         LH    R15,#DSN        GET LENGTH OF DSNAME               86230
         LA    R15,DDDSNAME(R15) POINT TO END OF DSNAME           86230
         MVI   0(R15),C'('                                        86230
         MVC   1(1,R15),DDMBR+1   + OR - RELATIVE NUMBER          86230
         CLI   DDMBR+2,C'0'      XA WON'T ACCEPT (+0001)          86230
         BE    D03TST2           TEST IF ANOTHER ZERO             86230
         CLI   DDMBR+3,C'0'      XA WON'T ACCEPT (+001)           86230
         BE    D03TST3           TEST IF ANOTHER ZERO             86230
         CLI   DDMBR+4,C'0'      XA WON'T ACCEPT (+01)            86230
         BE    D03TST4           TEST IF ANOTHER ZERO             86230
* HERE, 0001 SAY
         MVC   2(1,R15),DDMBR+5   + OR - RELATIVE NUMBER          86230
         MVI   3(R15),C')'                                        86230
         B     D03SETDS           SET DSNAME PARAMETER            86230
         SPACE
D03TST4  DS    0H
* HERE, 0011 SAY
         MVC   2(2,R15),DDMBR+4   + OR - RELATIVE NUMBER          86230
         MVI   4(R15),C')'                                        86230
         B     D03SETDS           SET DSNAME PARAMETER            86230
         SPACE
D03TST3  DS    0H
* HERE, 0111 SAY
         MVC   2(3,R15),DDMBR+3   + OR - RELATIVE NUMBER          86230
         MVI   5(R15),C')'                                        86230
         B     D03SETDS           SET DSNAME PARAMETER            86230
         SPACE
D03TST2  DS    0H
* HERE, 0111 SAY
         MVC   2(4,R15),DDMBR+2   + OR - RELATIVE NUMBER          86230
         MVI   6(R15),C')'                                        86230
         B     D03SETDS           SET DSNAME PARAMETER            86230
         SPACE
D03TMBR  IFNULL DDMBR,D03TDISP               MEMBER NAME ?        75311
D03GDG2  EQU *                                                    75311
         SETUP DAPMEMBR,DDMBR                                     76200
NODSN    EQU *
D03TDISP DS  0H
* IF DDDISP(1)=' 'THEN IT WASN'T INITIALISED PROPERLY. WE WILL
* (LIKE TSO) DEFAULT IT TO OLD.
         CLI  DDDISP,C' '
         BNE  D03DISPA
         MVI  DDDISP,B'00010000'     SET TO OLD
D03DISPA DS   0H
         IFNULL DDDISP,D03TDCB          NO DISP FIELDS ?
* EXTRA CHECKS ARE REQUIRED FOR OLD OR SHARED DATA SETS
*
* IF THE UNIT IS SPECIFIED, BUT NO VOLUME THEN WE CANCEL THE
*   UNIT, OTHERWISE SVC 99 GETS UPSET, UNLIKE JCL, WHICH GOES
*   TO THE PASSED DATA SET QUEUE.
         TM   DDDISP,B'11000000' TEST FOR ZEROS FOR OLD DATA SET
         BM   DODISP1            NOT AN OLD ALLOCATION
         IFVALUE DDVOLUME,DODISP1 HAS A VOLUME, SO LEAVE UNIT
         CLEAR DDUNIT            SET UNIT TO BLANKS, PRESS ON.
DODISP1  EQU *
         TM   DDDISP,X'C0'       USES?
         BO   D03USES            YES, GO FIX IT UP
         TM   DDDISP,B'01000000' NEW ?
         BO   D03NEW
         TM   DDDISP,B'10000000' MOD ?
         BO   D03MOD
         TM   DDDISP,B'00010000' OLD ?
         BO   D03OLD
         MVI   DAPSTATS,X'08' SHR
         TM    DDDISP,B'11000000'  USES ?                         75128
         BO    D03USES             YES                            75128
         B     DDDISP2
D03MOD   MVI   DAPSTATS,X'02' MOD
         B     DDDISP2
D03NEW   MVI   DAPSTATS,X'04' NEW
         B     DDDISP2
D03OLD   MVI   DAPSTATS,X'01' OLD
         B     DDDISP2
D03USES  EQU   *                                                  75128
         FIX   'THIS SECTION*MAY** HAVE TO BE CHANGED FOR || DS'  75128
* HERE WE HAVE TO GENERATE A MOD CARD FOR THE DATA SET,           75128
*  THEN  ANOTHER CARD POINTING BACK TO IT WITH A DISP OF OLD      75128
         CONCAT 'MOD'         MAKE DISP 'MOD' FOR USES            75128
         MVC   LABEL,DDDDNAME SAVE DDNAME IN LABEL                75128
DDDISP2  EQU  *
         SETUP DAPSTATS,DAPSTATS
DODISP2  CLC DDDISP+1(2),BLANKS
         BE ENDDISP
         MVI   CALLAREA,0     SET TO ZERO
         LA R6,DDDISP+1
         BAL R15,FIXDISP
         CLI   CALLAREA,0     STILL = 0
         BE ENDDISP
         MVC   DAPNDISP,CALLAREA
         SETUP DAPNDISP
         SPACE 2
         CLI DDDISP+2,C' '              3 RD DISP=''
         BE ENDDISP
         LA R6,DDDISP+2
         BAL R15,FIXDISP
         MVC   DAPCDISP,CALLAREA
         SETUP DAPCDISP
         B ENDDISP
FIXDISP  CLI 0(R6),C' '
         BNE DELETE
         CONCAT ','
         B   ELOOP
         SPACE 1
DELETE   CLI 0(R6),C'D'
         BNE KEEP
         MVI   CALLAREA,X'04' DELETE
         B   ELOOP
KEEP     CLI 0(R6),C'K'
         BNE PASS
         MVI   CALLAREA,X'08' KEEP
         B   ELOOP
PASS     CLI 0(R6),C'P'
         BNE CATLG
         CONCAT ',PASS'
         B   ELOOP
CATLG    CLI 0(R6),C'C'
         BNE UNCATLG
         MVI   CALLAREA,X'02' CATLG
         B   ELOOP
UNCATLG  EQU  *
         CLI 0(R6),C'L'      INDICATOR FOR LAST DDCARD ?
         BE  TTEMPDSN
         FIX   'DON''T DO THIS '
*        MVI   CALLAREA,X'01' UNCATLG
ELOOP    BR    R15                      RETURN
TTEMPDSN EQU *
         CLI   DDDSNAME,C'&&'   TEMPORARY DSN?
         BNE   0(R15)           -> NO
         MVI   CALLAREA,X'04' DELETE
         BR    R15       RETURN
         SPACE
DISPERR  EQU *
         JOLERR 405,'INVALID DISPOSTION FOUND :- ',DDDISP
         SPACE 3
ENDDISP  EQU *
D03TDCB  EQU   *
         CLC DDOSVB,=AL2(DDCATLGS-DDOSVB+2) SHORT RECORD ?
         BNH NODCB
         TM    DDSPECT2,X'01' VSAM ? DONE MUCH,MUCH LATER         75128
         BO    NODCB                                              75128
         CLI DDRECFM,C'%'               IF SO,NODCB WAS SPECIFIED
         BE NODCB
*                                                                 75128
* CHECK IF DCBEXTRA IS BEING USED. IF SO, CHECK THAT IT CONTAINS  84282
*  A DATA SET NAME AS A MODEL DSCB. IF SO, SKIP AROUND THE SECTION
*  THAT PUTS ON THE DEFAULT MODEL DSCB.
         CLC   DDOSVB,=AL2(DDLEN)                        JOL30047 84282
         BNH   D03DEFDS       PUT IN A DEFAULT DSCB IF REQUIRED   84282
* CHECK IF THE DCBEXTRA FIELD IS A DATA SET NAME                  84282
*  IN FACT, WE ARE CHECKING THAT BEFORE A COMMA OR  BLANK         84282
*   THAT THERE IS A PERIOD OR AN EQUAL SIGN.                      84282
*
*  IF WE FIND AN "=" BEFORE A COMMA, THEN THERE IS NO DSNAME.     84282
*
         LA    R1,DDEXTRA                                         84282
         LA    R14,1                                              84282
         LA    R15,DDEXTRA+L'DDEXTRA                              84282
         SR    R15,R14         SO WE DON'T GO TOO FAR             84282
D03CHKDS EQU   *
         CLI   0(R1),C','     HAVE WE GOT THE COMMA YET?          84282
         BE    D03NGDG9       YES, MUST BE DSNAME, SKIP DEFAULT   84282
         CLI   0(R1),C'='     HAVE WE GOT AN = (KEYWORD=)         84282
         BE    D03DEFDS       YES, PUT IN THE DEFAULT DSNAME      84282
*                             BECAUSE WE DIDN'T FIND DSNAME       84282
         BXLE  R1,R14,D03CHKDS                                    84282
         B     D03NGDG9       NO = SIGN MUST BE DSNAME, SO OUT!   84282
*
D03DEFDS CLI   DDTYPE,DDGDG   IS THIS A GDG?                      84282
         BL    D03NGDG9       NO
         TM    DDUSE,X'C0'    NEW OR MOD?
         BZ    D03NGDG9       NO,SO DON'T PUT IN GDG DCB
           CLI DDDSNAME,C'*'   DUMMY DATA SET ?                   75311
           BE  D03NGDG9        YES, NO NO 'JOLDCB' EITHER         75311
* TEST IF NAME IS + WITH NOCAT (IE +GDG ON DSNAME)
         CLI   DDMBR+1,C'+'                                       75311
         BNE   D03NGDG9                                           75311
*          L   R1,AJOLGEN                                         75311
*          USING GENDETS,R1                                       75311
*          CONCAT GDGDCB,','                                      75311
********* CONCAT MACRO WONT WORK FOR MACRO GENERATED NAMES ***
*         MVC 0(L'GDGDCB,R10),GDGDCB
*         MVI L'GDGDCB(R10),C','
*         LA  R10,L'GDGDCB+1(R10)
*          DROP R1                                                75311
D03NGDG9 EQU   *
         CLC   DDOSVB,=AL2(DDLEN) GOT 'DCBEXTRA' TO GO IN ?       82300
         BNH   D03NEXTR       NOPE                                75128
         CLI   DDEXTRA,C','   DID USER PUT ',' IN ?               75128
         BNE   D03DCBD1                                           75128
         MVC   DAPDCBDS(L'DDEXTRA-1),DDEXTRA+1                    87150
         B     D03SETEX       SET UP DCB EXTRA                    87150
D03DCBD1 MVC   DAPDCBDS(L'DDEXTRA),DDEXTRA                        87150
D03SETEX SETUP DAPDCBDS
         MVC   DDOSVB,=AL2(DDLEN) TELL US WE HAVE USED DDEXTRA    87150
         B     D03NEXTR       SKIP AROUND NEXT PART               87150
*                                                                 75128
D03NEXTR DS    0H
         IFNULL DDRECFM,NORECFM
         SETSPEC DDRECFM,DAPRECFM,                                     *
               (M,02),(A,04),(S,08),(B,10),(T,20),(V,40),              *
               (F,80),(0,C0)
         IFNULL DDRECFM,D03RECOK
         JOLERR 401,'INVALID RECFM ''',DDRECFM,''' FOUND'
         FIX   'BUT WHAT?'
D03RECOK EQU   *
         SETUP DAPRECFM
NORECFM  IFNULL DDBLKSZE,NOBLKSZE
         SETUP DAPBLKSZ,DDBLKSZE                                  76200
NOBLKSZE IFNULL DDLRECL,NOLRECL
         SETUP DAPLRECL,DDLRECL                                   76200
NOLRECL  IFNULL DDBUFNO,NOBUFNO
         SETUP DAPBUFNO,DDBUFNO                                   76200
NOBUFNO  DS    0H
         IFNULL DDOPTCD,D03OPTOK
         SETSPEC DDOPTCD,DAPOPTCD,                                     *
               (R,01),(T,02),(Z,04),(A,08),(Q,08),(F,10),              *
               (H,10),(O,10),(C,20),(E,20),(B,40),(U,40),              *
               (W,80)
         IFNULL DDOPTCD,D03OPTOK
         JOLERR 402,'OPTCD INVALID:-',DDOPTCD
D03OPTOK EQU   *
*        SETUP DALOPTCD
NOOPTCD  IFNULL DDRKP,NORKP
         JOLERR 403,'DYNAMIC ALLOCATION WILL NOT ALLOW RKP'
NORKP    IFNULL DDKEYLEN,NOKEYLEN
         SETUP DAPKYLEN,DDKEYLEN                                  76200
NOKEYLEN IFNULL DDOVERFL,NOOVERFL
         JOLERR 404,'DYNAMIC ALLOCATION WILL NOT ALLOW CYLOFL'
NOOVERFL IFNULL  DDDENS,NODENS
         SR    R15,R15
         IC    R15,DDDENS
         SH    R15,=XL2'00F0' MAKE FULL NUMERIC
         LA    R1,=X'034383C3D3'
         IC    R14,0(R1,R15)
         STC   R14,DAPDEN
         SETUP DAPDEN
NODENS   EQU *
           IFNULL DDDSORG,NODSORG
         SETSPEC DDDSORG,DAPDSORG,                                     *
               (TC,0004),          TCAM  3705                          *
               (VS,0008),          VSAM                                *
               (TQ,0020),          TQ  MESSAGE QUEVE                   *
               (TX,0040),          TX  LINE GROUP                      *
               (GS,0080),          GRAPHICS                            *
               (PO,0200),(POU,0300),                                   *
               (MQ,0400),(CQ,0800),(CX,1000),                          *
               (DA,2000),(DAU,2100),                                   *
               (PS,4000),(PSU,4100)
         IFNULL DDDSORG,D03DSOOK
         JOLERR 407,'DDSORG.INVALID',DDDSORG
D03DSOOK SETUP DAPDSORG
NODSORG  EQU   *
         IFNULL  DDCODE,D03NCODE
         SETSPEC DDCODE,DAPCODE,                                       *
               (T,02),(A,04),(C,08),(B,10),                            *
               (F,20),(I,40),(N,80)
         IFNULL DDCODE,D03CDEOK
         JOLERR 406,'CODE INVALID',DDCODE
D03CDEOK SETUP DAPCODE
D03NCODE EQU  *
         IFNULL  DDBUFL,D03NBUFL
         SETUP DAPBUFL,DDBUFL                                     76200
D03NBUFL EQU  *
         IFNULL  DDFUNC,D03NOFUN
         SETSPEC DDFUNC,DAPFUNC,(I,80),(P,20),(R,40),(W,10)
D03NOFUN EQU  *
         TM   DDSPECT2,X'10'      TRACE?
         BZ   D03NTRAC
         SETUP DAPDIAGN
D03NTRAC TM   DDSPECTP,X'C0'      ACCEPT OR SKIP ERRORS?
         BZ   D03NOERR
         TM   DDSPECTP,X'80' SKIP? GIVE IT PRECEDENCE...
         BZ   D03ACC
         MVI   DAPEROPT,X'40'      SKIP
D03SETER SETUP DAPEROPT
         B    D03NOERR
D03ACC   MVI   DAPEROPT,X'80'      ACCEPT
         B     D03SETER
D03NOERR EQU  *
         CLC   DDOSVB,=AL2(DDLEN) STILL GOT 'DCBEXTRA' TO GO IN ? 75311
         BNH   ENDDCB         NOPE                                87150
         JOLERR 408,'DCB-EXTRA NOT SUPPORTED WITH DYNAMIC ALLOCATION'
ENDDCB   EQU *
           EJECT
         TM  DDSPECT2,X'08'     FREE AT CLOSE??
         BZ  D03NOCLS
         SETUP DAPCLOSE
D03NOCLS EQU  *
NODCB    EQU *
         CLC DDOSVB,=AL2(DDCATLGS-DDOSVB+2) SHORT RECORD ?
         BNH NOSPACE
         IFNULL DDPRIM,DDSEC,DDDIRECT,NOSPACE
         CLI   DDCYLTRK,C'B'  BLOCK ALLOCATION ?         JOL30078 76200
         BNE   D03SPCNM       NORMAL SPACE ALLOC (C | T) JOL30078 76200
         IFNULL DDBLKSZE,NOSPACE IF NO BLK -> OUT        JOL30078 76200
D03SPCNM EQU   *                                         JOL30078 76200
         FIX   'USE SPECIAL NEW (3.1) BLK SIZE)'         JOL30078 76200
         IFNULL DDCYLTRK,TRYPRIM
         CLI   DDCYLTRK,C'T'
         BNE   D03TCYL
         SETUP DAPTRK                                             76200
         B     TRYPRIM
D03TCYL  CLI DDCYLTRK,C'C'              CYLS SPECIFIED ?
         BNE   D03TABS
         SETUP DAPCYL                                             76200
         B     TRYPRIM
D03TABS  CLI   DDCYLTRK,C'A'  ABSTRACK                            75128
         BNE   D03TBLK                                            75128
         JOLERR 411,'ABSTRK NOT SUPPORTED IN DYNAMIC ALLOCATION'
         B     TRYPRIM                                            75128
D03TBLK  CLI DDCYLTRK,C'B'                   BLOCKS SPECIFIED
         BNE   D03SERR
         SETUP DAPBLKLN,DDBLKSZE                                  76200
         B     TRYPRIM
D03SERR  JOLERR 412,'INVALID SPACE ALLOCATION:-',DDCYLTRK
         B     TRYPRIM
TRYPRIM  EQU *
         IFNULL DDPRIM,D03TSEC
         SETUP DAPPRIME,DDPRIM
D03TSEC  IFNULL DDSEC,D03TDIR
         SETUP DAPSECND,DDSEC                                     76200
D03TDIR  IFNULL DDDIRECT,D03TRLSE
         SETUP DAPDIR,DDDIRECT                                    76200
D03TRLSE TM    DDSPECT2,X'02' NORLSE CODED ?                      75128
         BO    D03TCONT         NORLSE CODED, TEST IF CONTIG
         CLI   DDCYLTRK,C'A'   ABSTR CANT HAVE RLSE
         BE    D03TCONT
         SETUP DAPRLSE                                            76200
D03TCONT EQU  *
         TM    DDSPECT2,X'80' CONTIG CODED ?                      75128
         BZ    D03TMXIG       TEST IF MXIG WAS                    75128
         MVI   DAPSPFRM,X'08'      CONTIG
D03SPCF  SETUP DAPSPFRM
         B     D03COMM1       TEST ROUND NOW                      75128
         SPACE 3                                                  75128
D03TMXIG TM    DDSPECTP,X'04' MXIG ON ?                           75128
         BZ    D03TALX                                            75128
         MVI   DAPSPFRM,X'04'      MXIG
         B     D03SPCF
         SPACE 3                                                  75128
D03TALX  TM    DDSPECTP,X'02' ALX ?                               75128
         BZ    D03COMM1
         MVI   DAPSPFRM,X'02'      ALX
         B     D03SPCF
D03COMM1 EQU   *
D03TROUN TM    DDSPECTP,X'01'  ROUND ?
         BZ    D03NOTRN                                           75128
         SETUP DAPROUND
D03NOTRN EQU   *
NORLSE   EQU   *                                                  76200
NOSPACE    EQU *
TUNIT      EQU *
           TM  DDUSE,X'02'     DEFER ON ?                         75311
           BO  D03ISUST        YES,UNIT MUST BE OUTPUT THEN       75311
         FIX   'PASSWORD UP MUCH HIGHER'
           IFNULL DDUNIT,DDUNITNO,NOUNIT                          75311
D03ISUST   EQU *                                                  75311
           SPACE
           TM DDUSE,1          UNIT AFFINITY ?
           BZ NOTAFF                      NO,SO PROCESS REST OF UNIT
D03AFF     EQU  *
           CONCAT ',UNIT=AFF=',DDUNIT                             74303
           FIX 'RDJFCB, TIOT,  GET UNIT AND AFF'
           B  ENDUNIT
NOTAFF     EQU *
*        L     R1,AGENDETS                                        75128
*        USING GENDETS,R1                                         75128
*        L     R1,ASWAPUNI                                        75128
*        DROP  R1                                                 75128
*        LM  R14,R15,4(R1)
*        L  R1,0(R1)
*        CLC DDUNIT,0(R1)
*        BE  D03SWAP
*        BXLE R1,R14,*-10
*        B  D03NOSWP
*D03SWAP  MVC  DDUNIT,8(R1)
D03NOSWP EQU  *
         SETUP DAPUNIT,DDUNIT                                     76200
         SPACE
******* VETS WILL DO THIS LATER ***** **************
         CLC =C'IS ',DDDSORG
         BNE D03NIS          NOT AN IS DATA SET
         MVI DDUNITNO,C'P'    SET UP PARALLEL MOUNTING
D03NIS   DS    0H
* NOW TEST THE UNIT COUNT
         IFVALUE DDUNITNO,D03UNO UNIT NUMBER -> YES, PUT IT IN  75311
         TM    DDUSE,X'02'       WELL, IS DEFER ON ?            75311
         BZ    UNITLEFT
         SPACE 1                                                75311
D03UNO   EQU *                                                  75311
         CLI   DDUNITNO,C'P'  PARALLEL ?                          76200
         BE    D03PARXX                                           76200
         SETUP DAPUNCNT,DDUNITNO                                  76200
         B     ENDUNIT                                            76200
D03PARXX SETUP DAPPARAL       SETUP PARALLEL                      76200
NOUNITNO DS    0H
*        AIF   (&X8).X8600                                       88036
         TM    DDUSE,X'02'    DEFER ?                             75128
         BZ    UNITLEFT       NO,ADD ')'                          75128
         SETUP DAPDEFER                                           87150
.X8600   ANOP                                                    88036
UNITLEFT DS    0H                                                 76200
ENDUNIT  DS    0H
NOUNIT   DS    0H
* THIS NEXT SECTION OF CODE ADDS THE LABEL PARAMETER.             75128
         SPACE 1
         CLI   DDTYPE,DDSYSIN SYSIN? ALWAYS PUT 'IN'     JOL30056 76200
         BNE   D03TPUN
         MVI   DAPINOUT,X'40'
         SETUP DAPINOUT
         B     NOLABEL
D03TPUN  CLI   DDTYPE,DDPUNCH SYSOUT OR SOMESUCH ?                76200
         BNH   NOLABEL        YES, DON'T PUT A LABEL IN           75128
* IF ANY OF THE LABEL PARAMETERS ARE SPECIFIED, WE MUST OUTPUT    75128
*  THE LABEL PARAMETER, BUT FURTHERMORE, WE MUST ADD 'IN' / 'OUT' 75128
*  UNDER SPECIAL CIRCUMSTANCES, EG IF A TAPE ETC FOR FORTRAN      75128
         IFVALUE DDLABEL,DDLABTYP,MAKELAB                JOL30056 76200
         TM    DDSPECTP,B'00110000' PASSWORD | NOPREAD?  JOL30056 76200
         BM    MAKELAB                                   JOL30056 76200
* NOW IF INPUT, PUT LABEL IN, UNLESS IT IS '&&UT'; THIS  JOL30056 76200
*  MAY BE A PASSED WORK DATA SET.                        JOL30056 76200
         CLC   =C'&&UT',DDDSNAME                         JOL30056 76200
         BE    NOLABEL                                   JOL30056 76200
* NOW TEST INPUT                                         JOL30056 76200
         TM    DDDISP,B'11010000'
         BZ    MAKELAB             YES                   JOL30056 76200
* WE USED TO PUT LABEL OUT ESPECIALLY FOR TAPES.         JOL30056 76200
* THERE APPEARS TO BE NO REASON TO DO THIS AT ALL,       JOL30056 76200
*  BECAUSE QSAM WILL OPEN IT HOWEVER THE PROGRAMMER      JOL30056 76200
*  SPECIFIES, AND BSAM (FORTRAN) WILL OPEN IT AS OUT/IN  JOL30056 76200
*  WHICH WILL BE OK ANYWAY                               JOL30056 76200
         B     NOLABEL                                   JOL30056 76200
MAKELAB  EQU *
         IFNULL DDLABEL,NOFLSEQ
         SETUP DAPDSSEQ,DDLABEL
NOFLSEQ  DS    0H
         IFNULL DDLABTYP,D03TPROT  NO LABEL TYPE, GO TEST PROTECT 75128
         SETSPEC DDLABTYP,DAPLABEL,                                    *
               (0,02),        SL                                       *
               (1,01),        NL                                       *
               (2,10),        BLP                                      *
               (3,08),        SUL                                      *
               (4,04),        NSL                                      *
               (5,40),        AL                                       *
               (6,21),        LTM                                      *
               (7,48)         AUL
         SETUP DAPLABEL
D03TPROT EQU   *
         TM    DDSPECTP,X'20' 'PASSWORD' ?                        75128
         BZ    D03TREAD       -> NO, CHECK 'NOPWREAD'             75128
         MVI   DAPPASPR,X'30' READ,NOWRITE
D03SETPW SETUP DAPPASPR
         B     D03TINOU       NOW TEST IN,OUT REQD                75128
D03TREAD TM    DDSPECTP,X'10' 'NOPWREAD'                          75128
         BZ    D03TINOU       NOPE                                75128
         MVI   DAPPASPR,X'10' NOREAD/WRITE WITHOUT PASSWORD
         B     D03SETPW
D03TINOU EQU   *
         TM  DDDISP,B'11010000'     OLD OR NEW?
         BNZ   D03OUT                                             75128
         MVI   DAPINOUT,X'40' IN
         B     D03SETIN
D03OUT   B     D03TRETP       *********                  JOL30056 76200
         FIX   'DOES ANYBODY KNOW WHAT TO FIX?'
         TM    DDUNITYP,X'80' TEST IF TAPE               JOL30056 76200
         BO    D03TRETP       NO, DON'T PUT OUT ON LABEL.JOL30056 76200
         MVI   DAPINOUT,X'80' OUT
D03SETIN SETUP DAPINOUT
D03NOIN  EQU   *                                                  75128
D03TRETP EQU   *
         CLI   DDRETPD,C'R'   RETENTION PERIOD ?
         BNE   D03TEXPD       NO,TRY EXPIRY DATE THEN
         SETUP DAPRETPD,DDEXPDT
         B  D03ENDLB
D03TEXPD IFNULL DDEXPDT,D03ENDLB
D03EXPDT SETUP DAPEXPDT,DDEXPDT                                   76200
         B     D03ENDLB                                           75128
D03ENDLB EQU  *
NOLABEL  DS   0H
         TM    DDSPECTP,X'08' PRIVATE EXPLICITY CODED?            75128
         BO    D03PRIV                                            75128
         TM DDUNITYP,B'01100000' PERM OR PREFERRED TO STAY MOUNTED?
         BNZ   D03PREF                                            75128
         IFNULL DDVOLUME,D03PREF                                  75128
         CLI DDDSNAME,C'&&'    TEMPORARY CAN HAVE PRIVATE ??
         BE  D03PREF
* NOW CHECK IF THE VOLUME IS IN THE 'RETVOLS' CSECT
*        L  R1,AGENDETS
*        USING GENDETS,R1
*        L   R1,ARETVOLS
*        LM  R14,R15,4(R1)   LOAD BXLE CONSTANTS
*        DROP  R1
*        L   R1,0(R1)        LOAD START OF TABLE
*        CLC   =C'ALL ',0(R1)                                     75128
*        BE    D03PREF                                            75128
*        CLC   =C'NONE ',0(R1)                                    75128
*        BE    D03PRIV                                            75128
*D03TRET  CLC DDVOLUME(6),0(R1) VOLUME IN TABLE ?
*         BE  D03PREF         YES,DON'T PUT PRIVATE ON DDCARD
*         BXLE R1,R14,D03TRET
D03PRIV  SETUP DAPPRIVT                                           76200
D03PREF  EQU   *                                                  76200
         CLI  DDDISP+1,C'P'   PASS ON ?                           75128
         BNE   NORETAIN                                           75128
         CONCAT 'RETAIN,'
         B     D03TSEQ                                            75128
NORETAIN EQU   *
D03TSEQ  CLC DDOSVB,=AL2(DDCATLGS-DDOSVB+2) SHORT RECORD ?      75128
         BNH  D03NCXX                                           75128
         IFNULL DDVOLSEQ,D03TMAX
         SETUP DAPVLSEQ,DDVOLSEQ                                  76200
D03TMAX  IFNULL DDMAXVOL,D03NCXX
         SETUP DAPVLCNT,DDMAXVOL                                  76200
D03NCXX  EQU  *
         CLI   DDVOLUME,C'*'  VOLREF ?                            75128
         BE VOLREF
         IFNULL  DDVOLUME,ENDVOL
         MVC   DAPVLSE1,DDVOLUME
         MVI   DA#VLSER+1,1  SETUP 1 VOLUME
         CLC   DDVOLUME+6(6),BLANKS
         BE    D03EVOLS
         MVC   DAPVLSE2,DDVOLUME+6
         MVI   DA#VLSER+1,2   SETUP 2 VOLUMES
         CLC   DDVOLUME+12(6),BLANKS
         BE    D03EVOLS
         MVC   DAPVLSE3,DDVOLUME+12
         MVI   DA#VLSER+1,3
         CLC   DDVOLUME+18(6),BLANKS
         BE    D03EVOLS
         MVC   DAPVLSE4,DDVOLUME+18
         MVI   DA#VLSER+1,4
         CLC   DDVOLUME+24(6),BLANKS
         BE    D03EVOLS
         MVC   DAPVLSE5,DDVOLUME+24
         MVI   DA#VLSER+1,5
         CLC   DDVOLUME+30(6),BLANKS
         BE    D03EVOLS
         MVC   DAPVLSE6,DDVOLUME+30
         MVI   DA#VLSER+1,6
         CLC   DDVOLUME+36(6),BLANKS
         BE    D03EVOLS
*        MVC   DAPVLSE7,DDVOLUME+36
*        MVI   DA#VLSER+1,7
D03EVOLS SETUP DAPVLSER
         B  ENDVOL
VOLREF   EQU   *
         FIX   'VOLREF'
         B     D03TPASS
         MVC 0(L'DDVOLUME-1,R10),DDVOLUME+1 SHIFT VOLREF DSN
         LA R10,L'DDVOLUME-1(R10)
         SETUP DAPVLRDS,DDVOLUME+1                                76200
D03TPASS CLI   DDDISP+1,C'P'  PASS ON ? -> MAKE RETAIN            75128
         BNE   ENDVOL                                           75128
ENDVOL   EQU *
         CLI DDDDNAME,C'%'   DISPOSITION PROCESSING INSTRUCTION?
         BNE D03ORDDD
         MVC WORK+2(5),DDDDNAME+1
         B   D03OPOP
D03ORDDD EQU  *
         TM  DDUSE,X'C0'   USES?                              75128
         FIX   'BO  D03$VU'                                       75128
         IFNULL DDDDNAME,D03NDD
         SETUP DAPDDNAM,DDDDNAME
D03NDD   DS   0H
D03OPOP  EQU  *
*        SETUP DAPPERMA                                         76200
* TELL DYNALLOC TO RETURN THE DSNAME AND DDNAME TOO.
         SETUP DAPRTDDN
         SETUP DAPRTDSN
         SETUP DAPRTVOL
         MVC   DAVRTDDN,=H'8'    REINTIALISE MAX LENGTH OF DDNAME
         MVC   DAVRTDSN,=H'44'   REINTIALISE MAX LENGTH OF DSNAME
         MVC   DAVRTVOL,=H'6'    REINTIALISE MAX LENGTH OF VOLUME
         MVC   #ERETDDN,=H'0'    SET RETURN LENGTH TO ZERO
         MVC   #ERETDSN,=H'0'    SET RETURN LENGTH TO ZERO
         MVC   #ERETVOL,=H'0'    SET RETURN LENGTH TO ZERO
         SPACE 2
* THE PARAMETER LIST HAS BEEN SET-UP, APART FORM THE PARAMETERS
*  TO SVC 99 PROPER.
* LEST DO THEM
         SH    R10,=H'4'       BACK OFF 4 BYTES FOR LAST PARM
         MVI   0(R10),X'80' -4 SET END
         LA    R1,S99RB
         ST    R1,CALLAREA
         MVI   CALLAREA,S99RBPND
         SPACE 2
         MVI   S99RBLN,20     LENGTH OF REQUEST BLOCK
         MVI   S99VERB,S99VRBAL ALLOCATION VERB
         SPACE 2
         TESTAUTH
         LTR   R15,R15
         BNZ   D03NOTAU
S99AUTH  EQU   S99WTVOL+S99WTDSN+S99WTUNT+S99OFFLN+S99MOUNT
         MVI   S99FLG21,S99AUTH
D03NOTAU EQU   *
         LA    R1,S99RB                 REQUEST BLOCK POINTER
         L     R15,=V(DYNDUMP)          GET DUMP ROUTINE
         LTR   R15,R15
         BZ    D03REALA
         B     D03REALA
         WXTRN DYNDUMP
         BALR  R14,R15                  GO TO IT
D03REALA LA    R1,CALLAREA
         DYNALLOC
*
*  CHECK TO SEE IF ERRORS OCCURED.
*
         ST    R15,CALLAREA+12          SAVE DYNALLOC RETURN CODE
         LTR   R15,R15
         BNZ   D03ERR                RETURN CODE ZERO
         L     R0,S99ERROR           TEST ERR AND INFO CODE
         LTR   R0,R0                 ERROR ?
         BNZ   D03ERR
D0399OK  L     R15,CALLAREA+12      RESTORE DYNALLOC RETURN CODE
         MVC   #ERETDDN(10),DAVRTDDN COPY RETURNED DDNAME
         MVC   #ERETDSN(46),DAVRTDDN COPY RETURNED DSNAME
         MVC   #ERETVOL(8),DAVRTVOL  COPY RETURNED VOLUME
         JOLRETN
         DC H'0'    ABEND
D03ERR   LA    R1,S99RB
         LR    R0,R15          R15
         $CALL UJD03ERR
         CLC   S99ERROR,=X'0410'      DDNAME NOT AVALIABLE ?
         BNE   D03NDDNM
         CALL  ASKFREE         ASK IF WE SHOULD FREE DDNAME
         LTR   R15,R15
         BZ    D03REALA        TRY AGAIN
D03NDDNM MVC   #ERETDDN(10),DAVRTDDN COPY RETURNED DDNAME
         MVC   #ERETDSN(46),DAVRTDDN COPY RETURNED DSNAME
         MVC   #ERETVOL(8),DAVRTVOL  COPY RETURNED VOLUME
         JOLRETN RC=4
         AGO   .NED            SKIP UNUSED CODE                  88036
* NOW CHECK IF THE JCL CARD WE GENERATED WAS ONE FOR 'USES'       75128
*  AND IF SO WE ALTER THE DISPOSITION, PUT IN A VREF, AND         75128
*  GENERATE IT AGAIN.                                             75128
         TM    DDDISP,X'C0'   USES ?                              75128
         BO    D03USE2        YES                                 75128
         JOLRETN RC=0         NO, FINISHED, SO RETURN NOW         75128
D03USE2  NI    DDUSE,X'3F'    MAKE OLD NOW                        75128
         MVC   DDDDNAME,LABEL (WHERE WE SAVED THE REAL DDNAME)    75128
         CLEAR DDVOLUME                                           75128
         MVC   DDVOLUME(7),=C'**.$$VU'                            75128
         MVC   DDVOLUME+7(4),DDSTMT                               75128
         OC    DDVOLUME+7(4),=C'0000'
         MVI   DDRECFM,C'%'     MAKE NODCB, COS IF THE DATASET
*                                     IS OLD, WE DONT WANT TO DESTROY
*                             THE OLD DCB IN THE LABEL
         XC    #WORK(18),#WORK                                    75128
         LA    R10,WORK+15                                        75128
         B     D03TDSN                                            75128
         JOLRETN
.NED     ANOP                                                    88036
         AIF   ('&TYPE' NE 'SCHED').COMPAL1
TRANS    DS    CL300
.COMPAL1 ANOP
         DC  100S(*)
         LTORG
DYNCON   CSECT
         COPY     DYNAREAS
         LTORG
         DC C'COMPILE DATE=&SYSDATE.,TIME=&SYSTIME.'               DASD
         LTORG                                                     DASD
         DS    0D
         PRINT GEN,NODATA
         AIF  (NOT &X8).NOX8MAC
         TITLE 'FIXED LOW CORE'
         XAMFLC  DSECT=YES
PSA      EQU   FLC
PSATOLD  EQU   FLCTOLD            FOR MVS,F4 COMPATIBILITY
         TITLE 'COMMUNICATIONS VECTOR TABLE'
         XAMCVT  DSECT=YES
         TITLE 'TASK CONTROL BLOCK    '
         XAMTCB  DSECT=YES
TCBFLGS1 EQU   TCBFLAG1       EQUIVALENT FIELDS ON F4,X8
         TITLE 'REQUEST BLOCK         '
         XAMRB   DSECT=YES
         TITLE 'FILE CONTROL TABLE    '
         XDDFCT
         TITLE 'JOB-STEP CONTROL BLOCK'
         XDDJSCB
JSCBLEN  EQU   *-JSCB         MY NAME FOR ITS LENGTH
JSCBDISP EQU   0              MVS,F4 NAME FOR DISPLACEMENT TO START
JSCBOPTS EQU   JSCBSTS
         TITLE 'COMMAND SCHEDULER CONTROL BLOCK'
         XDDCSCB
         TITLE 'PDS DIRECTORY ENTRY'
         KAAPDS
.NOX8MAC ANOP
           END
